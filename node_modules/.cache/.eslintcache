[{"C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\index.js":"1","C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\App.js":"3","C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\components\\Footer.js":"4","C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\components\\NotFoundComponent.js":"5","C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\screens\\DetailedDevice.js":"6","C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\screens\\DetailedSwitch.js":"7","C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\screens\\NotFound.js":"8","C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\screens\\Overview.js":"9","C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\screens\\AllSwitches.js":"10","C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\components\\Header.js":"11","C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\screens\\AllDevices.js":"12","C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\screens\\ControlPanel.js":"13","C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\screens\\Login\\Login.js":"14","C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\components\\OverviewDeviceList.js":"15","C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\components\\OverviewTopDownStaticElement.js":"16","C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\components\\Graphs.js":"17","C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\components\\OverviewTopDownSwitchElement.js":"18","C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\components\\OverviewTopDownDeviceElement.js":"19","C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\components\\Counter.js":"20","C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\components\\OverviewSwitchList.js":"21","C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\openHAB\\openHAB.js":"22","C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\services\\ApiCallBackend.js":"23","C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\dummyData\\Measurements.js":"24","C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\screens\\UserAccountCreation.js":"25","C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\screens\\AdminAlert.js":"26","C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\components\\DeviceConfig.js":"27","C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\components\\TimeConfig.js":"28","C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\components\\Notification.js":"29"},{"size":690,"mtime":1699537309698,"results":"30","hashOfConfig":"31"},{"size":375,"mtime":1699537309698,"results":"32","hashOfConfig":"31"},{"size":2154,"mtime":1703531393421,"results":"33","hashOfConfig":"31"},{"size":601,"mtime":1699537309690,"results":"34","hashOfConfig":"31"},{"size":313,"mtime":1699537309691,"results":"35","hashOfConfig":"31"},{"size":2083,"mtime":1702142482059,"results":"36","hashOfConfig":"31"},{"size":2313,"mtime":1702142482060,"results":"37","hashOfConfig":"31"},{"size":704,"mtime":1700510784000,"results":"38","hashOfConfig":"31"},{"size":7459,"mtime":1703643077940,"results":"39","hashOfConfig":"31"},{"size":5594,"mtime":1703641177936,"results":"40","hashOfConfig":"31"},{"size":2768,"mtime":1703642866171,"results":"41","hashOfConfig":"31"},{"size":2578,"mtime":1703641074915,"results":"42","hashOfConfig":"31"},{"size":9300,"mtime":1703641185234,"results":"43","hashOfConfig":"31"},{"size":4089,"mtime":1703642850020,"results":"44","hashOfConfig":"31"},{"size":2932,"mtime":1702769886281,"results":"45","hashOfConfig":"31"},{"size":486,"mtime":1701614433299,"results":"46","hashOfConfig":"31"},{"size":5699,"mtime":1699537309690,"results":"47","hashOfConfig":"31"},{"size":1242,"mtime":1701615550686,"results":"48","hashOfConfig":"31"},{"size":1752,"mtime":1702142482052,"results":"49","hashOfConfig":"31"},{"size":891,"mtime":1699537309689,"results":"50","hashOfConfig":"31"},{"size":2084,"mtime":1702142482051,"results":"51","hashOfConfig":"31"},{"size":668,"mtime":1702142482055,"results":"52","hashOfConfig":"31"},{"size":639,"mtime":1699537309702,"results":"53","hashOfConfig":"31"},{"size":402,"mtime":1699537309693,"results":"54","hashOfConfig":"31"},{"size":2814,"mtime":1703641190960,"results":"55","hashOfConfig":"31"},{"size":276,"mtime":1703167911110,"results":"56","hashOfConfig":"31"},{"size":4594,"mtime":1703643781597,"results":"57","hashOfConfig":"31"},{"size":3514,"mtime":1703643208493,"results":"58","hashOfConfig":"31"},{"size":869,"mtime":1703531393422,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1bow6le",{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"99"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118"},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"144"},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151"},{"filePath":"152","messages":"153","suppressedMessages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"155","messages":"156","suppressedMessages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\index.js",[],[],"C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\reportWebVitals.js",[],[],"C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\App.js",[],[],"C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\components\\Footer.js",[],[],"C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\components\\NotFoundComponent.js",["158"],[],"import {useNavigate} from \"react-router-dom\";\r\nimport {useEffect} from \"react\";\r\n\r\n\r\nconst NotFoundComponent = () => {\r\n    let navigate = useNavigate();\r\n\r\n\r\n    useEffect(() => {\r\n        navigate(\"/404\");\r\n    }, []);\r\n\r\n    return(\r\n        <div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NotFoundComponent","C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\screens\\DetailedDevice.js",["159","160"],[],"import React, { useEffect, useState, useRef } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport Graphs from \"../components/Graphs\";\r\nimport openHAB from \"../openHAB/openHAB\";\r\nimport Axios from \"axios\";\r\nimport { token } from \"./Login/Login\";\r\nimport base64 from 'base-64';\r\n\r\nconst DetailedDevice = () => {\r\n  const [openHABItem, setOpenHABItem] = useState(null);\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  };\r\n\r\n  const timerRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    document.title = \"SmartRoom – \" + id;\r\n    let auth = sessionStorage.getItem(\"auth\");\r\n    if (auth !== \"true\") {\r\n      navigate(\"/login\");\r\n    } else {\r\n      timerRef.current = setInterval(() => {\r\n        fetchOpenHABItem();\r\n      }, 1000);\r\n\r\n      return () => {\r\n        clearInterval(timerRef.current);\r\n      };\r\n    }\r\n  }, [id, navigate]);\r\n\r\n  const fetchOpenHABItem = async () => {\r\n    try {\r\n      const response = await Axios.get(\r\n        openHAB.url+\"/api/v1/devices/items/\"+id,\r\n        config\r\n      );\r\n      setOpenHABItem(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching OpenHAB item:\", error);\r\n      // Puedes manejar el error de manera más informativa aquí\r\n    }\r\n  };\r\n\r\n  if (openHABItem === null) {\r\n    // Puedes mostrar un indicador de carga aquí\r\n    return <div>Loading...</div>;\r\n  } else {\r\n    return (\r\n      <div className=\"vertical-scroll-area\">\r\n        <h2 className=\"title\">{openHABItem.label}</h2>\r\n        <div className=\"card vertical\">\r\n          <div\r\n            key={id}\r\n            className=\"card-image vertical\"\r\n            style={{\r\n              backgroundImage: `url('/resources/${id}.svg')`,\r\n            }}\r\n          />\r\n          <div className=\"card-title card-content\">\r\n            <p>\r\n              Current consumption: <b>{openHABItem.state} kWh</b>\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <Graphs />\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default DetailedDevice;\r\n","C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\screens\\DetailedSwitch.js",["161","162","163","164"],[],"import { React, useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport ToggleButton from \"react-toggle-button\";\r\nimport Axios from \"axios\";\r\nimport axios from \"axios\";\r\nimport Graphs from \"../components/Graphs\";\r\nimport openHAB from \"../openHAB/openHAB\";\r\nimport { token } from \"./Login/Login\";\r\nimport base64 from 'base-64';\r\n\r\n  const DetailedSwitch = () => {\r\n  const navigate = useNavigate();\r\n  const { id } = useParams();\r\n  //Fetching openHAB switch item\r\n  const [openHABItem, setOpenHABItem] = useState([]);\r\n  const [toggle, setToggle] = useState(false); // Switch toggle handler\r\n  const [responseStatus, setResponseStatus] = useState([]);\r\n\r\n  //let base64 = require(\"base-64\");\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.title = \"SmartRoom – Details\" ;\r\n    let auth = sessionStorage.getItem(\"auth\");\r\n    if (auth !== \"true\") {\r\n      navigate(\"/login\");\r\n    } else {\r\n      fetchOpenHABItem();\r\n    }\r\n  }, []);\r\n\r\n  const fetchOpenHABItem = async () => {\r\n    const response = await Axios(openHAB.url + \"/api/v1/devices/items/\" + id, config);\r\n    setOpenHABItem(response.data);\r\n    if (response.data.state === \"ON\") {\r\n      setToggle(true);\r\n    } else {\r\n      setToggle(false);\r\n    }\r\n  };\r\n  const tokens = id.split('_');\r\n  const xtokens = tokens.slice(-2);\r\n\r\n  async function sendOpenHABRequest(toggle) {\r\n    if (toggle) {\r\n      axios\r\n        .post(openHAB.url + \"/api/v1/devices/items/\" + xtokens[0] + \"/\" + xtokens[1]+ \"/state\", {\"state\": \"OFF\"}, config)\r\n        .then((response) => {\r\n          setResponseStatus(response.data);\r\n        });\r\n    } else {\r\n      axios\r\n        .post(openHAB.url + \"/api/v1/devices/items/\" + xtokens[0] + \"/\" + xtokens[1] + \"/state\", {\"state\": \"ON\"}, config)\r\n        .then((response) => {\r\n          setResponseStatus(response.data);\r\n        });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"vertical-scroll-area\">\r\n      <h2 className=\"title\">{openHABItem.label}</h2>\r\n      <ToggleButton\r\n        value={toggle}\r\n        onToggle={() => {\r\n          setToggle(!toggle);\r\n          sendOpenHABRequest(toggle);\r\n        }}\r\n      />\r\n    </div>\r\n    \r\n  );\r\n};\r\n\r\nexport default DetailedSwitch;\r\n","C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\screens\\NotFound.js",[],[],"C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\screens\\Overview.js",["165","166","167","168","169","170","171"],[],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport openHAB from \"../openHAB/openHAB\";\r\nimport OverviewTopDownDeviceElement from \"../components/OverviewTopDownDeviceElement\";\r\nimport OverviewTopDownSwitchElement from \"../components/OverviewTopDownSwitchElement\";\r\nimport OverviewDeviceList from \"../components/OverviewDeviceList\";\r\nimport OverviewSwitchList from \"../components/OverviewSwitchList\";\r\nimport OverviewTopDownStaticElement from \"../components/OverviewTopDownStaticElement\";\r\nimport Counter from \"../components/Counter\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport DeviceConfigurator from \"../components/DeviceConfig\";\r\nimport { token, isUserAdmin } from \"./Login/Login\";\r\nimport base64 from 'base-64';\r\n\r\nvar regex = /^(?!.*Sensor).*$/i;\r\n\r\nconst Overview = () => {\r\n  const [openHABItems, setOpenHABItems] = useState([]);\r\n  const [peopleInsideRoom, setPeopleInsideRoom] = useState()\r\n  const [energyConsumptionData, setEnergyConsumptionData] = useState({\r\n    averageEnergy: 0,\r\n    devicesCount: 0,\r\n    switchCount: 0,\r\n    totalEnergy: 0,\r\n  });\r\n\r\n  const navigate = useNavigate();\r\n\r\n  // const config = {\r\n  //   headers: { Authorization: token },\r\n  //   };\r\n\r\n  const config = {\r\n    headers: { Authorization: sessionStorage.getItem(\"token\") },\r\n  };\r\n\r\n  const timerRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    document.title = \"SmartRoom – Overview\";\r\n    let auth = sessionStorage.getItem(\"auth\");\r\n    if (auth !== \"true\") {\r\n      navigate(\"/login\");\r\n    } else {\r\n      timerRef.current = setInterval(function () {\r\n        fetchOpenHABItems();\r\n        fetchEnergyConsumptionData();\r\n        fetchPeopleInsideRoom();\r\n      }, 1000);\r\n      return () => {\r\n        clearInterval(timerRef.current);\r\n      };\r\n    }\r\n  }, []);\r\n\r\n  const fetchPeopleInsideRoom = async () => {\r\n  try {\r\n    const response = await Axios.get(openHAB.url + \"/api/v1/devices/roomstatus\", config);\r\n    //console.log(response.data.amount); // Access the correct key\r\n    const numberOfPeopleInsideRoom = response.data.amount;\r\n    setPeopleInsideRoom(numberOfPeopleInsideRoom);\r\n  } catch (error) {\r\n    console.error(\"Error fetching number of people inside the room:\", error);\r\n  }\r\n};\r\n\r\n  const fetchOpenHABItems = async () => {\r\n    const response = await Axios.get(openHAB.url + \"/api/v1/devices/items\", config);\r\n    setOpenHABItems(response.data);\r\n  };\r\n\r\n  const fetchEnergyConsumptionData = async () => {\r\n    try {\r\n      const response = await Axios.get(\r\n        openHAB.url + \"/api/v1/devices/energy_consumption\",\r\n        config\r\n      );\r\n\r\n      //console.log(\"Energy Consumption Response:\", response.data);\r\n\r\n      // Update state with the fetched energy consumption data\r\n      setEnergyConsumptionData({\r\n        averageEnergy: response.data.average_energy,\r\n        devicesCount: response.data.devices_count,\r\n        switchCount: response.data.switch_count,\r\n        totalEnergy: response.data.total_energy,\r\n      });\r\n      \r\n      \r\n    } catch (error) {\r\n      console.error(\"Error fetching energy consumption data:\", error);\r\n    }\r\n  };\r\n\r\n\r\n  var switches = [];\r\n  var devices = [];\r\n  openHABItems.forEach(function (item) {\r\n    if (item.type === \"Switch\" && regex.test(item.name)) {\r\n      switches.push(item);\r\n    }\r\n    if (item.type === \"Switch\" && !regex.test(item.name)){\r\n      devices.push(item);\r\n    }\r\n    if (\"Switch\" !== item.type) {\r\n      devices.push(item);\r\n    }\r\n  });\r\n\r\n  //Turned on devices\r\n  var totalConsumption = 0.0;\r\n  var turnedOnDevices = [];\r\n  openHABItems.forEach(function (item) {\r\n  const isOn =  item.state === 'ON';\r\n\r\n  if (isOn) {\r\n    turnedOnDevices.push(item);\r\n    totalConsumption += Number.parseFloat(item.state);\r\n  }\r\n  });\r\n\r\n  function getTurnedOnDevices() {\r\n  return turnedOnDevices.filter(device => device.state === \"ON\");\r\n}\r\nconst isUserAdmin = sessionStorage.getItem(\"isAdmin\") === \"true\";\r\n  return (\r\n    <>\r\n      <div>\r\n      <button className=\"back-button\" onClick={() => navigate(-1)} />\r\n        <div className=\"card cardCounter\">\r\n          <Counter\r\n            value={energyConsumptionData.totalEnergy}\r\n            text=\"Total consumption in kWh\"\r\n            unit=\"kWh\"\r\n            unitDescription=\"Kilowatt hours\"\r\n            description=\"This value represents the total overall energy consumption of the smart room\"\r\n            decimals=\"2\"\r\n          />\r\n          <Counter\r\n            value={energyConsumptionData.averageEnergy}\r\n            text=\"Average consumption in kWh\"\r\n            unit=\"kWh\"\r\n            unitDescription=\"Kilowatt hours\"\r\n            description=\"This value represents the average overall energy consumption per device of the smart room\"\r\n            decimals=\"2\"\r\n          />\r\n          <Counter\r\n            value={energyConsumptionData.devicesCount}\r\n            text=\"Devices\"\r\n            description=\"This value represents the amount of devices in the smart room\"\r\n            decimals=\"0\"\r\n          />\r\n          <Counter\r\n            value={energyConsumptionData.devicesCount}\r\n            text=\"Turned on devices\"\r\n            description=\"This value represents the amount of turned on devices in the smart room\"\r\n            decimals=\"0\"\r\n          />\r\n          <Counter\r\n            value={energyConsumptionData.switchCount}\r\n            text=\"Switches\"\r\n            description=\"This value represents the amount of switches in the smart room\"\r\n            decimals=\"0\"\r\n          />\r\n          <Counter\r\n            value={peopleInsideRoom}\r\n            text=\"People inside the Room\"\r\n            description=\"This value represents the number of the people inside the smart room\"\r\n            decimals=\"0\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"flex-container\">\r\n          <OverviewTopDownStaticElement id=\"tv1\" name=\"TV1\"/>\r\n          <OverviewTopDownStaticElement id=\"tv2\" name=\"TV2\" />\r\n          <OverviewTopDownStaticElement id=\"sofa\" name=\"Sofa\" />\r\n          <OverviewTopDownStaticElement id=\"window1\" name=\"Window\" />\r\n          <OverviewTopDownStaticElement id=\"window2\" name=\"Window\" />\r\n          <OverviewTopDownStaticElement id=\"lamp1\" name=\"Lamp\" />\r\n          <OverviewTopDownStaticElement id=\"lamp2\" name=\"Lamp\" />\r\n          <OverviewTopDownStaticElement id=\"server\" name=\"Server\" />\r\n          <OverviewTopDownStaticElement id=\"door\" name=\"Door\" />\r\n          <OverviewTopDownStaticElement id=\"camera\" name=\"Camera\" />\r\n\r\n          {devices.length === 0 && devices.length === 0 && (\r\n            <div className=\"noDevicesPopup\">\r\n              No devices or switches found. Make sure openHAB is running!\r\n            </div>\r\n          )}\r\n\r\n          \r\n\r\n          {/* {devices.map((device) => (\r\n            <OverviewTopDownDeviceElement\r\n              id = {device.name}\r\n              devices = {devices}\r\n            />\r\n          ))} */}\r\n\r\n          {switches.map((s) => (\r\n            <OverviewTopDownSwitchElement id={s.name} switches={switches} />\r\n          ))}\r\n        </div>\r\n        \r\n        <OverviewDeviceList\r\n          name = {\"Turned on devices\"}\r\n          deviceList={turnedOnDevices}\r\n        />\r\n        <OverviewSwitchList name={\"Switches\"} switchList={switches} />\r\n        {}\r\n        <div>\r\n        {isUserAdmin && (\r\n          <div>\r\n            <DeviceConfigurator />\r\n          </div>\r\n        )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nexport default Overview;",["172","173","174","175","176","177"],"C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\screens\\AllSwitches.js",["178","179"],[],"C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\components\\Header.js",["180"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { Navbar, Nav, Container } from \"react-bootstrap\";\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { setIsUserAdminCallback } from \"../screens/Login/Login\";\r\n\r\nconst Header = () => {\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    const storedIsAdmin = sessionStorage.getItem(\"isAdmin\") === \"true\";\r\n    setIsAdmin(storedIsAdmin);\r\n\r\n    const handleIsUserAdminChange = (newIsUserAdmin) => {\r\n      console.log(\"Is Admin:\", newIsUserAdmin);\r\n      setIsAdmin(newIsUserAdmin);\r\n    };\r\n\r\n    setIsUserAdminCallback(handleIsUserAdminChange);\r\n  }, []);\r\n\r\n  if(location.pathname !== \"/login\" && location.pathname !== \"/404\" && location.pathname !== \"/\" ){\r\n    return (\r\n        <header>\r\n          <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\r\n            <Container>\r\n            <LinkContainer to=\"/overview\">\r\n            <Navbar.Brand>\r\n                  <img\r\n                      src=\"smart-room-logo-white.svg\"\r\n                      width=\"50\"\r\n                      height=\"50\"\r\n                      className=\"img-logo\"\r\n                  />\r\n                  SmartRoom\r\n                </Navbar.Brand>\r\n              </LinkContainer>\r\n              <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n              <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                \r\n                <Nav className=\"ml-auto\">\r\n                  <LinkContainer to='/overview'>\r\n                    <Nav.Link >Overview</Nav.Link>\r\n                  </LinkContainer>\r\n                  <LinkContainer to='/devices'>\r\n                    <Nav.Link>All Devices</Nav.Link>\r\n                  </LinkContainer>                  \r\n                  <LinkContainer to='/switches'>\r\n                    <Nav.Link>All Switches</Nav.Link>\r\n                  </LinkContainer>\r\n                  <LinkContainer to='/control'>\r\n                    <Nav.Link>Control Panel</Nav.Link>\r\n                  </LinkContainer>\r\n\r\n                  { isAdmin && (\r\n                  <LinkContainer to=\"/userAccountCreation\">\r\n                    <Nav.Link>Create User</Nav.Link>\r\n                  </LinkContainer>\r\n                )}\r\n\r\n                  <LinkContainer to='/login'>\r\n                    <Nav.Link>\r\n                      <i className=\"fas fa-user\"/> Logout\r\n                    </Nav.Link>\r\n                  </LinkContainer>\r\n                  \r\n                </Nav>\r\n              </Navbar.Collapse>\r\n            </Container>\r\n          </Navbar>\r\n        </header>\r\n    );\r\n  }else{\r\n    return(\r\n        <div/>\r\n    );\r\n  }\r\n\r\n};\r\n\r\nexport default Header;\r\n",["181","182","183","184","185","186"],"C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\screens\\AllDevices.js",["187","188","189"],[],"C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\screens\\ControlPanel.js",["190","191","192","193"],[],"C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\screens\\Login\\Login.js",[],[],"C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\components\\OverviewDeviceList.js",[],[],"C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\components\\OverviewTopDownStaticElement.js",[],[],"C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\components\\Graphs.js",["194","195","196"],[],"import {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { React, useState, useEffect } from 'react';\r\nimport { DropdownButton, Dropdown } from 'react-bootstrap';\r\nimport * as moment from 'moment';\r\nimport apiCallBackend from '../services/ApiCallBackend';\r\nimport Stack from 'react-bootstrap/Stack';\r\n\r\nconst Graphs = () => {\r\n  ChartJS.register(\r\n    CategoryScale,\r\n    LinearScale,\r\n    PointElement,\r\n    LineElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend\r\n  );\r\n\r\n  const energies = [\r\n    'active_import_energy',\r\n    'active_export_energy',\r\n    'reactive_import_energy',\r\n    'reactive_export_energy',\r\n    'apparent_import_energy',\r\n    'apparent_export_energy',\r\n  ]\r\n\r\n  const colors = {\r\n    'active_import_energy' : '142, 202, 230',\r\n    'active_export_energy':'33, 158, 188',\r\n    'reactive_import_energy':'2, 48, 71',\r\n    'reactive_export_energy':'255, 183, 3',\r\n    'apparent_import_energy':'251, 133, 0',\r\n    'apparent_export_energy':'155, 34, 38'\r\n  }\r\n  \r\n  const [allDatasets, setAllDatasets] = useState([])\r\n  const [chartData, setChartData] = useState({\r\n    labels: [],\r\n    datasets:[]\r\n  });\r\n  const [selectRange, setSelectRange] = useState('Select a range')\r\n\r\n  let requestbody = {\r\n    id : '13',\r\n    measure: 'active_import_energy',\r\n    final_time : moment().format('YYYY-MM-DD hh:mm:ss'),\r\n    start_time : moment().subtract(1, 'years').format('YYYY-MM-DD hh:mm:ss')\r\n  }\r\n\r\n  useEffect(() => {\r\n    apiCall();\r\n  }, [])\r\n\r\n  const apiCall = async() => {\r\n    setChartData(chartData => ({...chartData,\r\n      datasets: []\r\n    }))\r\n\r\n    const update = energies.map(async (energy) => {\r\n      requestbody = {...requestbody,\r\n        measure: energy\r\n      }\r\n      await apiCallBackend(requestbody).then(data => {\r\n        setAllDatasets(allDatasets => ([...allDatasets, energy]));\r\n        setChartData(chartData => ({\r\n          tension: 0.1,\r\n          labels: data.lastMeasurements.map((eachMeasure) => {\r\n            const moment_source = moment(eachMeasure.time, 'ddd, DD MMM YYYY HH:mm:ss Z')\r\n            //console.log(moment_source)\r\n            return moment_source.format('DD-MM-YYYY HH:mm');\r\n          }),\r\n          datasets: [...chartData.datasets,\r\n            {\r\n              label: energy.replace(/_/gi, \" \").split(\"energy\")[0],\r\n              data: data.lastMeasurements.map((eachMeasure) => {\r\n                return eachMeasure.value;\r\n              }),\r\n              borderColor: 'rgb(' + colors[energy] + ')',\r\n              backgroundColor: 'rgba(' + colors[energy] + ', 0.5)',\r\n            }\r\n          ]\r\n        }));\r\n      })\r\n    })\r\n  }\r\n  \r\n  \r\n  var updateRequestBody = (range) => {\r\n    switch(range) {\r\n      case \"5hours\":\r\n        requestbody = {...requestbody,\r\n          final_time : moment().format('YYYY-MM-DD hh:mm:ss'),\r\n          start_time : moment().subtract(5, 'hours').format('YYYY-MM-DD hh:mm:ss')\r\n        }\r\n        setSelectRange('Last 5 hours')\r\n        apiCall()\r\n        break; \r\n      case '1day':\r\n        requestbody = {...requestbody,\r\n          final_time : moment().format('YYYY-MM-DD hh:mm:ss'),\r\n          start_time : moment().subtract(1, 'days').format('YYYY-MM-DD hh:mm:ss')\r\n        }\r\n        apiCall()\r\n        setSelectRange('Last day')\r\n        break; \r\n      case '1week':\r\n        requestbody = {...requestbody,\r\n          final_time : moment().format('YYYY-MM-DD hh:mm:ss'),\r\n          start_time : moment().subtract(7, 'days').format('YYYY-MM-DD hh:mm:ss')\r\n        }\r\n        apiCall()\r\n        setSelectRange('Last week')\r\n        break; \r\n      case '1month':\r\n        requestbody = {...requestbody,\r\n          final_time : moment().format('YYYY-MM-DD hh:mm:ss'),\r\n          start_time : moment().subtract(1, 'months').format('YYYY-MM-DD hh:mm:ss')\r\n        }\r\n        setSelectRange('Last month')\r\n        apiCall()\r\n        break; \r\n      case '1year':\r\n        requestbody = {...requestbody,\r\n          final_time : moment().format('YYYY-MM-DD hh:mm:ss'),\r\n          start_time : moment().subtract(2, 'months').format('YYYY-MM-DD hh:mm:ss')\r\n        }\r\n        setSelectRange('Last year')\r\n        apiCall()\r\n        break; \r\n      default:\r\n        console.log('Wrong range')\r\n        break; \r\n    }\r\n  }\r\n\r\n  \r\n  const options = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: 'top',\r\n        display: true\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: 'Energy Measurements',\r\n      },\r\n    },\r\n    scales: {\r\n      x: {\r\n        grid: {\r\n          display: false\r\n        },\r\n        ticks: {\r\n          display: false\r\n        }\r\n      },\r\n      y: {\r\n        grid: {\r\n          display: false\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Stack gap={2}>\r\n      <DropdownButton id=\"dropdown-basic-button\" title={selectRange}  align={{ lg: 'left' }}>\r\n      <Dropdown.Item href=\"#/action-1\" onClick={() => updateRequestBody('5hours')}>Last 5 hours</Dropdown.Item>\r\n      <Dropdown.Item href=\"#/action-2\" onClick={() => updateRequestBody('1day')}>Last day</Dropdown.Item>\r\n      <Dropdown.Item href=\"#/action-3\" onClick={() => updateRequestBody('1week')}>Last week</Dropdown.Item>\r\n      <Dropdown.Item href=\"#/action-3\" onClick={() => updateRequestBody('1month')}>Last month</Dropdown.Item>\r\n      <Dropdown.Item href=\"#/action-3\" onClick={() => updateRequestBody('1year')}>Last year</Dropdown.Item>\r\n      </DropdownButton>\r\n      <div className=\"bg-light border\">\r\n      <Line options={options} data={chartData} />\r\n      </div>\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default Graphs;\r\n","C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\components\\OverviewTopDownSwitchElement.js",[],[],"C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\components\\OverviewTopDownDeviceElement.js",[],[],"C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\components\\Counter.js",[],[],"C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\components\\OverviewSwitchList.js",[],[],"C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\openHAB\\openHAB.js",[],[],"C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\services\\ApiCallBackend.js",[],[],"C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\dummyData\\Measurements.js",[],[],"C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\screens\\UserAccountCreation.js",["197"],[],"import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\nimport \"../UserAccount.css\";\r\nimport openHAB from \"../openHAB/openHAB\";\r\nimport { token } from \"./Login/Login\";\r\n\r\nconst UserAccountCreation = () => {\r\n  const [formData, setFormData] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n    user_type: \"user\",\r\n    username: \"\",\r\n  });\r\n\r\n  //  const config = {\r\n  //   headers: { Authorization: token },\r\n  // };\r\n\r\n  const config = {\r\n    headers: { Authorization: sessionStorage.getItem(\"token\") },\r\n  };\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prevData) => ({\r\n      ...prevData,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleRegister = async () => {\r\n  try {\r\n    //alert(openHAB.url + \"/api/v1/auth/register\");\r\n    const response = await Axios.post(openHAB.url + \"/api/v1/auth/register\", formData, config);\r\n    console.log(\"Registration successful:\", response.data);\r\n  } catch (error) {\r\n    if (error.response) {\r\n      const statusCode = error.response.status;\r\n\r\n      switch (statusCode) {\r\n        case 400:\r\n          alert(\"Fails to Register due to bad request data\");\r\n          break;\r\n        case 403:\r\n          alert(\"User not allowed to create new users\");\r\n          break;\r\n        case 409:\r\n          alert(\"Email or username are in use\");\r\n          break;\r\n        default:\r\n          alert(`Registration failed with status code: ${statusCode}`);\r\n      }\r\n    } else {\r\n      console.error(\"Registration failed:\", error.message);\r\n    }\r\n  }\r\n};\r\n\r\n\r\n  return (\r\n    <div className=\"user-account-container\">\r\n      <h2>User Account Registration</h2>\r\n      <form>\r\n        <div className=\"form-group\">\r\n          <label>Email:</label>\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={formData.email}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label>Password:</label>\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={formData.password}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label>Username:</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"username\"\r\n            value={formData.username}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n\r\n        <button type=\"button\" onClick={handleRegister} className=\"user-account-button\">\r\n          Register\r\n        </button>\r\n      </form>\r\n      <div>\r\n      <button className=\"back-button\" onClick={() => navigate(-1)} />\r\n    </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserAccountCreation;",["198","199","200","201","202","203"],"C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\screens\\AdminAlert.js",[],[],"C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\components\\DeviceConfig.js",["204","205"],[],"import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { token } from '../screens/Login/Login';\r\nimport openHAB from '../openHAB/openHAB';\r\nimport axios from 'axios';\r\n\r\nconst DeviceConfigurator = () => {\r\n  let navigate = useNavigate();\r\n  const [devices, setDevices] = useState([]);\r\n  const [selectedDevices, setSelectedDevices] = useState([]);\r\n\r\n  // const config = {\r\n  //   headers: { Authorization: token },\r\n  // };\r\n\r\nconst config = {\r\n    headers: { Authorization: sessionStorage.getItem(\"token\") },\r\n  };\r\n\r\n  useEffect(() => {\r\n    let auth = sessionStorage.getItem('auth');\r\n    if (auth !== 'true') {\r\n      navigate('/login');\r\n    } else {\r\n      fetchDevices();\r\n    }\r\n  }, []);\r\n\r\n  const fetchDevices = async () => {\r\n    try {\r\n      const response = await axios(openHAB.url + '/api/v1/devices/relations', config);\r\n      const filteredDevices = response.data.filter(\r\n        (device) =>\r\n          device.item_type === 'Switch' &&\r\n          (device.measurement_name === 'switchbinary' || device.measurement_name === 'switch')\r\n      );\r\n\r\n      const autoSwitchOffDevices = filteredDevices.filter((device) => device?.auto_switchoff === true);\r\n\r\n      setDevices(filteredDevices);\r\n      setSelectedDevices(autoSwitchOffDevices.map((device) => device.item_name));\r\n    } catch (error) {\r\n      console.error('Error fetching devices that can be switched off:', error);\r\n    }\r\n  };\r\n\r\n  const handleDeviceSelection = (deviceName) => {\r\n    const isSelected = selectedDevices.includes(deviceName);\r\n    if (isSelected) {\r\n      setSelectedDevices(selectedDevices.filter((selected) => selected !== deviceName));\r\n    } else {\r\n      setSelectedDevices([...selectedDevices, deviceName]);\r\n    }\r\n  };\r\n\r\n  const handleConfirm = async () => {\r\n    try {\r\n      const response = await axios.post(\r\n        openHAB.url + '/api/v1/devices/loadmetadata',\r\n        { items: selectedDevices },\r\n        config\r\n      );\r\n      console.log('Items sent successfully:', response.data);\r\n    } catch (error) {\r\n      console.error('Error sending items:', error);\r\n    }\r\n    alert('Devices confirmed.');\r\n  };\r\n\r\n   useEffect(() => {\r\n    localStorage.setItem('selectedDevices', JSON.stringify(selectedDevices));\r\n  }, [selectedDevices]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"header\">\r\n        <div className=\"section-header\">Automatically turn off items ({devices.length})</div>\r\n        <button\r\n          className=\"btn-primary-no-background\"\r\n          onClick={handleConfirm}\r\n          disabled={selectedDevices.length === 0}\r\n        >\r\n          Confirm\r\n        </button>\r\n      </div>\r\n\r\n      <div\r\n        className=\"horizontal-scroll-area\"\r\n        style={{\r\n          display: 'flex',\r\n          overflowX: 'auto',\r\n          width: '100%',\r\n          marginBottom: '20px',\r\n        }}\r\n      >\r\n        {devices.map((device) => (\r\n          <button\r\n            key={device.thing_name}\r\n            className={`card hov-primary horizontal ${selectedDevices.includes(device.item_name) ? 'selected' : ''}`}\r\n            onClick={() => handleDeviceSelection(device.item_name)}\r\n            style={{\r\n              flex: '0 0 150px',\r\n              margin: '0 8px',\r\n              backgroundSize: 'cover',\r\n              backgroundRepeat: 'no-repeat',\r\n              backgroundPosition: 'center center',\r\n              backgroundColor: selectedDevices.includes(device.item_name) ? '#D1EAF0' : '#FFFFFF', // Set background color\r\n            }}\r\n          >\r\n            <div\r\n              className=\"card-image horizontal\"\r\n              style={{\r\n                height: '85px',\r\n                width: '130px',\r\n                marginTop: '5px',\r\n                backgroundSize: 'contain',\r\n                backgroundRepeat: 'no-repeat',\r\n                backgroundPosition: 'center center',\r\n                position: 'relative',\r\n                verticalAlign: 'middle',\r\n                backgroundAttachment: 'scroll',\r\n                stroke: '#ef962e !important',\r\n              }}\r\n            >\r\n              <img\r\n                src={`/resources/${openHAB.switches.LIGHT_SWITCH_ID}.svg`}\r\n                alt={device.item_name}\r\n                style={{ width: '100%', height: '100%' }}\r\n              />\r\n            </div>\r\n            <div\r\n              className=\"card-title horizontal\"\r\n            >\r\n              {device.thing_name.split(' ').slice(1).join(' ')}\r\n            </div>\r\n          </button>\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DeviceConfigurator;\r\n","C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\components\\TimeConfig.js",["206","207","208"],[],"C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\components\\Notification.js",[],[],{"ruleId":"209","severity":1,"message":"210","line":11,"column":8,"nodeType":"211","endLine":11,"endColumn":10,"suggestions":"212"},{"ruleId":"213","severity":1,"message":"214","line":7,"column":8,"nodeType":"215","messageId":"216","endLine":7,"endColumn":14},{"ruleId":"209","severity":1,"message":"217","line":33,"column":6,"nodeType":"211","endLine":33,"endColumn":20,"suggestions":"218"},{"ruleId":"213","severity":1,"message":"219","line":7,"column":8,"nodeType":"215","messageId":"216","endLine":7,"endColumn":14},{"ruleId":"213","severity":1,"message":"214","line":10,"column":8,"nodeType":"215","messageId":"216","endLine":10,"endColumn":14},{"ruleId":"213","severity":1,"message":"220","line":18,"column":10,"nodeType":"215","messageId":"216","endLine":18,"endColumn":24},{"ruleId":"209","severity":1,"message":"221","line":33,"column":6,"nodeType":"211","endLine":33,"endColumn":8,"suggestions":"222"},{"ruleId":"213","severity":1,"message":"223","line":4,"column":8,"nodeType":"215","messageId":"216","endLine":4,"endColumn":36},{"ruleId":"213","severity":1,"message":"224","line":12,"column":10,"nodeType":"215","messageId":"216","endLine":12,"endColumn":15},{"ruleId":"213","severity":1,"message":"225","line":12,"column":17,"nodeType":"215","messageId":"216","endLine":12,"endColumn":28},{"ruleId":"213","severity":1,"message":"214","line":13,"column":8,"nodeType":"215","messageId":"216","endLine":13,"endColumn":14},{"ruleId":"209","severity":1,"message":"226","line":54,"column":6,"nodeType":"211","endLine":54,"endColumn":8,"suggestions":"227"},{"ruleId":"213","severity":1,"message":"228","line":111,"column":7,"nodeType":"215","messageId":"216","endLine":111,"endColumn":23},{"ruleId":"213","severity":1,"message":"229","line":122,"column":12,"nodeType":"215","messageId":"216","endLine":122,"endColumn":30},{"ruleId":"230","replacedBy":"231"},{"ruleId":"232","replacedBy":"233"},{"ruleId":"234","replacedBy":"235"},{"ruleId":"236","replacedBy":"237"},{"ruleId":"238","replacedBy":"239"},{"ruleId":"240","replacedBy":"241"},{"ruleId":"213","severity":1,"message":"214","line":8,"column":8,"nodeType":"215","messageId":"216","endLine":8,"endColumn":14},{"ruleId":"209","severity":1,"message":"242","line":41,"column":6,"nodeType":"211","endLine":41,"endColumn":8,"suggestions":"243"},{"ruleId":"244","severity":1,"message":"245","line":30,"column":19,"nodeType":"246","endLine":35,"endColumn":21},{"ruleId":"230","replacedBy":"247"},{"ruleId":"232","replacedBy":"248"},{"ruleId":"234","replacedBy":"249"},{"ruleId":"236","replacedBy":"250"},{"ruleId":"238","replacedBy":"251"},{"ruleId":"240","replacedBy":"252"},{"ruleId":"213","severity":1,"message":"214","line":5,"column":8,"nodeType":"215","messageId":"216","endLine":5,"endColumn":14},{"ruleId":"213","severity":1,"message":"224","line":6,"column":10,"nodeType":"215","messageId":"216","endLine":6,"endColumn":15},{"ruleId":"209","severity":1,"message":"242","line":30,"column":6,"nodeType":"211","endLine":30,"endColumn":8,"suggestions":"253"},{"ruleId":"213","severity":1,"message":"224","line":5,"column":10,"nodeType":"215","messageId":"216","endLine":5,"endColumn":15},{"ruleId":"209","severity":1,"message":"242","line":37,"column":6,"nodeType":"211","endLine":37,"endColumn":8,"suggestions":"254"},{"ruleId":"213","severity":1,"message":"255","line":239,"column":17,"nodeType":"215","messageId":"216","endLine":239,"endColumn":24},{"ruleId":"213","severity":1,"message":"256","line":240,"column":17,"nodeType":"215","messageId":"216","endLine":240,"endColumn":23},{"ruleId":"213","severity":1,"message":"257","line":47,"column":10,"nodeType":"215","messageId":"216","endLine":47,"endColumn":21},{"ruleId":"209","severity":1,"message":"258","line":63,"column":6,"nodeType":"211","endLine":63,"endColumn":8,"suggestions":"259"},{"ruleId":"213","severity":1,"message":"260","line":70,"column":11,"nodeType":"215","messageId":"216","endLine":70,"endColumn":17},{"ruleId":"213","severity":1,"message":"224","line":6,"column":10,"nodeType":"215","messageId":"216","endLine":6,"endColumn":15},{"ruleId":"230","replacedBy":"261"},{"ruleId":"232","replacedBy":"262"},{"ruleId":"234","replacedBy":"263"},{"ruleId":"236","replacedBy":"264"},{"ruleId":"238","replacedBy":"265"},{"ruleId":"240","replacedBy":"266"},{"ruleId":"213","severity":1,"message":"224","line":3,"column":10,"nodeType":"215","messageId":"216","endLine":3,"endColumn":15},{"ruleId":"209","severity":1,"message":"267","line":27,"column":6,"nodeType":"211","endLine":27,"endColumn":8,"suggestions":"268"},{"ruleId":"213","severity":1,"message":"224","line":3,"column":10,"nodeType":"215","messageId":"216","endLine":3,"endColumn":15},{"ruleId":"213","severity":1,"message":"225","line":3,"column":17,"nodeType":"215","messageId":"216","endLine":3,"endColumn":28},{"ruleId":"209","severity":1,"message":"269","line":28,"column":6,"nodeType":"211","endLine":28,"endColumn":8,"suggestions":"270"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["271"],"no-unused-vars","'base64' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'fetchOpenHABItem'. Either include it or remove the dependency array.",["272"],"'Graphs' is defined but never used.","'responseStatus' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fetchOpenHABItem' and 'navigate'. Either include them or remove the dependency array.",["273"],"'OverviewTopDownDeviceElement' is defined but never used.","'token' is defined but never used.","'isUserAdmin' is defined but never used.","React Hook useEffect has missing dependencies: 'fetchEnergyConsumptionData', 'fetchOpenHABItems', 'fetchPeopleInsideRoom', and 'navigate'. Either include them or remove the dependency array.",["274"],"'totalConsumption' is assigned a value but never used.","'getTurnedOnDevices' is defined but never used.","dot-location",[],"new-parens",[],"no-mixed-operators",[],"no-new-object",["275"],"no-whitespace-before-property",[],"rest-spread-spacing",[],"React Hook useEffect has missing dependencies: 'fetchOpenHABItems' and 'navigate'. Either include them or remove the dependency array.",["276"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",[],[],[],["275"],[],[],["277"],["278"],"'thingID' is assigned a value but never used.","'itemID' is assigned a value but never used.","'allDatasets' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'apiCall'. Either include it or remove the dependency array.",["279"],"'update' is assigned a value but never used.",[],[],[],["275"],[],[],"React Hook useEffect has missing dependencies: 'fetchDevices' and 'navigate'. Either include them or remove the dependency array.",["280"],"React Hook useEffect has missing dependencies: 'fetchTimers' and 'navigate'. Either include them or remove the dependency array.",["281"],{"desc":"282","fix":"283"},{"desc":"284","fix":"285"},{"desc":"286","fix":"287"},{"desc":"288","fix":"289"},"no-object-constructor",{"desc":"290","fix":"291"},{"desc":"290","fix":"292"},{"desc":"290","fix":"293"},{"desc":"294","fix":"295"},{"desc":"296","fix":"297"},{"desc":"298","fix":"299"},"Update the dependencies array to be: [navigate]",{"range":"300","text":"301"},"Update the dependencies array to be: [fetchOpenHABItem, id, navigate]",{"range":"302","text":"303"},"Update the dependencies array to be: [fetchOpenHABItem, navigate]",{"range":"304","text":"305"},"Update the dependencies array to be: [fetchEnergyConsumptionData, fetchOpenHABItems, fetchPeopleInsideRoom, navigate]",{"range":"306","text":"307"},"Update the dependencies array to be: [fetchOpenHABItems, navigate]",{"range":"308","text":"309"},{"range":"310","text":"309"},{"range":"311","text":"309"},"Update the dependencies array to be: [apiCall]",{"range":"312","text":"313"},"Update the dependencies array to be: [fetchDevices, navigate]",{"range":"314","text":"315"},"Update the dependencies array to be: [fetchTimers, navigate]",{"range":"316","text":"317"},[216,218],"[navigate]",[929,943],"[fetchOpenHABItem, id, navigate]",[1068,1070],"[fetchOpenHABItem, navigate]",[1812,1814],"[fetchEnergyConsumptionData, fetchOpenHABItems, fetchPeopleInsideRoom, navigate]",[1207,1209],"[fetchOpenHABItems, navigate]",[846,848],[1189,1191],[1594,1596],"[apiCall]",[747,749],"[fetchDevices, navigate]",[741,743],"[fetchTimers, navigate]"]