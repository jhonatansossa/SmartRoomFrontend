[{"C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\index.js":"1","C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\App.js":"3","C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\components\\Footer.js":"4","C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\components\\NotFoundComponent.js":"5","C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\screens\\DetailedDevice.js":"6","C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\screens\\DetailedSwitch.js":"7","C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\screens\\NotFound.js":"8","C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\screens\\Overview.js":"9","C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\screens\\AllSwitches.js":"10","C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\components\\Header.js":"11","C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\screens\\AllDevices.js":"12","C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\screens\\ControlPanel.js":"13","C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\screens\\Login\\Login.js":"14","C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\components\\OverviewDeviceList.js":"15","C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\components\\OverviewTopDownStaticElement.js":"16","C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\components\\Graphs.js":"17","C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\components\\OverviewTopDownSwitchElement.js":"18","C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\components\\OverviewTopDownDeviceElement.js":"19","C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\components\\Counter.js":"20","C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\components\\OverviewSwitchList.js":"21","C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\openHAB\\openHAB.js":"22","C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\services\\ApiCallBackend.js":"23","C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\dummyData\\Measurements.js":"24","C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\screens\\UserAccountCreation.js":"25","C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\screens\\AdminAlert.js":"26","C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\components\\DeviceConfig.js":"27","C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\components\\TimeConfig.js":"28"},{"size":690,"mtime":1699537309698,"results":"29","hashOfConfig":"30"},{"size":375,"mtime":1699537309698,"results":"31","hashOfConfig":"30"},{"size":2052,"mtime":1703158559402,"results":"32","hashOfConfig":"30"},{"size":601,"mtime":1699537309690,"results":"33","hashOfConfig":"30"},{"size":313,"mtime":1699537309691,"results":"34","hashOfConfig":"30"},{"size":2083,"mtime":1702142482059,"results":"35","hashOfConfig":"30"},{"size":2313,"mtime":1702142482060,"results":"36","hashOfConfig":"30"},{"size":704,"mtime":1700510784000,"results":"37","hashOfConfig":"30"},{"size":7220,"mtime":1703370021920,"results":"38","hashOfConfig":"30"},{"size":5395,"mtime":1702142482057,"results":"39","hashOfConfig":"30"},{"size":2665,"mtime":1703248460094,"results":"40","hashOfConfig":"30"},{"size":2381,"mtime":1702848485659,"results":"41","hashOfConfig":"30"},{"size":9103,"mtime":1703456713211,"results":"42","hashOfConfig":"30"},{"size":4092,"mtime":1703243887234,"results":"43","hashOfConfig":"30"},{"size":2932,"mtime":1702769886281,"results":"44","hashOfConfig":"30"},{"size":486,"mtime":1701614433299,"results":"45","hashOfConfig":"30"},{"size":5699,"mtime":1699537309690,"results":"46","hashOfConfig":"30"},{"size":1242,"mtime":1701615550686,"results":"47","hashOfConfig":"30"},{"size":1752,"mtime":1702142482052,"results":"48","hashOfConfig":"30"},{"size":891,"mtime":1699537309689,"results":"49","hashOfConfig":"30"},{"size":2084,"mtime":1702142482051,"results":"50","hashOfConfig":"30"},{"size":668,"mtime":1702142482055,"results":"51","hashOfConfig":"30"},{"size":639,"mtime":1699537309702,"results":"52","hashOfConfig":"30"},{"size":402,"mtime":1699537309693,"results":"53","hashOfConfig":"30"},{"size":2619,"mtime":1703247828903,"results":"54","hashOfConfig":"30"},{"size":276,"mtime":1703167911110,"results":"55","hashOfConfig":"30"},{"size":2782,"mtime":1703371834141,"results":"56","hashOfConfig":"30"},{"size":3220,"mtime":1703290205000,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1bow6le",{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116"},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\index.js",[],[],"C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\reportWebVitals.js",[],[],"C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\App.js",[],[],"C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\components\\Footer.js",[],[],"C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\components\\NotFoundComponent.js",["150"],[],"import {useNavigate} from \"react-router-dom\";\r\nimport {useEffect} from \"react\";\r\n\r\n\r\nconst NotFoundComponent = () => {\r\n    let navigate = useNavigate();\r\n\r\n\r\n    useEffect(() => {\r\n        navigate(\"/404\");\r\n    }, []);\r\n\r\n    return(\r\n        <div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NotFoundComponent","C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\screens\\DetailedDevice.js",["151","152"],[],"import React, { useEffect, useState, useRef } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport Graphs from \"../components/Graphs\";\r\nimport openHAB from \"../openHAB/openHAB\";\r\nimport Axios from \"axios\";\r\nimport { token } from \"./Login/Login\";\r\nimport base64 from 'base-64';\r\n\r\nconst DetailedDevice = () => {\r\n  const [openHABItem, setOpenHABItem] = useState(null);\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  };\r\n\r\n  const timerRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    document.title = \"SmartRoom – \" + id;\r\n    let auth = sessionStorage.getItem(\"auth\");\r\n    if (auth !== \"true\") {\r\n      navigate(\"/login\");\r\n    } else {\r\n      timerRef.current = setInterval(() => {\r\n        fetchOpenHABItem();\r\n      }, 1000);\r\n\r\n      return () => {\r\n        clearInterval(timerRef.current);\r\n      };\r\n    }\r\n  }, [id, navigate]);\r\n\r\n  const fetchOpenHABItem = async () => {\r\n    try {\r\n      const response = await Axios.get(\r\n        openHAB.url+\"/api/v1/devices/items/\"+id,\r\n        config\r\n      );\r\n      setOpenHABItem(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching OpenHAB item:\", error);\r\n      // Puedes manejar el error de manera más informativa aquí\r\n    }\r\n  };\r\n\r\n  if (openHABItem === null) {\r\n    // Puedes mostrar un indicador de carga aquí\r\n    return <div>Loading...</div>;\r\n  } else {\r\n    return (\r\n      <div className=\"vertical-scroll-area\">\r\n        <h2 className=\"title\">{openHABItem.label}</h2>\r\n        <div className=\"card vertical\">\r\n          <div\r\n            key={id}\r\n            className=\"card-image vertical\"\r\n            style={{\r\n              backgroundImage: `url('/resources/${id}.svg')`,\r\n            }}\r\n          />\r\n          <div className=\"card-title card-content\">\r\n            <p>\r\n              Current consumption: <b>{openHABItem.state} kWh</b>\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <Graphs />\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default DetailedDevice;\r\n","C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\screens\\DetailedSwitch.js",["153","154","155","156"],[],"import { React, useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport ToggleButton from \"react-toggle-button\";\r\nimport Axios from \"axios\";\r\nimport axios from \"axios\";\r\nimport Graphs from \"../components/Graphs\";\r\nimport openHAB from \"../openHAB/openHAB\";\r\nimport { token } from \"./Login/Login\";\r\nimport base64 from 'base-64';\r\n\r\n  const DetailedSwitch = () => {\r\n  const navigate = useNavigate();\r\n  const { id } = useParams();\r\n  //Fetching openHAB switch item\r\n  const [openHABItem, setOpenHABItem] = useState([]);\r\n  const [toggle, setToggle] = useState(false); // Switch toggle handler\r\n  const [responseStatus, setResponseStatus] = useState([]);\r\n\r\n  //let base64 = require(\"base-64\");\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.title = \"SmartRoom – Details\" ;\r\n    let auth = sessionStorage.getItem(\"auth\");\r\n    if (auth !== \"true\") {\r\n      navigate(\"/login\");\r\n    } else {\r\n      fetchOpenHABItem();\r\n    }\r\n  }, []);\r\n\r\n  const fetchOpenHABItem = async () => {\r\n    const response = await Axios(openHAB.url + \"/api/v1/devices/items/\" + id, config);\r\n    setOpenHABItem(response.data);\r\n    if (response.data.state === \"ON\") {\r\n      setToggle(true);\r\n    } else {\r\n      setToggle(false);\r\n    }\r\n  };\r\n  const tokens = id.split('_');\r\n  const xtokens = tokens.slice(-2);\r\n\r\n  async function sendOpenHABRequest(toggle) {\r\n    if (toggle) {\r\n      axios\r\n        .post(openHAB.url + \"/api/v1/devices/items/\" + xtokens[0] + \"/\" + xtokens[1]+ \"/state\", {\"state\": \"OFF\"}, config)\r\n        .then((response) => {\r\n          setResponseStatus(response.data);\r\n        });\r\n    } else {\r\n      axios\r\n        .post(openHAB.url + \"/api/v1/devices/items/\" + xtokens[0] + \"/\" + xtokens[1] + \"/state\", {\"state\": \"ON\"}, config)\r\n        .then((response) => {\r\n          setResponseStatus(response.data);\r\n        });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"vertical-scroll-area\">\r\n      <h2 className=\"title\">{openHABItem.label}</h2>\r\n      <ToggleButton\r\n        value={toggle}\r\n        onToggle={() => {\r\n          setToggle(!toggle);\r\n          sendOpenHABRequest(toggle);\r\n        }}\r\n      />\r\n    </div>\r\n    \r\n  );\r\n};\r\n\r\nexport default DetailedSwitch;\r\n","C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\screens\\NotFound.js",[],[],"C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\screens\\Overview.js",["157","158","159","160","161"],[],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport openHAB from \"../openHAB/openHAB\";\r\nimport OverviewTopDownDeviceElement from \"../components/OverviewTopDownDeviceElement\";\r\nimport OverviewTopDownSwitchElement from \"../components/OverviewTopDownSwitchElement\";\r\nimport OverviewDeviceList from \"../components/OverviewDeviceList\";\r\nimport OverviewSwitchList from \"../components/OverviewSwitchList\";\r\nimport OverviewTopDownStaticElement from \"../components/OverviewTopDownStaticElement\";\r\nimport Counter from \"../components/Counter\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport DeviceConfigurator from \"../components/DeviceConfig\";\r\nimport { token } from \"./Login/Login\";\r\nimport base64 from 'base-64';\r\n\r\nvar regex = /^(?!.*Sensor).*$/i;\r\n\r\nconst Overview = () => {\r\n  const [openHABItems, setOpenHABItems] = useState([]);\r\n  const [peopleInsideRoom, setPeopleInsideRoom] = useState()\r\n  const [energyConsumptionData, setEnergyConsumptionData] = useState({\r\n    averageEnergy: 0,\r\n    devicesCount: 0,\r\n    switchCount: 0,\r\n    totalEnergy: 0,\r\n  });\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const config = {\r\n    headers: { Authorization: token },\r\n    };\r\n\r\n  const timerRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    document.title = \"SmartRoom – Overview\";\r\n    let auth = sessionStorage.getItem(\"auth\");\r\n    if (auth !== \"true\") {\r\n      navigate(\"/login\");\r\n    } else {\r\n      timerRef.current = setInterval(function () {\r\n        fetchOpenHABItems();\r\n        fetchEnergyConsumptionData();\r\n        fetchPeopleInsideRoom();\r\n      }, 1000);\r\n      return () => {\r\n        clearInterval(timerRef.current);\r\n      };\r\n    }\r\n  }, []);\r\n\r\n  const fetchPeopleInsideRoom = async () => {\r\n  try {\r\n    const response = await Axios.get(openHAB.url + \"/api/v1/devices/roomstatus\", config);\r\n    //console.log(response.data.amount); // Access the correct key\r\n    const numberOfPeopleInsideRoom = response.data.amount;\r\n    setPeopleInsideRoom(numberOfPeopleInsideRoom);\r\n  } catch (error) {\r\n    console.error(\"Error fetching number of people inside the room:\", error);\r\n  }\r\n};\r\n\r\n  const fetchOpenHABItems = async () => {\r\n    const response = await Axios.get(openHAB.url + \"/api/v1/devices/items\", config);\r\n    setOpenHABItems(response.data);\r\n  };\r\n\r\n  const fetchEnergyConsumptionData = async () => {\r\n    try {\r\n      const response = await Axios.get(\r\n        openHAB.url + \"/api/v1/devices/energy_consumption\",\r\n        config\r\n      );\r\n\r\n      //console.log(\"Energy Consumption Response:\", response.data);\r\n\r\n      // Update state with the fetched energy consumption data\r\n      setEnergyConsumptionData({\r\n        averageEnergy: response.data.average_energy,\r\n        devicesCount: response.data.devices_count,\r\n        switchCount: response.data.switch_count,\r\n        totalEnergy: response.data.total_energy,\r\n      });\r\n      \r\n      \r\n    } catch (error) {\r\n      console.error(\"Error fetching energy consumption data:\", error);\r\n    }\r\n  };\r\n\r\n\r\n  var switches = [];\r\n  var devices = [];\r\n  openHABItems.forEach(function (item) {\r\n    if (item.type === \"Switch\" && regex.test(item.name)) {\r\n      switches.push(item);\r\n    }\r\n    if (item.type === \"Switch\" && !regex.test(item.name)){\r\n      devices.push(item);\r\n    }\r\n    if (\"Switch\" !== item.type) {\r\n      devices.push(item);\r\n    }\r\n  });\r\n\r\n  //Turned on devices\r\n  var totalConsumption = 0.0;\r\n  var turnedOnDevices = [];\r\n  openHABItems.forEach(function (item) {\r\n  const isOn =  item.state === 'ON';\r\n\r\n  if (isOn) {\r\n    turnedOnDevices.push(item);\r\n    totalConsumption += Number.parseFloat(item.state);\r\n  }\r\n  });\r\n\r\n  function getTurnedOnDevices() {\r\n  return turnedOnDevices.filter(device => device.state === \"ON\");\r\n}\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <div className=\"card cardCounter\">\r\n          <Counter\r\n            value={energyConsumptionData.totalEnergy}\r\n            text=\"Total consumption in kWh\"\r\n            unit=\"kWh\"\r\n            unitDescription=\"Kilowatt hours\"\r\n            description=\"This value represents the total overall energy consumption of the smart room\"\r\n            decimals=\"2\"\r\n          />\r\n          <Counter\r\n            value={energyConsumptionData.averageEnergy}\r\n            text=\"Average consumption in kWh\"\r\n            unit=\"kWh\"\r\n            unitDescription=\"Kilowatt hours\"\r\n            description=\"This value represents the average overall energy consumption per device of the smart room\"\r\n            decimals=\"2\"\r\n          />\r\n          <Counter\r\n            value={energyConsumptionData.devicesCount}\r\n            text=\"Devices\"\r\n            description=\"This value represents the amount of devices in the smart room\"\r\n            decimals=\"0\"\r\n          />\r\n          <Counter\r\n            value={energyConsumptionData.devicesCount}\r\n            text=\"Turned on devices\"\r\n            description=\"This value represents the amount of turned on devices in the smart room\"\r\n            decimals=\"0\"\r\n          />\r\n          <Counter\r\n            value={energyConsumptionData.switchCount}\r\n            text=\"Switches\"\r\n            description=\"This value represents the amount of switches in the smart room\"\r\n            decimals=\"0\"\r\n          />\r\n          <Counter\r\n            value={peopleInsideRoom}\r\n            text=\"People inside the Room\"\r\n            description=\"This value represents the number of the people inside the smart room\"\r\n            decimals=\"0\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"flex-container\">\r\n          <OverviewTopDownStaticElement id=\"tv1\" name=\"TV1\"/>\r\n          <OverviewTopDownStaticElement id=\"tv2\" name=\"TV2\" />\r\n          <OverviewTopDownStaticElement id=\"sofa\" name=\"Sofa\" />\r\n          <OverviewTopDownStaticElement id=\"window1\" name=\"Window\" />\r\n          <OverviewTopDownStaticElement id=\"window2\" name=\"Window\" />\r\n          <OverviewTopDownStaticElement id=\"lamp1\" name=\"Lamp\" />\r\n          <OverviewTopDownStaticElement id=\"lamp2\" name=\"Lamp\" />\r\n          <OverviewTopDownStaticElement id=\"server\" name=\"Server\" />\r\n          <OverviewTopDownStaticElement id=\"door\" name=\"Door\" />\r\n          <OverviewTopDownStaticElement id=\"camera\" name=\"Camera\" />\r\n\r\n          {devices.length === 0 && devices.length === 0 && (\r\n            <div className=\"noDevicesPopup\">\r\n              No devices or switches found. Make sure openHAB is running!\r\n            </div>\r\n          )}\r\n\r\n          \r\n\r\n          {/* {devices.map((device) => (\r\n            <OverviewTopDownDeviceElement\r\n              id = {device.name}\r\n              devices = {devices}\r\n            />\r\n          ))} */}\r\n\r\n          {switches.map((s) => (\r\n            <OverviewTopDownSwitchElement id={s.name} switches={switches} />\r\n          ))}\r\n        </div>\r\n        \r\n        <OverviewDeviceList\r\n          name = {\"Turned on devices\"}\r\n          deviceList={turnedOnDevices}\r\n        />\r\n        <OverviewSwitchList name={\"Switches\"} switchList={switches} />\r\n        {/* New section: Devices that can be turned off */}\r\n        <div className=\"your-custom-class-if-needed\">\r\n          <DeviceConfigurator />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nexport default Overview;",["162","163","164","165","166","167"],"C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\screens\\AllSwitches.js",["168","169"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { generatePath, useNavigate } from \"react-router-dom\";\r\nimport openHAB from \"../openHAB/openHAB\";\r\nimport Axios from \"axios\";\r\nimport ToggleButton from \"react-toggle-button\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport { token } from \"./Login/Login\";\r\nimport base64 from 'base-64';\r\nvar regex = /^(?!.*Sensor).*$/i;\r\nconst AllSwitches = () => {\r\n  let navigate = useNavigate();\r\n\r\n  const [openHABItems, setOpenHABItems] = useState([]);\r\n  const [toggle, setToggle] = useState(false); // Switch toggle handler\r\n  const [responseStatus, setResponseStatus] = useState([]);\r\n\r\n  //let base64 = require(\"base-64\");\r\n    const config = {\r\n      headers: { Authorization: token },\r\n    };\r\n\r\n  const postConfig = {\r\n    headers: {\r\n      Authorization: token,\r\n      \"Content-Type\": \"text/plain\",\r\n    },\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.title = \"SmartRoom – All devices\";\r\n    let auth = sessionStorage.getItem(\"auth\");\r\n    if (auth !== \"true\") {\r\n      navigate(\"/login\");\r\n    } else {\r\n      fetchOpenHABItems();\r\n    }\r\n  }, []);\r\n\r\n  const fetchOpenHABItems = async () => {\r\n    const response = await Axios.get(openHAB.url + \"/api/v1/devices/items\", config);\r\n    setOpenHABItems(response.data);\r\n  };\r\n\r\n  var switches = [];\r\n  openHABItems.forEach(function (item) {\r\n    if (item.type === \"Switch\" && regex.test(item.name)) {\r\n            switches.push(item);\r\n          }\r\n        }\r\n  );\r\n\r\n  function redirectToDetailedSwitch(id) {\r\n    let path = generatePath(\"/switches/:id/details\", { id });\r\n    navigate(path);\r\n  }\r\n\r\n  async function toggleAllSwitches(toggle) {\r\n    switches.forEach(function (item) {\r\n      if (toggle === true) {\r\n        Axios\r\n          .post(openHAB.url + \"/api/v1/devices/items/\" + item.name, \"OFF\", postConfig)\r\n          .then((response) => {\r\n            setResponseStatus(response.data);\r\n            console.log(responseStatus);\r\n          });\r\n      } else {\r\n        Axios\r\n          .post(openHAB.url + \"/api/v1/devices/items/\" + item.name, \"ON\", postConfig)\r\n          .then((response) => {\r\n            setResponseStatus(response.data);\r\n            console.log(responseStatus);\r\n          });\r\n      }\r\n      fetchOpenHABItems();\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {switches.length === 0 && (\r\n        <div className=\"noDevicesPopup\">\r\n          No switches found. Make sure openHAB is running!\r\n        </div>\r\n      )}\r\n      {switches.length > 0 && (\r\n        <div className=\"card masterSwitch\">\r\n          <ToggleButton\r\n            id=\"masterToggle\"\r\n            value={toggle}\r\n            onToggle={() => {\r\n              setToggle(!toggle);\r\n              toggleAllSwitches(toggle);\r\n            }}\r\n          />\r\n          <div className=\"masterSwitchContainer\">\r\n            <div id=\"masterSwitchDesc\">Master-Switch</div>\r\n            <img\r\n              id=\"masterHelpIcon\"\r\n              src=\"help.svg\"\r\n              alt=\"help\"\r\n              width=\"14px\"\r\n              height=\"14px\"\r\n              data-tip\r\n              data-for=\"masterSwitch\"\r\n            />\r\n            <ReactTooltip id=\"masterSwitch\">\r\n              <span>Toggle all devices at once</span>\r\n            </ReactTooltip>\r\n          </div>\r\n        </div>\r\n      )}\r\n      <div className=\"vertical-scroll-area\">\r\n        {switches.map((src) => (\r\n          <>\r\n            {src.state === \"OFF\" && (\r\n              <button\r\n                id=\"switchOFF\"\r\n                className=\"card hov-primary vertical\"\r\n                onClick={() => redirectToDetailedSwitch(src.name)}\r\n              >\r\n                {\r\n                  <div\r\n                    key={src.title}\r\n                    className=\"card-image vertical\"\r\n                    style={{\r\n                      backgroundImage: `url('/resources/${src.name}.svg')`,\r\n                      filter:\r\n                        \"invert(35%) sepia(24%) saturate(6006%) hue-rotate(349deg) brightness(84%) contrast(89%)\",\r\n                    }}\r\n                  />\r\n                }\r\n                <div\r\n                  className=\"card-title vertical\"\r\n                  style={{\r\n                    color: \"#cc4125\",\r\n                  }}\r\n                >\r\n                  {src.label}\r\n                </div>\r\n              </button>\r\n            )}\r\n            {src.state === \"ON\" && (\r\n              <button\r\n                id=\"switchON\"\r\n                className=\"card hov-primary vertical\"\r\n                onClick={() => redirectToDetailedSwitch(src.name)}\r\n              >\r\n                {\r\n                  <div\r\n                    key={src.title}\r\n                    className=\"card-image vertical\"\r\n                    style={{\r\n                      backgroundImage: `url('/resources/${src.name}.svg')`,\r\n                      filter:\r\n                        \"invert(56%) sepia(39%) saturate(532%) hue-rotate(57deg) brightness(98%) contrast(90%)\",\r\n                    }}\r\n                  />\r\n                }\r\n                <div\r\n                  className=\"card-title vertical\"\r\n                  style={{\r\n                    color: \"#6aa84f\",\r\n                  }}\r\n                >\r\n                  {src.label}\r\n                </div>\r\n              </button>\r\n            )}\r\n          </>\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AllSwitches;\r\n","C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\components\\Header.js",["170"],[],"C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\screens\\AllDevices.js",["171","172"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { generatePath, useNavigate } from \"react-router-dom\";\r\nimport openHAB from \"../openHAB/openHAB\";\r\nimport Axios from \"axios\";\r\nimport base64 from 'base-64';\r\nimport { token } from \"./Login/Login\";\r\nvar regex = /^(?!.*Sensor).*$/i;\r\nconst AllDevices = () => {\r\n  let navigate = useNavigate();\r\n\r\n  const [openHABItems, setOpenHABItems] = useState([]);\r\n\r\n  //let base64 = require(\"base-64\");\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.title = \"SmartRoom – All devices\";\r\n    let auth = sessionStorage.getItem(\"auth\")\r\n    if(auth !== \"true\") {\r\n      navigate(\"/login\");\r\n    }else{\r\n      fetchOpenHABItems();\r\n    }\r\n  }, []);\r\n\r\n  const fetchOpenHABItems = async () => {\r\n    const response = await Axios(openHAB.url + \"/api/v1/devices/items\", config);\r\n    setOpenHABItems(response.data);\r\n  };\r\n\r\n  var devices = [];\r\n  openHABItems.forEach(function (item) {\r\n    if (item.label !== \"Total_Energy_Consumption_1000_01\" && item.label !== \"Number_people_detection_1000_05\"){\r\n      if (item.type === \"Switch\" && !regex.test(item.name)){\r\n        devices.push(item);\r\n      }\r\n      if (\"Switch\" !== item.type) {\r\n        devices.push(item);\r\n      }\r\n    }\r\n  });\r\n\r\n  function redirectToDetailedDevice(id) {\r\n    if (!id) {\r\n      console.error(\"ID no válido\");\r\n      return;\r\n    }else{\r\n      let path = generatePath(\"/devices/:id/details\", { id });\r\n      navigate(path);\r\n    }\r\n    \r\n  }\r\n\r\n  return (\r\n    <> \r\n    {devices.length === 0 &&\r\n      <div className=\"noDevicesPopup\">\r\n        No devices found. Make sure openHAB is running!\r\n      </div>\r\n    }\r\n\r\n      <div className=\"vertical-scroll-area\">\r\n        {devices.map((src) => (\r\n          <button\r\n            className=\"card hov-primary vertical\"\r\n            onClick={() =>\r\n              redirectToDetailedDevice(src.label)\r\n            }\r\n          >\r\n            {\r\n              <div\r\n                key={src.title}\r\n                className=\"card-image vertical\"\r\n                style={{\r\n                  backgroundImage: `25`,\r\n                }}\r\n              />\r\n            }\r\n            <div className=\"card-title vertical\">\r\n              {src.name}\r\n            </div>\r\n          </button>\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AllDevices;\r\n","C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\screens\\ControlPanel.js",["173","174","175"],[],"C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\screens\\Login\\Login.js",[],[],"C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\components\\OverviewDeviceList.js",[],[],"C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\components\\OverviewTopDownStaticElement.js",[],[],"C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\components\\Graphs.js",["176","177","178"],[],"import {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { React, useState, useEffect } from 'react';\r\nimport { DropdownButton, Dropdown } from 'react-bootstrap';\r\nimport * as moment from 'moment';\r\nimport apiCallBackend from '../services/ApiCallBackend';\r\nimport Stack from 'react-bootstrap/Stack';\r\n\r\nconst Graphs = () => {\r\n  ChartJS.register(\r\n    CategoryScale,\r\n    LinearScale,\r\n    PointElement,\r\n    LineElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend\r\n  );\r\n\r\n  const energies = [\r\n    'active_import_energy',\r\n    'active_export_energy',\r\n    'reactive_import_energy',\r\n    'reactive_export_energy',\r\n    'apparent_import_energy',\r\n    'apparent_export_energy',\r\n  ]\r\n\r\n  const colors = {\r\n    'active_import_energy' : '142, 202, 230',\r\n    'active_export_energy':'33, 158, 188',\r\n    'reactive_import_energy':'2, 48, 71',\r\n    'reactive_export_energy':'255, 183, 3',\r\n    'apparent_import_energy':'251, 133, 0',\r\n    'apparent_export_energy':'155, 34, 38'\r\n  }\r\n  \r\n  const [allDatasets, setAllDatasets] = useState([])\r\n  const [chartData, setChartData] = useState({\r\n    labels: [],\r\n    datasets:[]\r\n  });\r\n  const [selectRange, setSelectRange] = useState('Select a range')\r\n\r\n  let requestbody = {\r\n    id : '13',\r\n    measure: 'active_import_energy',\r\n    final_time : moment().format('YYYY-MM-DD hh:mm:ss'),\r\n    start_time : moment().subtract(1, 'years').format('YYYY-MM-DD hh:mm:ss')\r\n  }\r\n\r\n  useEffect(() => {\r\n    apiCall();\r\n  }, [])\r\n\r\n  const apiCall = async() => {\r\n    setChartData(chartData => ({...chartData,\r\n      datasets: []\r\n    }))\r\n\r\n    const update = energies.map(async (energy) => {\r\n      requestbody = {...requestbody,\r\n        measure: energy\r\n      }\r\n      await apiCallBackend(requestbody).then(data => {\r\n        setAllDatasets(allDatasets => ([...allDatasets, energy]));\r\n        setChartData(chartData => ({\r\n          tension: 0.1,\r\n          labels: data.lastMeasurements.map((eachMeasure) => {\r\n            const moment_source = moment(eachMeasure.time, 'ddd, DD MMM YYYY HH:mm:ss Z')\r\n            //console.log(moment_source)\r\n            return moment_source.format('DD-MM-YYYY HH:mm');\r\n          }),\r\n          datasets: [...chartData.datasets,\r\n            {\r\n              label: energy.replace(/_/gi, \" \").split(\"energy\")[0],\r\n              data: data.lastMeasurements.map((eachMeasure) => {\r\n                return eachMeasure.value;\r\n              }),\r\n              borderColor: 'rgb(' + colors[energy] + ')',\r\n              backgroundColor: 'rgba(' + colors[energy] + ', 0.5)',\r\n            }\r\n          ]\r\n        }));\r\n      })\r\n    })\r\n  }\r\n  \r\n  \r\n  var updateRequestBody = (range) => {\r\n    switch(range) {\r\n      case \"5hours\":\r\n        requestbody = {...requestbody,\r\n          final_time : moment().format('YYYY-MM-DD hh:mm:ss'),\r\n          start_time : moment().subtract(5, 'hours').format('YYYY-MM-DD hh:mm:ss')\r\n        }\r\n        setSelectRange('Last 5 hours')\r\n        apiCall()\r\n        break; \r\n      case '1day':\r\n        requestbody = {...requestbody,\r\n          final_time : moment().format('YYYY-MM-DD hh:mm:ss'),\r\n          start_time : moment().subtract(1, 'days').format('YYYY-MM-DD hh:mm:ss')\r\n        }\r\n        apiCall()\r\n        setSelectRange('Last day')\r\n        break; \r\n      case '1week':\r\n        requestbody = {...requestbody,\r\n          final_time : moment().format('YYYY-MM-DD hh:mm:ss'),\r\n          start_time : moment().subtract(7, 'days').format('YYYY-MM-DD hh:mm:ss')\r\n        }\r\n        apiCall()\r\n        setSelectRange('Last week')\r\n        break; \r\n      case '1month':\r\n        requestbody = {...requestbody,\r\n          final_time : moment().format('YYYY-MM-DD hh:mm:ss'),\r\n          start_time : moment().subtract(1, 'months').format('YYYY-MM-DD hh:mm:ss')\r\n        }\r\n        setSelectRange('Last month')\r\n        apiCall()\r\n        break; \r\n      case '1year':\r\n        requestbody = {...requestbody,\r\n          final_time : moment().format('YYYY-MM-DD hh:mm:ss'),\r\n          start_time : moment().subtract(2, 'months').format('YYYY-MM-DD hh:mm:ss')\r\n        }\r\n        setSelectRange('Last year')\r\n        apiCall()\r\n        break; \r\n      default:\r\n        console.log('Wrong range')\r\n        break; \r\n    }\r\n  }\r\n\r\n  \r\n  const options = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: 'top',\r\n        display: true\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: 'Energy Measurements',\r\n      },\r\n    },\r\n    scales: {\r\n      x: {\r\n        grid: {\r\n          display: false\r\n        },\r\n        ticks: {\r\n          display: false\r\n        }\r\n      },\r\n      y: {\r\n        grid: {\r\n          display: false\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Stack gap={2}>\r\n      <DropdownButton id=\"dropdown-basic-button\" title={selectRange}  align={{ lg: 'left' }}>\r\n      <Dropdown.Item href=\"#/action-1\" onClick={() => updateRequestBody('5hours')}>Last 5 hours</Dropdown.Item>\r\n      <Dropdown.Item href=\"#/action-2\" onClick={() => updateRequestBody('1day')}>Last day</Dropdown.Item>\r\n      <Dropdown.Item href=\"#/action-3\" onClick={() => updateRequestBody('1week')}>Last week</Dropdown.Item>\r\n      <Dropdown.Item href=\"#/action-3\" onClick={() => updateRequestBody('1month')}>Last month</Dropdown.Item>\r\n      <Dropdown.Item href=\"#/action-3\" onClick={() => updateRequestBody('1year')}>Last year</Dropdown.Item>\r\n      </DropdownButton>\r\n      <div className=\"bg-light border\">\r\n      <Line options={options} data={chartData} />\r\n      </div>\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default Graphs;\r\n","C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\components\\OverviewTopDownSwitchElement.js",[],[],"C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\components\\OverviewTopDownDeviceElement.js",[],[],"C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\components\\Counter.js",[],[],"C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\components\\OverviewSwitchList.js",[],[],"C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\openHAB\\openHAB.js",[],[],"C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\services\\ApiCallBackend.js",[],[],"C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\dummyData\\Measurements.js",[],[],"C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\screens\\UserAccountCreation.js",[],[],"C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\screens\\AdminAlert.js",[],[],"C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\components\\DeviceConfig.js",["179"],[],"C:\\Users\\klevi.alushi\\Desktop\\frontend\\src\\components\\TimeConfig.js",["180"],[],{"ruleId":"181","severity":1,"message":"182","line":11,"column":8,"nodeType":"183","endLine":11,"endColumn":10,"suggestions":"184"},{"ruleId":"185","severity":1,"message":"186","line":7,"column":8,"nodeType":"187","messageId":"188","endLine":7,"endColumn":14},{"ruleId":"181","severity":1,"message":"189","line":33,"column":6,"nodeType":"183","endLine":33,"endColumn":20,"suggestions":"190"},{"ruleId":"185","severity":1,"message":"191","line":7,"column":8,"nodeType":"187","messageId":"188","endLine":7,"endColumn":14},{"ruleId":"185","severity":1,"message":"186","line":10,"column":8,"nodeType":"187","messageId":"188","endLine":10,"endColumn":14},{"ruleId":"185","severity":1,"message":"192","line":18,"column":10,"nodeType":"187","messageId":"188","endLine":18,"endColumn":24},{"ruleId":"181","severity":1,"message":"193","line":33,"column":6,"nodeType":"183","endLine":33,"endColumn":8,"suggestions":"194"},{"ruleId":"185","severity":1,"message":"195","line":4,"column":8,"nodeType":"187","messageId":"188","endLine":4,"endColumn":36},{"ruleId":"185","severity":1,"message":"186","line":13,"column":8,"nodeType":"187","messageId":"188","endLine":13,"endColumn":14},{"ruleId":"181","severity":1,"message":"196","line":50,"column":6,"nodeType":"183","endLine":50,"endColumn":8,"suggestions":"197"},{"ruleId":"185","severity":1,"message":"198","line":107,"column":7,"nodeType":"187","messageId":"188","endLine":107,"endColumn":23},{"ruleId":"185","severity":1,"message":"199","line":118,"column":12,"nodeType":"187","messageId":"188","endLine":118,"endColumn":30},{"ruleId":"200","replacedBy":"201"},{"ruleId":"202","replacedBy":"203"},{"ruleId":"204","replacedBy":"205"},{"ruleId":"206","replacedBy":"207"},{"ruleId":"208","replacedBy":"209"},{"ruleId":"210","replacedBy":"211"},{"ruleId":"185","severity":1,"message":"186","line":8,"column":8,"nodeType":"187","messageId":"188","endLine":8,"endColumn":14},{"ruleId":"181","severity":1,"message":"212","line":37,"column":6,"nodeType":"183","endLine":37,"endColumn":8,"suggestions":"213"},{"ruleId":"214","severity":1,"message":"215","line":26,"column":19,"nodeType":"216","endLine":31,"endColumn":21},{"ruleId":"185","severity":1,"message":"186","line":5,"column":8,"nodeType":"187","messageId":"188","endLine":5,"endColumn":14},{"ruleId":"181","severity":1,"message":"212","line":26,"column":6,"nodeType":"183","endLine":26,"endColumn":8,"suggestions":"217"},{"ruleId":"181","severity":1,"message":"212","line":33,"column":6,"nodeType":"183","endLine":33,"endColumn":8,"suggestions":"218"},{"ruleId":"185","severity":1,"message":"219","line":232,"column":17,"nodeType":"187","messageId":"188","endLine":232,"endColumn":24},{"ruleId":"185","severity":1,"message":"220","line":233,"column":17,"nodeType":"187","messageId":"188","endLine":233,"endColumn":23},{"ruleId":"185","severity":1,"message":"221","line":47,"column":10,"nodeType":"187","messageId":"188","endLine":47,"endColumn":21},{"ruleId":"181","severity":1,"message":"222","line":63,"column":6,"nodeType":"183","endLine":63,"endColumn":8,"suggestions":"223"},{"ruleId":"185","severity":1,"message":"224","line":70,"column":11,"nodeType":"187","messageId":"188","endLine":70,"endColumn":17},{"ruleId":"181","severity":1,"message":"225","line":23,"column":6,"nodeType":"183","endLine":23,"endColumn":8,"suggestions":"226"},{"ruleId":"181","severity":1,"message":"227","line":22,"column":6,"nodeType":"183","endLine":22,"endColumn":8,"suggestions":"228"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["229"],"no-unused-vars","'base64' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'fetchOpenHABItem'. Either include it or remove the dependency array.",["230"],"'Graphs' is defined but never used.","'responseStatus' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fetchOpenHABItem' and 'navigate'. Either include them or remove the dependency array.",["231"],"'OverviewTopDownDeviceElement' is defined but never used.","React Hook useEffect has missing dependencies: 'fetchEnergyConsumptionData', 'fetchOpenHABItems', 'fetchPeopleInsideRoom', and 'navigate'. Either include them or remove the dependency array.",["232"],"'totalConsumption' is assigned a value but never used.","'getTurnedOnDevices' is defined but never used.","dot-location",[],"new-parens",[],"no-mixed-operators",[],"no-new-object",["233"],"no-whitespace-before-property",[],"rest-spread-spacing",[],"React Hook useEffect has missing dependencies: 'fetchOpenHABItems' and 'navigate'. Either include them or remove the dependency array.",["234"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["235"],["236"],"'thingID' is assigned a value but never used.","'itemID' is assigned a value but never used.","'allDatasets' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'apiCall'. Either include it or remove the dependency array.",["237"],"'update' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fetchDevices' and 'navigate'. Either include them or remove the dependency array.",["238"],"React Hook useEffect has missing dependencies: 'fetchTimers' and 'navigate'. Either include them or remove the dependency array.",["239"],{"desc":"240","fix":"241"},{"desc":"242","fix":"243"},{"desc":"244","fix":"245"},{"desc":"246","fix":"247"},"no-object-constructor",{"desc":"248","fix":"249"},{"desc":"248","fix":"250"},{"desc":"248","fix":"251"},{"desc":"252","fix":"253"},{"desc":"254","fix":"255"},{"desc":"256","fix":"257"},"Update the dependencies array to be: [navigate]",{"range":"258","text":"259"},"Update the dependencies array to be: [fetchOpenHABItem, id, navigate]",{"range":"260","text":"261"},"Update the dependencies array to be: [fetchOpenHABItem, navigate]",{"range":"262","text":"263"},"Update the dependencies array to be: [fetchEnergyConsumptionData, fetchOpenHABItems, fetchPeopleInsideRoom, navigate]",{"range":"264","text":"265"},"Update the dependencies array to be: [fetchOpenHABItems, navigate]",{"range":"266","text":"267"},{"range":"268","text":"267"},{"range":"269","text":"267"},"Update the dependencies array to be: [apiCall]",{"range":"270","text":"271"},"Update the dependencies array to be: [fetchDevices, navigate]",{"range":"272","text":"273"},"Update the dependencies array to be: [fetchTimers, navigate]",{"range":"274","text":"275"},[216,218],"[navigate]",[929,943],"[fetchOpenHABItem, id, navigate]",[1068,1070],"[fetchOpenHABItem, navigate]",[1696,1698],"[fetchEnergyConsumptionData, fetchOpenHABItems, fetchPeopleInsideRoom, navigate]",[1102,1104],"[fetchOpenHABItems, navigate]",[743,745],[1086,1088],[1594,1596],"[apiCall]",[624,626],"[fetchDevices, navigate]",[558,560],"[fetchTimers, navigate]"]