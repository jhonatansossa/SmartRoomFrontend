[{"C:\\Users\\adga2\\Desktop\\SmartRoom - Frontend\\SmartRoomFrontend\\src\\index.js":"1","C:\\Users\\adga2\\Desktop\\SmartRoom - Frontend\\SmartRoomFrontend\\src\\App.js":"2","C:\\Users\\adga2\\Desktop\\SmartRoom - Frontend\\SmartRoomFrontend\\src\\reportWebVitals.js":"3","C:\\Users\\adga2\\Desktop\\SmartRoom - Frontend\\SmartRoomFrontend\\src\\components\\Header.js":"4","C:\\Users\\adga2\\Desktop\\SmartRoom - Frontend\\SmartRoomFrontend\\src\\components\\Footer.js":"5","C:\\Users\\adga2\\Desktop\\SmartRoom - Frontend\\SmartRoomFrontend\\src\\screens\\Overview.js":"6","C:\\Users\\adga2\\Desktop\\SmartRoom - Frontend\\SmartRoomFrontend\\src\\components\\NotFoundComponent.js":"7","C:\\Users\\adga2\\Desktop\\SmartRoom - Frontend\\SmartRoomFrontend\\src\\screens\\AllSwitches.js":"8","C:\\Users\\adga2\\Desktop\\SmartRoom - Frontend\\SmartRoomFrontend\\src\\screens\\DetailedSwitch.js":"9","C:\\Users\\adga2\\Desktop\\SmartRoom - Frontend\\SmartRoomFrontend\\src\\screens\\NotFound.js":"10","C:\\Users\\adga2\\Desktop\\SmartRoom - Frontend\\SmartRoomFrontend\\src\\screens\\DoorStatus.js":"11","C:\\Users\\adga2\\Desktop\\SmartRoom - Frontend\\SmartRoomFrontend\\src\\screens\\AllDevices.js":"12","C:\\Users\\adga2\\Desktop\\SmartRoom - Frontend\\SmartRoomFrontend\\src\\screens\\DetailedDevice.js":"13","C:\\Users\\adga2\\Desktop\\SmartRoom - Frontend\\SmartRoomFrontend\\src\\screens\\Login\\Login.js":"14","C:\\Users\\adga2\\Desktop\\SmartRoom - Frontend\\SmartRoomFrontend\\src\\components\\OverviewTopDownDeviceElement.js":"15","C:\\Users\\adga2\\Desktop\\SmartRoom - Frontend\\SmartRoomFrontend\\src\\components\\OverviewDeviceList.js":"16","C:\\Users\\adga2\\Desktop\\SmartRoom - Frontend\\SmartRoomFrontend\\src\\components\\OverviewTopDownStaticElement.js":"17","C:\\Users\\adga2\\Desktop\\SmartRoom - Frontend\\SmartRoomFrontend\\src\\components\\OverviewTopDownSwitchElement.js":"18","C:\\Users\\adga2\\Desktop\\SmartRoom - Frontend\\SmartRoomFrontend\\src\\components\\OverviewSwitchList.js":"19","C:\\Users\\adga2\\Desktop\\SmartRoom - Frontend\\SmartRoomFrontend\\src\\components\\Counter.js":"20","C:\\Users\\adga2\\Desktop\\SmartRoom - Frontend\\SmartRoomFrontend\\src\\components\\Graphs.js":"21","C:\\Users\\adga2\\Desktop\\SmartRoom - Frontend\\SmartRoomFrontend\\src\\openHAB\\openHAB.js":"22","C:\\Users\\adga2\\Desktop\\SmartRoom - Frontend\\SmartRoomFrontend\\src\\services\\ApiCallBackend.js":"23","C:\\Users\\adga2\\Desktop\\SmartRoom - Frontend\\SmartRoomFrontend\\src\\dummyData\\Measurements.js":"24"},{"size":690,"mtime":1699537309698,"results":"25","hashOfConfig":"26"},{"size":1872,"mtime":1700279071852,"results":"27","hashOfConfig":"26"},{"size":375,"mtime":1699537309698,"results":"28","hashOfConfig":"26"},{"size":2061,"mtime":1699537309690,"results":"29","hashOfConfig":"26"},{"size":601,"mtime":1699537309690,"results":"30","hashOfConfig":"26"},{"size":5750,"mtime":1700838110443,"results":"31","hashOfConfig":"26"},{"size":313,"mtime":1699537309691,"results":"32","hashOfConfig":"26"},{"size":5395,"mtime":1700663287858,"results":"33","hashOfConfig":"26"},{"size":2265,"mtime":1700331975810,"results":"34","hashOfConfig":"26"},{"size":704,"mtime":1700532383558,"results":"35","hashOfConfig":"26"},{"size":2301,"mtime":1700838206110,"results":"36","hashOfConfig":"26"},{"size":2143,"mtime":1700532385479,"results":"37","hashOfConfig":"26"},{"size":1944,"mtime":1700326277816,"results":"38","hashOfConfig":"26"},{"size":3344,"mtime":1700148109578,"results":"39","hashOfConfig":"26"},{"size":1752,"mtime":1700666936978,"results":"40","hashOfConfig":"26"},{"size":1682,"mtime":1700667207028,"results":"41","hashOfConfig":"26"},{"size":486,"mtime":1699537309692,"results":"42","hashOfConfig":"26"},{"size":1242,"mtime":1699537309692,"results":"43","hashOfConfig":"26"},{"size":1625,"mtime":1699537309691,"results":"44","hashOfConfig":"26"},{"size":891,"mtime":1699537309689,"results":"45","hashOfConfig":"26"},{"size":5699,"mtime":1699537309690,"results":"46","hashOfConfig":"26"},{"size":765,"mtime":1700320502349,"results":"47","hashOfConfig":"26"},{"size":639,"mtime":1699537309702,"results":"48","hashOfConfig":"26"},{"size":402,"mtime":1699537309693,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ayo35l",{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119"},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\adga2\\Desktop\\SmartRoom - Frontend\\SmartRoomFrontend\\src\\index.js",[],[],"C:\\Users\\adga2\\Desktop\\SmartRoom - Frontend\\SmartRoomFrontend\\src\\App.js",[],[],"C:\\Users\\adga2\\Desktop\\SmartRoom - Frontend\\SmartRoomFrontend\\src\\reportWebVitals.js",[],[],"C:\\Users\\adga2\\Desktop\\SmartRoom - Frontend\\SmartRoomFrontend\\src\\components\\Header.js",["129"],[],"import React from \"react\";\r\nimport { Navbar, Nav, Container } from \"react-bootstrap\";\r\nimport {LinkContainer} from 'react-router-bootstrap'\r\n\r\nimport {useLocation} from \"react-router-dom\";\r\n\r\nconst Header = () => {\r\n    var location = useLocation()\r\n\r\n  if(location.pathname !== \"/login\" && location.pathname !== \"/404\" && location.pathname !== \"/\" ){\r\n    return (\r\n        <header>\r\n          <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\r\n            <Container>\r\n            <LinkContainer to=\"/overview\">\r\n            <Navbar.Brand>\r\n                  <img\r\n                      src=\"smart-room-logo-white.svg\"\r\n                      width=\"50\"\r\n                      height=\"50\"\r\n                      className=\"img-logo\"\r\n                  />\r\n                  SmartRoom\r\n                </Navbar.Brand>\r\n              </LinkContainer>\r\n              <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n              <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                \r\n                <Nav className=\"ml-auto\">\r\n                  <LinkContainer to='/overview'>\r\n                    <Nav.Link >Overview</Nav.Link>\r\n                  </LinkContainer>\r\n                  <LinkContainer to='/devices'>\r\n                    <Nav.Link>All Devices</Nav.Link>\r\n                  </LinkContainer>                  \r\n                  <LinkContainer to='/switches'>\r\n                    <Nav.Link>All Switches</Nav.Link>\r\n                  </LinkContainer>\r\n                  <LinkContainer to='/door'>\r\n                    <Nav.Link>Door status</Nav.Link>\r\n                  </LinkContainer>\r\n                  <LinkContainer to='/login'>\r\n                    <Nav.Link>\r\n                      <i className=\"fas fa-user\"/> Logout\r\n                    </Nav.Link>\r\n                  </LinkContainer>\r\n                  \r\n                </Nav>\r\n              </Navbar.Collapse>\r\n            </Container>\r\n          </Navbar>\r\n        </header>\r\n    );\r\n  }else{\r\n    return(\r\n        <div/>\r\n    );\r\n  }\r\n\r\n};\r\n\r\nexport default Header;\r\n","C:\\Users\\adga2\\Desktop\\SmartRoom - Frontend\\SmartRoomFrontend\\src\\components\\Footer.js",[],[],"C:\\Users\\adga2\\Desktop\\SmartRoom - Frontend\\SmartRoomFrontend\\src\\screens\\Overview.js",["130","131","132"],[],"C:\\Users\\adga2\\Desktop\\SmartRoom - Frontend\\SmartRoomFrontend\\src\\components\\NotFoundComponent.js",["133"],[],"import {useNavigate} from \"react-router-dom\";\r\nimport {useEffect} from \"react\";\r\n\r\n\r\nconst NotFoundComponent = () => {\r\n    let navigate = useNavigate();\r\n\r\n\r\n    useEffect(() => {\r\n        navigate(\"/404\");\r\n    }, []);\r\n\r\n    return(\r\n        <div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NotFoundComponent","C:\\Users\\adga2\\Desktop\\SmartRoom - Frontend\\SmartRoomFrontend\\src\\screens\\AllSwitches.js",["134","135"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { generatePath, useNavigate } from \"react-router-dom\";\r\nimport openHAB from \"../openHAB/openHAB\";\r\nimport Axios from \"axios\";\r\nimport ToggleButton from \"react-toggle-button\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport { token } from \"./Login/Login\";\r\nimport base64 from 'base-64';\r\nvar regex = /^(?!.*Sensor).*$/i;\r\nconst AllSwitches = () => {\r\n  let navigate = useNavigate();\r\n\r\n  const [openHABItems, setOpenHABItems] = useState([]);\r\n  const [toggle, setToggle] = useState(false); // Switch toggle handler\r\n  const [responseStatus, setResponseStatus] = useState([]);\r\n\r\n  //let base64 = require(\"base-64\");\r\n    const config = {\r\n      headers: { Authorization: token },\r\n    };\r\n\r\n  const postConfig = {\r\n    headers: {\r\n      Authorization: token,\r\n      \"Content-Type\": \"text/plain\",\r\n    },\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.title = \"SmartRoom – All devices\";\r\n    let auth = sessionStorage.getItem(\"auth\");\r\n    if (auth !== \"true\") {\r\n      navigate(\"/login\");\r\n    } else {\r\n      fetchOpenHABItems();\r\n    }\r\n  }, []);\r\n\r\n  const fetchOpenHABItems = async () => {\r\n    const response = await Axios.get(openHAB.url + \"/api/v1/devices/items\", config);\r\n    setOpenHABItems(response.data);\r\n  };\r\n\r\n  var switches = [];\r\n  openHABItems.forEach(function (item) {\r\n    if (item.type === \"Switch\" && regex.test(item.name)) {\r\n            switches.push(item);\r\n          }\r\n        }\r\n  );\r\n\r\n  function redirectToDetailedSwitch(id) {\r\n    let path = generatePath(\"/switches/:id/details\", { id });\r\n    navigate(path);\r\n  }\r\n\r\n  async function toggleAllSwitches(toggle) {\r\n    switches.forEach(function (item) {\r\n      if (toggle === true) {\r\n        Axios\r\n          .post(openHAB.url + \"/api/v1/devices/items/\" + item.name, \"OFF\", postConfig)\r\n          .then((response) => {\r\n            setResponseStatus(response.data);\r\n            console.log(responseStatus);\r\n          });\r\n      } else {\r\n        Axios\r\n          .post(openHAB.url + \"/api/v1/devices/items/\" + item.name, \"ON\", postConfig)\r\n          .then((response) => {\r\n            setResponseStatus(response.data);\r\n            console.log(responseStatus);\r\n          });\r\n      }\r\n      fetchOpenHABItems();\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {switches.length === 0 && (\r\n        <div className=\"noDevicesPopup\">\r\n          No switches found. Make sure openHAB is running!\r\n        </div>\r\n      )}\r\n      {switches.length > 0 && (\r\n        <div className=\"card masterSwitch\">\r\n          <ToggleButton\r\n            id=\"masterToggle\"\r\n            value={toggle}\r\n            onToggle={() => {\r\n              setToggle(!toggle);\r\n              toggleAllSwitches(toggle);\r\n            }}\r\n          />\r\n          <div className=\"masterSwitchContainer\">\r\n            <div id=\"masterSwitchDesc\">Master-Switch</div>\r\n            <img\r\n              id=\"masterHelpIcon\"\r\n              src=\"help.svg\"\r\n              alt=\"help\"\r\n              width=\"14px\"\r\n              height=\"14px\"\r\n              data-tip\r\n              data-for=\"masterSwitch\"\r\n            />\r\n            <ReactTooltip id=\"masterSwitch\">\r\n              <span>Toggle all devices at once</span>\r\n            </ReactTooltip>\r\n          </div>\r\n        </div>\r\n      )}\r\n      <div className=\"vertical-scroll-area\">\r\n        {switches.map((src) => (\r\n          <>\r\n            {src.state === \"OFF\" && (\r\n              <button\r\n                id=\"switchOFF\"\r\n                className=\"card hov-primary vertical\"\r\n                onClick={() => redirectToDetailedSwitch(src.name)}\r\n              >\r\n                {\r\n                  <div\r\n                    key={src.title}\r\n                    className=\"card-image vertical\"\r\n                    style={{\r\n                      backgroundImage: `url('/resources/${src.name}.svg')`,\r\n                      filter:\r\n                        \"invert(35%) sepia(24%) saturate(6006%) hue-rotate(349deg) brightness(84%) contrast(89%)\",\r\n                    }}\r\n                  />\r\n                }\r\n                <div\r\n                  className=\"card-title vertical\"\r\n                  style={{\r\n                    color: \"#cc4125\",\r\n                  }}\r\n                >\r\n                  {src.label}\r\n                </div>\r\n              </button>\r\n            )}\r\n            {src.state === \"ON\" && (\r\n              <button\r\n                id=\"switchON\"\r\n                className=\"card hov-primary vertical\"\r\n                onClick={() => redirectToDetailedSwitch(src.name)}\r\n              >\r\n                {\r\n                  <div\r\n                    key={src.title}\r\n                    className=\"card-image vertical\"\r\n                    style={{\r\n                      backgroundImage: `url('/resources/${src.name}.svg')`,\r\n                      filter:\r\n                        \"invert(56%) sepia(39%) saturate(532%) hue-rotate(57deg) brightness(98%) contrast(90%)\",\r\n                    }}\r\n                  />\r\n                }\r\n                <div\r\n                  className=\"card-title vertical\"\r\n                  style={{\r\n                    color: \"#6aa84f\",\r\n                  }}\r\n                >\r\n                  {src.label}\r\n                </div>\r\n              </button>\r\n            )}\r\n          </>\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AllSwitches;\r\n",["136","137","138","139","140","141"],"C:\\Users\\adga2\\Desktop\\SmartRoom - Frontend\\SmartRoomFrontend\\src\\screens\\DetailedSwitch.js",["142","143","144"],[],"import { React, useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport ToggleButton from \"react-toggle-button\";\r\nimport Axios from \"axios\";\r\nimport axios from \"axios\";\r\nimport openHAB from \"../openHAB/openHAB\";\r\nimport { token } from \"./Login/Login\";\r\nimport base64 from 'base-64';\r\n\r\n  const DetailedSwitch = () => {\r\n  const navigate = useNavigate();\r\n  const { id } = useParams();\r\n  //Fetching openHAB switch item\r\n  const [openHABItem, setOpenHABItem] = useState([]);\r\n  const [toggle, setToggle] = useState(false); // Switch toggle handler\r\n  const [responseStatus, setResponseStatus] = useState([]);\r\n\r\n  //let base64 = require(\"base-64\");\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.title = \"SmartRoom – Details\" ;\r\n    let auth = sessionStorage.getItem(\"auth\");\r\n    if (auth !== \"true\") {\r\n      navigate(\"/login\");\r\n    } else {\r\n      fetchOpenHABItem();\r\n    }\r\n  }, []);\r\n\r\n  const fetchOpenHABItem = async () => {\r\n    const response = await Axios(openHAB.url + \"/api/v1/devices/items/\" + id, config);\r\n    setOpenHABItem(response.data);\r\n    if (response.data.state === \"ON\") {\r\n      setToggle(true);\r\n    } else {\r\n      setToggle(false);\r\n    }\r\n  };\r\n\r\n  const tokens = id.split('_');\r\n  const xtokens = tokens.slice(-2);\r\n\r\n  async function sendOpenHABRequest(toggle) {\r\n    if (toggle) {\r\n      axios\r\n        .post(openHAB.url + \"/api/v1/devices/items/\" + xtokens[0] + \"/\" + xtokens[1]+ \"/state\", {\"state\": \"OFF\"}, config)\r\n        .then((response) => {\r\n          setResponseStatus(response.data);\r\n        });\r\n    } else {\r\n      axios\r\n        .post(openHAB.url + \"/api/v1/devices/items/\" + xtokens[0] + \"/\" + xtokens[1] + \"/state\", {\"state\": \"ON\"}, config)\r\n        .then((response) => {\r\n          setResponseStatus(response.data);\r\n        });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"vertical-scroll-area\">\r\n      <h2 className=\"title\">{openHABItem.label}</h2>\r\n      <ToggleButton\r\n        value={toggle}\r\n        onToggle={() => {\r\n          setToggle(!toggle);\r\n          sendOpenHABRequest(toggle);\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DetailedSwitch;\r\n","C:\\Users\\adga2\\Desktop\\SmartRoom - Frontend\\SmartRoomFrontend\\src\\screens\\NotFound.js",[],[],"C:\\Users\\adga2\\Desktop\\SmartRoom - Frontend\\SmartRoomFrontend\\src\\screens\\DoorStatus.js",["145"],[],"C:\\Users\\adga2\\Desktop\\SmartRoom - Frontend\\SmartRoomFrontend\\src\\screens\\AllDevices.js",["146","147"],[],"C:\\Users\\adga2\\Desktop\\SmartRoom - Frontend\\SmartRoomFrontend\\src\\screens\\DetailedDevice.js",["148","149"],[],"import { React, useEffect, useState, useRef } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport Graphs from \"../components/Graphs\";\r\nimport openHAB from \"../openHAB/openHAB\";\r\nimport Axios from \"axios\";\r\nimport { token } from \"./Login/Login\";\r\nimport base64 from 'base-64';\r\n\r\nconst DetailedDevice = () => {\r\n  const [openHABItem, setOpenHABItem] = useState();\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  //let base64 = require(\"base-64\");\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  };\r\n\r\n  const timerRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    document.title = \"SmartRoom – \" + id;\r\n    let auth = sessionStorage.getItem(\"auth\");\r\n    if (auth !== \"true\") {\r\n      navigate(\"/login\");\r\n    } else {\r\n      timerRef.current = setInterval(function () {\r\n        fetchOpenHABItem();\r\n      }, 1000);\r\n      return () => {\r\n        clearInterval(timerRef.current);\r\n      };\r\n    }\r\n  }, []);\r\n\r\n  const fetchOpenHABItem = async () => {\r\n    const response = await Axios(\r\n      openHAB.url + \"/api/v1/devices/items/\" + id + \"_ACTIVE_EXPORT_KWH\",\r\n      config\r\n    );\r\n    setOpenHABItem(response.data);\r\n  };\r\n\r\n  if (openHABItem === undefined) {\r\n    return <div />;\r\n  } else {\r\n    return (\r\n      <div className=\"vertical-scroll-area\">\r\n        <h2 className=\"title\">\r\n          {openHABItem.stateDescription.options[0].value}\r\n        </h2>\r\n        <div className=\"card vertical\">\r\n          <div\r\n            key={id}\r\n            className=\"card-image vertical\"\r\n            style={{\r\n              backgroundImage: `url('/resources/${id}.svg'`,\r\n            }}\r\n          />\r\n          <div className=\"card-title card-content\">\r\n            <p>\r\n              Current consumption: <b>{openHABItem.state} kWh</b>\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <Graphs />\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default DetailedDevice;\r\n","C:\\Users\\adga2\\Desktop\\SmartRoom - Frontend\\SmartRoomFrontend\\src\\screens\\Login\\Login.js",[],[],"C:\\Users\\adga2\\Desktop\\SmartRoom - Frontend\\SmartRoomFrontend\\src\\components\\OverviewTopDownDeviceElement.js",[],[],"C:\\Users\\adga2\\Desktop\\SmartRoom - Frontend\\SmartRoomFrontend\\src\\components\\OverviewDeviceList.js",[],[],"C:\\Users\\adga2\\Desktop\\SmartRoom - Frontend\\SmartRoomFrontend\\src\\components\\OverviewTopDownStaticElement.js",[],[],"C:\\Users\\adga2\\Desktop\\SmartRoom - Frontend\\SmartRoomFrontend\\src\\components\\OverviewTopDownSwitchElement.js",[],[],"C:\\Users\\adga2\\Desktop\\SmartRoom - Frontend\\SmartRoomFrontend\\src\\components\\OverviewSwitchList.js",[],[],"C:\\Users\\adga2\\Desktop\\SmartRoom - Frontend\\SmartRoomFrontend\\src\\components\\Counter.js",[],[],"C:\\Users\\adga2\\Desktop\\SmartRoom - Frontend\\SmartRoomFrontend\\src\\components\\Graphs.js",["150","151","152"],[],"import {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { React, useState, useEffect } from 'react';\r\nimport { DropdownButton, Dropdown } from 'react-bootstrap';\r\nimport * as moment from 'moment';\r\nimport apiCallBackend from '../services/ApiCallBackend';\r\nimport Stack from 'react-bootstrap/Stack';\r\n\r\nconst Graphs = () => {\r\n  ChartJS.register(\r\n    CategoryScale,\r\n    LinearScale,\r\n    PointElement,\r\n    LineElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend\r\n  );\r\n\r\n  const energies = [\r\n    'active_import_energy',\r\n    'active_export_energy',\r\n    'reactive_import_energy',\r\n    'reactive_export_energy',\r\n    'apparent_import_energy',\r\n    'apparent_export_energy',\r\n  ]\r\n\r\n  const colors = {\r\n    'active_import_energy' : '142, 202, 230',\r\n    'active_export_energy':'33, 158, 188',\r\n    'reactive_import_energy':'2, 48, 71',\r\n    'reactive_export_energy':'255, 183, 3',\r\n    'apparent_import_energy':'251, 133, 0',\r\n    'apparent_export_energy':'155, 34, 38'\r\n  }\r\n  \r\n  const [allDatasets, setAllDatasets] = useState([])\r\n  const [chartData, setChartData] = useState({\r\n    labels: [],\r\n    datasets:[]\r\n  });\r\n  const [selectRange, setSelectRange] = useState('Select a range')\r\n\r\n  let requestbody = {\r\n    id : '13',\r\n    measure: 'active_import_energy',\r\n    final_time : moment().format('YYYY-MM-DD hh:mm:ss'),\r\n    start_time : moment().subtract(1, 'years').format('YYYY-MM-DD hh:mm:ss')\r\n  }\r\n\r\n  useEffect(() => {\r\n    apiCall();\r\n  }, [])\r\n\r\n  const apiCall = async() => {\r\n    setChartData(chartData => ({...chartData,\r\n      datasets: []\r\n    }))\r\n\r\n    const update = energies.map(async (energy) => {\r\n      requestbody = {...requestbody,\r\n        measure: energy\r\n      }\r\n      await apiCallBackend(requestbody).then(data => {\r\n        setAllDatasets(allDatasets => ([...allDatasets, energy]));\r\n        setChartData(chartData => ({\r\n          tension: 0.1,\r\n          labels: data.lastMeasurements.map((eachMeasure) => {\r\n            const moment_source = moment(eachMeasure.time, 'ddd, DD MMM YYYY HH:mm:ss Z')\r\n            //console.log(moment_source)\r\n            return moment_source.format('DD-MM-YYYY HH:mm');\r\n          }),\r\n          datasets: [...chartData.datasets,\r\n            {\r\n              label: energy.replace(/_/gi, \" \").split(\"energy\")[0],\r\n              data: data.lastMeasurements.map((eachMeasure) => {\r\n                return eachMeasure.value;\r\n              }),\r\n              borderColor: 'rgb(' + colors[energy] + ')',\r\n              backgroundColor: 'rgba(' + colors[energy] + ', 0.5)',\r\n            }\r\n          ]\r\n        }));\r\n      })\r\n    })\r\n  }\r\n  \r\n  \r\n  var updateRequestBody = (range) => {\r\n    switch(range) {\r\n      case \"5hours\":\r\n        requestbody = {...requestbody,\r\n          final_time : moment().format('YYYY-MM-DD hh:mm:ss'),\r\n          start_time : moment().subtract(5, 'hours').format('YYYY-MM-DD hh:mm:ss')\r\n        }\r\n        setSelectRange('Last 5 hours')\r\n        apiCall()\r\n        break; \r\n      case '1day':\r\n        requestbody = {...requestbody,\r\n          final_time : moment().format('YYYY-MM-DD hh:mm:ss'),\r\n          start_time : moment().subtract(1, 'days').format('YYYY-MM-DD hh:mm:ss')\r\n        }\r\n        apiCall()\r\n        setSelectRange('Last day')\r\n        break; \r\n      case '1week':\r\n        requestbody = {...requestbody,\r\n          final_time : moment().format('YYYY-MM-DD hh:mm:ss'),\r\n          start_time : moment().subtract(7, 'days').format('YYYY-MM-DD hh:mm:ss')\r\n        }\r\n        apiCall()\r\n        setSelectRange('Last week')\r\n        break; \r\n      case '1month':\r\n        requestbody = {...requestbody,\r\n          final_time : moment().format('YYYY-MM-DD hh:mm:ss'),\r\n          start_time : moment().subtract(1, 'months').format('YYYY-MM-DD hh:mm:ss')\r\n        }\r\n        setSelectRange('Last month')\r\n        apiCall()\r\n        break; \r\n      case '1year':\r\n        requestbody = {...requestbody,\r\n          final_time : moment().format('YYYY-MM-DD hh:mm:ss'),\r\n          start_time : moment().subtract(2, 'months').format('YYYY-MM-DD hh:mm:ss')\r\n        }\r\n        setSelectRange('Last year')\r\n        apiCall()\r\n        break; \r\n      default:\r\n        console.log('Wrong range')\r\n        break; \r\n    }\r\n  }\r\n\r\n  \r\n  const options = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: 'top',\r\n        display: true\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: 'Energy Measurements',\r\n      },\r\n    },\r\n    scales: {\r\n      x: {\r\n        grid: {\r\n          display: false\r\n        },\r\n        ticks: {\r\n          display: false\r\n        }\r\n      },\r\n      y: {\r\n        grid: {\r\n          display: false\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Stack gap={2}>\r\n      <DropdownButton id=\"dropdown-basic-button\" title={selectRange}  align={{ lg: 'left' }}>\r\n      <Dropdown.Item href=\"#/action-1\" onClick={() => updateRequestBody('5hours')}>Last 5 hours</Dropdown.Item>\r\n      <Dropdown.Item href=\"#/action-2\" onClick={() => updateRequestBody('1day')}>Last day</Dropdown.Item>\r\n      <Dropdown.Item href=\"#/action-3\" onClick={() => updateRequestBody('1week')}>Last week</Dropdown.Item>\r\n      <Dropdown.Item href=\"#/action-3\" onClick={() => updateRequestBody('1month')}>Last month</Dropdown.Item>\r\n      <Dropdown.Item href=\"#/action-3\" onClick={() => updateRequestBody('1year')}>Last year</Dropdown.Item>\r\n      </DropdownButton>\r\n      <div className=\"bg-light border\">\r\n      <Line options={options} data={chartData} />\r\n      </div>\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default Graphs;\r\n","C:\\Users\\adga2\\Desktop\\SmartRoom - Frontend\\SmartRoomFrontend\\src\\openHAB\\openHAB.js",[],[],"C:\\Users\\adga2\\Desktop\\SmartRoom - Frontend\\SmartRoomFrontend\\src\\services\\ApiCallBackend.js",[],[],"C:\\Users\\adga2\\Desktop\\SmartRoom - Frontend\\SmartRoomFrontend\\src\\dummyData\\Measurements.js",[],[],{"ruleId":"153","severity":1,"message":"154","line":17,"column":19,"nodeType":"155","endLine":22,"endColumn":21},{"ruleId":"156","severity":1,"message":"157","line":8,"column":8,"nodeType":"158","messageId":"159","endLine":8,"endColumn":36},{"ruleId":"156","severity":1,"message":"160","line":12,"column":8,"nodeType":"158","messageId":"159","endLine":12,"endColumn":14},{"ruleId":"161","severity":1,"message":"162","line":47,"column":6,"nodeType":"163","endLine":47,"endColumn":8,"suggestions":"164"},{"ruleId":"161","severity":1,"message":"165","line":11,"column":8,"nodeType":"163","endLine":11,"endColumn":10,"suggestions":"166"},{"ruleId":"156","severity":1,"message":"160","line":8,"column":8,"nodeType":"158","messageId":"159","endLine":8,"endColumn":14},{"ruleId":"161","severity":1,"message":"167","line":37,"column":6,"nodeType":"163","endLine":37,"endColumn":8,"suggestions":"168"},{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","replacedBy":"174"},{"ruleId":"175","replacedBy":"176"},{"ruleId":"177","replacedBy":"178"},{"ruleId":"179","replacedBy":"180"},{"ruleId":"156","severity":1,"message":"160","line":9,"column":8,"nodeType":"158","messageId":"159","endLine":9,"endColumn":14},{"ruleId":"156","severity":1,"message":"181","line":17,"column":10,"nodeType":"158","messageId":"159","endLine":17,"endColumn":24},{"ruleId":"161","severity":1,"message":"182","line":32,"column":6,"nodeType":"163","endLine":32,"endColumn":8,"suggestions":"183"},{"ruleId":"161","severity":1,"message":"167","line":27,"column":6,"nodeType":"163","endLine":27,"endColumn":8,"suggestions":"184"},{"ruleId":"156","severity":1,"message":"160","line":5,"column":8,"nodeType":"158","messageId":"159","endLine":5,"endColumn":14},{"ruleId":"161","severity":1,"message":"167","line":26,"column":6,"nodeType":"163","endLine":26,"endColumn":8,"suggestions":"185"},{"ruleId":"156","severity":1,"message":"160","line":7,"column":8,"nodeType":"158","messageId":"159","endLine":7,"endColumn":14},{"ruleId":"161","severity":1,"message":"186","line":34,"column":6,"nodeType":"163","endLine":34,"endColumn":8,"suggestions":"187"},{"ruleId":"156","severity":1,"message":"188","line":47,"column":10,"nodeType":"158","messageId":"159","endLine":47,"endColumn":21},{"ruleId":"161","severity":1,"message":"189","line":63,"column":6,"nodeType":"163","endLine":63,"endColumn":8,"suggestions":"190"},{"ruleId":"156","severity":1,"message":"191","line":70,"column":11,"nodeType":"158","messageId":"159","endLine":70,"endColumn":17},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'OverviewTopDownStaticElement' is defined but never used.","Identifier","unusedVar","'base64' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchEnergyConsumptionData', 'fetchOpenHABItems', and 'navigate'. Either include them or remove the dependency array.","ArrayExpression",["192"],"React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.",["193"],"React Hook useEffect has missing dependencies: 'fetchOpenHABItems' and 'navigate'. Either include them or remove the dependency array.",["194"],"dot-location",[],"new-parens",[],"no-mixed-operators",[],"no-new-object",["195"],"no-whitespace-before-property",[],"rest-spread-spacing",[],"'responseStatus' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fetchOpenHABItem' and 'navigate'. Either include them or remove the dependency array.",["196"],["197"],["198"],"React Hook useEffect has missing dependencies: 'fetchOpenHABItem', 'id', and 'navigate'. Either include them or remove the dependency array.",["199"],"'allDatasets' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'apiCall'. Either include it or remove the dependency array.",["200"],"'update' is assigned a value but never used.",{"desc":"201","fix":"202"},{"desc":"203","fix":"204"},{"desc":"205","fix":"206"},"no-object-constructor",{"desc":"207","fix":"208"},{"desc":"205","fix":"209"},{"desc":"205","fix":"210"},{"desc":"211","fix":"212"},{"desc":"213","fix":"214"},"Update the dependencies array to be: [fetchEnergyConsumptionData, fetchOpenHABItems, navigate]",{"range":"215","text":"216"},"Update the dependencies array to be: [navigate]",{"range":"217","text":"218"},"Update the dependencies array to be: [fetchOpenHABItems, navigate]",{"range":"219","text":"220"},"Update the dependencies array to be: [fetchOpenHABItem, navigate]",{"range":"221","text":"222"},{"range":"223","text":"220"},{"range":"224","text":"220"},"Update the dependencies array to be: [fetchOpenHABItem, id, navigate]",{"range":"225","text":"226"},"Update the dependencies array to be: [apiCall]",{"range":"227","text":"228"},[1538,1540],"[fetchEnergyConsumptionData, fetchOpenHABItems, navigate]",[216,218],"[navigate]",[1102,1104],"[fetchOpenHABItems, navigate]",[1024,1026],"[fetchOpenHABItem, navigate]",[815,817],[743,745],[969,971],"[fetchOpenHABItem, id, navigate]",[1594,1596],"[apiCall]"]