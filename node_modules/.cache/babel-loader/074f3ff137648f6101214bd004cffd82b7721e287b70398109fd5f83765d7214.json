{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adga2\\\\Desktop\\\\SmartRoom - Frontend\\\\SmartRoomFrontend\\\\src\\\\screens\\\\Overview.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport Axios from \"axios\";\nimport openHAB from \"../openHAB/openHAB\";\nimport OverviewTopDownDeviceElement from \"../components/OverviewTopDownDeviceElement\";\nimport OverviewTopDownSwitchElement from \"../components/OverviewTopDownSwitchElement\";\nimport OverviewDeviceList from \"../components/OverviewDeviceList\";\nimport OverviewSwitchList from \"../components/OverviewSwitchList\";\nimport OverviewTopDownStaticElement from \"../components/OverviewTopDownStaticElement\";\nimport Counter from \"../components/Counter\";\nimport { useNavigate } from \"react-router-dom\";\nimport { token } from \"./Login/Login\";\nimport base64 from 'base-64';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar regex = /^(?!.*Sensor).*$/i;\nconst Overview = () => {\n  _s();\n  const [openHABItems, setOpenHABItems] = useState([]);\n  const [energyConsumptionData, setEnergyConsumptionData] = useState({\n    averageEnergy: 0,\n    devicesCount: 0,\n    switchCount: 0,\n    totalEnergy: 0\n  });\n  const navigate = useNavigate();\n  const config = {\n    headers: {\n      Authorization: token\n    }\n  };\n  const timerRef = useRef(null);\n  useEffect(() => {\n    document.title = \"SmartRoom – Overview\";\n    let auth = sessionStorage.getItem(\"auth\");\n    if (auth !== \"true\") {\n      navigate(\"/login\");\n    } else {\n      timerRef.current = setInterval(function () {\n        fetchOpenHABItems();\n        fetchEnergyConsumptionData();\n      }, 1000);\n      return () => {\n        clearInterval(timerRef.current);\n      };\n    }\n  }, []);\n  const fetchOpenHABItems = async () => {\n    const response = await Axios.get(openHAB.url + \"/api/v1/devices/items\", config);\n    setOpenHABItems(response.data);\n  };\n  const fetchEnergyConsumptionData = async () => {\n    try {\n      const response = await Axios.get(openHAB.url + \"/api/v1/devices/energy_consumption\", config);\n\n      //console.log(\"Energy Consumption Response:\", response.data);\n\n      // Update state with the fetched energy consumption data\n      setEnergyConsumptionData({\n        averageEnergy: response.data.average_energy,\n        devicesCount: response.data.devices_count,\n        switchCount: response.data.switch_count,\n        totalEnergy: response.data.total_energy\n      });\n    } catch (error) {\n      console.error(\"Error fetching energy consumption data:\", error);\n    }\n  };\n  var switches = [];\n  var devices = [];\n  openHABItems.forEach(function (item) {\n    if (item.type === \"Switch\" && regex.test(item.name)) {\n      switches.push(item);\n    }\n    if (item.type === \"Switch\" && !regex.test(item.name)) {\n      devices.push(item);\n    }\n    if (\"Switch\" !== item.type) {\n      devices.push(item);\n    }\n  });\n\n  //Turned on devices\n  var totalConsumption = 0.0;\n  var turnedOnDevices = [];\n  devices.forEach(function (item) {\n    if (item.state > 0) {\n      turnedOnDevices.push(item);\n      console.log(item.label + item.state);\n      totalConsumption = parseFloat(totalConsumption) + parseFloat(item.state);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card cardCounter\",\n        children: [/*#__PURE__*/_jsxDEV(Counter, {\n          value: energyConsumptionData.totalEnergy,\n          text: \"Total consumption in kWh\",\n          unit: \"kWh\",\n          unitDescription: \"Kilowatt hours\",\n          description: \"This value represents the total overall energy consumption of the smart room\",\n          decimals: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Counter, {\n          value: energyConsumptionData.averageEnergy,\n          text: \"Average consumption in kWh\",\n          unit: \"kWh\",\n          unitDescription: \"Kilowatt hours\",\n          description: \"This value represents the average overall energy consumption per device of the smart room\",\n          decimals: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Counter, {\n          value: energyConsumptionData.devicesCount,\n          text: \"Devices\",\n          description: \"This value represents the amount of devices in the smart room\",\n          decimals: \"0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Counter, {\n          value: energyConsumptionData.switchCount,\n          text: \"Turned on devices\",\n          description: \"This value represents the amount of turned on devices in the smart room\",\n          decimals: \"0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Counter, {\n          value: energyConsumptionData.switchCount,\n          text: \"Switches\",\n          description: \"This value represents the amount of switches in the smart room\",\n          decimals: \"0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-container\",\n        children: [devices.length === 0 && devices.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"noDevicesPopup\",\n          children: \"No devices or switches found. Make sure openHAB is running!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this), \"console.log(device) console.log(devices)\", switches.map(s => /*#__PURE__*/_jsxDEV(OverviewTopDownSwitchElement, {\n          id: s.name,\n          switches: switches\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(OverviewDeviceList, {\n        name: \"Turned on devices\",\n        deviceList: turnedOnDevices\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(OverviewSwitchList, {\n        name: \"Switches\",\n        switchList: switches\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Overview, \"7h1N0kx5C4kaCR8eKXbF2BUkOd8=\", false, function () {\n  return [useNavigate];\n});\n_c = Overview;\nexport default Overview;\nvar _c;\n$RefreshReg$(_c, \"Overview\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Axios","openHAB","OverviewTopDownDeviceElement","OverviewTopDownSwitchElement","OverviewDeviceList","OverviewSwitchList","OverviewTopDownStaticElement","Counter","useNavigate","token","base64","regex","Overview","openHABItems","setOpenHABItems","energyConsumptionData","setEnergyConsumptionData","averageEnergy","devicesCount","switchCount","totalEnergy","navigate","config","headers","Authorization","timerRef","document","title","auth","sessionStorage","getItem","current","setInterval","fetchOpenHABItems","fetchEnergyConsumptionData","clearInterval","response","get","url","data","average_energy","devices_count","switch_count","total_energy","error","console","switches","devices","forEach","item","type","test","name","push","totalConsumption","turnedOnDevices","state","log","label","parseFloat","length","map","s"],"sources":["C:/Users/adga2/Desktop/SmartRoom - Frontend/SmartRoomFrontend/src/screens/Overview.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport openHAB from \"../openHAB/openHAB\";\r\nimport OverviewTopDownDeviceElement from \"../components/OverviewTopDownDeviceElement\";\r\nimport OverviewTopDownSwitchElement from \"../components/OverviewTopDownSwitchElement\";\r\nimport OverviewDeviceList from \"../components/OverviewDeviceList\";\r\nimport OverviewSwitchList from \"../components/OverviewSwitchList\";\r\nimport OverviewTopDownStaticElement from \"../components/OverviewTopDownStaticElement\";\r\nimport Counter from \"../components/Counter\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { token } from \"./Login/Login\";\r\nimport base64 from 'base-64';\r\n\r\nvar regex = /^(?!.*Sensor).*$/i;\r\n\r\nconst Overview = () => {\r\n  const [openHABItems, setOpenHABItems] = useState([]);\r\n  const [energyConsumptionData, setEnergyConsumptionData] = useState({\r\n    averageEnergy: 0,\r\n    devicesCount: 0,\r\n    switchCount: 0,\r\n    totalEnergy: 0,\r\n  });\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const config = {\r\n    headers: { Authorization: token },\r\n    };\r\n\r\n  const timerRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    document.title = \"SmartRoom – Overview\";\r\n    let auth = sessionStorage.getItem(\"auth\");\r\n    if (auth !== \"true\") {\r\n      navigate(\"/login\");\r\n    } else {\r\n      timerRef.current = setInterval(function () {\r\n        fetchOpenHABItems();\r\n        fetchEnergyConsumptionData();\r\n      }, 1000);\r\n      return () => {\r\n        clearInterval(timerRef.current);\r\n      };\r\n    }\r\n  }, []);\r\n\r\n  const fetchOpenHABItems = async () => {\r\n    const response = await Axios.get(openHAB.url + \"/api/v1/devices/items\", config);\r\n    setOpenHABItems(response.data);\r\n  };\r\n\r\n  const fetchEnergyConsumptionData = async () => {\r\n    try {\r\n      const response = await Axios.get(\r\n        openHAB.url + \"/api/v1/devices/energy_consumption\",\r\n        config\r\n      );\r\n\r\n      //console.log(\"Energy Consumption Response:\", response.data);\r\n\r\n      // Update state with the fetched energy consumption data\r\n      setEnergyConsumptionData({\r\n        averageEnergy: response.data.average_energy,\r\n        devicesCount: response.data.devices_count,\r\n        switchCount: response.data.switch_count,\r\n        totalEnergy: response.data.total_energy,\r\n      });\r\n      \r\n      \r\n    } catch (error) {\r\n      console.error(\"Error fetching energy consumption data:\", error);\r\n    }\r\n  };\r\n\r\n\r\n  var switches = [];\r\n  var devices = [];\r\n  openHABItems.forEach(function (item) {\r\n    if (item.type === \"Switch\" && regex.test(item.name)) {\r\n      switches.push(item);\r\n    }\r\n    if (item.type === \"Switch\" && !regex.test(item.name)){\r\n      devices.push(item);\r\n    }\r\n    if (\"Switch\" !== item.type) {\r\n      devices.push(item);\r\n    }\r\n  });\r\n\r\n  //Turned on devices\r\n  var totalConsumption = 0.0;\r\n  var turnedOnDevices = [];\r\n  devices.forEach(function (item) {\r\n    if (item.state > 0) {\r\n      turnedOnDevices.push(item);\r\n      console.log(item.label + item.state);\r\n      totalConsumption = parseFloat(totalConsumption) + parseFloat(item.state);\r\n    }\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <div className=\"card cardCounter\">\r\n          <Counter\r\n            value={energyConsumptionData.totalEnergy}\r\n            text=\"Total consumption in kWh\"\r\n            unit=\"kWh\"\r\n            unitDescription=\"Kilowatt hours\"\r\n            description=\"This value represents the total overall energy consumption of the smart room\"\r\n            decimals=\"2\"\r\n          />\r\n          <Counter\r\n            value={energyConsumptionData.averageEnergy}\r\n            text=\"Average consumption in kWh\"\r\n            unit=\"kWh\"\r\n            unitDescription=\"Kilowatt hours\"\r\n            description=\"This value represents the average overall energy consumption per device of the smart room\"\r\n            decimals=\"2\"\r\n          />\r\n          <Counter\r\n            value={energyConsumptionData.devicesCount}\r\n            text=\"Devices\"\r\n            description=\"This value represents the amount of devices in the smart room\"\r\n            decimals=\"0\"\r\n          />\r\n          <Counter\r\n            value={energyConsumptionData.switchCount}\r\n            text=\"Turned on devices\"\r\n            description=\"This value represents the amount of turned on devices in the smart room\"\r\n            decimals=\"0\"\r\n          />\r\n          <Counter\r\n            value={energyConsumptionData.switchCount}\r\n            text=\"Switches\"\r\n            description=\"This value represents the amount of switches in the smart room\"\r\n            decimals=\"0\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"flex-container\">\r\n          {/* <OverviewTopDownStaticElement id=\"circle\" name=\"Round table\"/>\r\n          <OverviewTopDownStaticElement id=\"horRectangle\" name=\"Table\" />\r\n          <OverviewTopDownStaticElement id=\"server\" name=\"Server\" />\r\n          <OverviewTopDownStaticElement id=\"door\" name=\"Door\" /> */}\r\n\r\n          {devices.length === 0 && devices.length === 0 && (\r\n            <div className=\"noDevicesPopup\">\r\n              No devices or switches found. Make sure openHAB is running!\r\n            </div>\r\n          )}\r\n\r\n          console.log(device)\r\n          console.log(devices)\r\n\r\n          {/* {devices.map((device) => (\r\n            <OverviewTopDownDeviceElement\r\n              id = {device.name}\r\n              devices = {devices}\r\n            />\r\n          ))} */}\r\n\r\n          {switches.map((s) => (\r\n            <OverviewTopDownSwitchElement id={s.name} switches={switches} />\r\n          ))}\r\n        </div>\r\n        \r\n        <OverviewDeviceList\r\n          name = {\"Turned on devices\"}\r\n          deviceList={turnedOnDevices}\r\n        />\r\n        <OverviewSwitchList name={\"Switches\"} switchList={switches} />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nexport default Overview;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}