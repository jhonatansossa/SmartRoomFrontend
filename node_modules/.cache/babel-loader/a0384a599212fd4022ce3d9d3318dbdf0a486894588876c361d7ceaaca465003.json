{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\klevi.alushi\\\\Desktop\\\\frontend\\\\src\\\\screens\\\\AllDevices.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { generatePath, useNavigate } from \"react-router-dom\";\nimport Axios from \"axios\";\nimport openHAB from \"../openHAB/openHAB\";\nimport Login from \"./Login/Login\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AllDevices = () => {\n  _s();\n  const navigate = useNavigate();\n  const [openHABItems, setOpenHABItems] = useState([]);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  useEffect(() => {\n    document.title = \"SmartRoom – All devices\";\n    const auth = sessionStorage.getItem(\"auth\");\n    if (auth !== \"true\") {\n      navigate(\"/login\");\n    } else {\n      fetchOpenHABItems();\n    }\n  }, []);\n  const fetchOpenHABItems = async () => {\n    try {\n      const tempAccessToken = sessionStorage.getItem(\"tempAccessToken\");\n      if (!tempAccessToken) {\n        throw new Error(\"Access token is missing\");\n      }\n      const config = {\n        headers: {\n          Authorization: `Bearer ` + Login.tempAccessToken\n        }\n      };\n      const response = await Axios.get(openHAB.url + \"/api/v1/devices/items\", config);\n      setOpenHABItems(response.data);\n    } catch (error) {\n      console.error(\"Error fetching openHAB items:\", error);\n      setErrorMessage(\"An error occurred while fetching device details\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-popup\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"vertical-scroll-area\",\n      children: openHABItems.map(device => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"device-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: device.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Name: \", device.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"State: \", device.state]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), device.editable && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"(Editable)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 33\n        }, this)]\n      }, device.label, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(AllDevices, \"/SNTgGL1SH7v+e0iYrrh1cWwGK4=\", false, function () {\n  return [useNavigate];\n});\n_c = AllDevices;\nexport default AllDevices;\nvar _c;\n$RefreshReg$(_c, \"AllDevices\");","map":{"version":3,"names":["React","useEffect","useState","generatePath","useNavigate","Axios","openHAB","Login","AllDevices","navigate","openHABItems","setOpenHABItems","errorMessage","setErrorMessage","document","title","auth","sessionStorage","getItem","fetchOpenHABItems","tempAccessToken","Error","config","headers","Authorization","response","get","url","data","error","console","map","device","label","name","state","editable"],"sources":["C:/Users/klevi.alushi/Desktop/frontend/src/screens/AllDevices.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { generatePath, useNavigate } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\nimport openHAB from \"../openHAB/openHAB\";\r\nimport Login from \"./Login/Login\";\r\nconst AllDevices = () => {\r\n  const navigate = useNavigate();\r\n  const [openHABItems, setOpenHABItems] = useState([]);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    document.title = \"SmartRoom – All devices\";\r\n    const auth = sessionStorage.getItem(\"auth\");\r\n\r\n    if (auth !== \"true\") {\r\n      navigate(\"/login\");\r\n    } else {\r\n      fetchOpenHABItems();\r\n    }\r\n  }, []);\r\n\r\n  const fetchOpenHABItems = async () => {\r\n    try {\r\n      const tempAccessToken = sessionStorage.getItem(\"tempAccessToken\");\r\n\r\n      if (!tempAccessToken) {\r\n        throw new Error(\"Access token is missing\");\r\n      }\r\n\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer `+Login.tempAccessToken,\r\n        },\r\n      };\r\n\r\n      const response = await Axios.get(\r\n        openHAB.url + \"/api/v1/devices/items\",\r\n        config\r\n      );\r\n\r\n      setOpenHABItems(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching openHAB items:\", error);\r\n      setErrorMessage(\"An error occurred while fetching device details\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {errorMessage && (\r\n        <div className=\"error-popup\">{errorMessage}</div>\r\n      )}\r\n\r\n      <div className=\"vertical-scroll-area\">\r\n        {openHABItems.map((device) => (\r\n          <div key={device.label} className=\"device-card\">\r\n            <h3>{device.label}</h3>\r\n            <p>Name: {device.name}</p>\r\n            <p>State: {device.state}</p>\r\n            {device.editable && <p>(Editable)</p>}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AllDevices;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,YAAY,EAAEC,WAAW,QAAQ,kBAAkB;AAC5D,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,oBAAoB;AACxC,OAAOC,KAAK,MAAM,eAAe;AAAC;AAAA;AAClC,MAAMC,UAAU,GAAG,MAAM;EAAA;EACvB,MAAMC,QAAQ,GAAGL,WAAW,EAAE;EAC9B,MAAM,CAACM,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACU,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEpDD,SAAS,CAAC,MAAM;IACda,QAAQ,CAACC,KAAK,GAAG,yBAAyB;IAC1C,MAAMC,IAAI,GAAGC,cAAc,CAACC,OAAO,CAAC,MAAM,CAAC;IAE3C,IAAIF,IAAI,KAAK,MAAM,EAAE;MACnBP,QAAQ,CAAC,QAAQ,CAAC;IACpB,CAAC,MAAM;MACLU,iBAAiB,EAAE;IACrB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,iBAAiB,GAAG,YAAY;IACpC,IAAI;MACF,MAAMC,eAAe,GAAGH,cAAc,CAACC,OAAO,CAAC,iBAAiB,CAAC;MAEjE,IAAI,CAACE,eAAe,EAAE;QACpB,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;MAC5C;MAEA,MAAMC,MAAM,GAAG;QACbC,OAAO,EAAE;UACPC,aAAa,EAAG,SAAQ,GAACjB,KAAK,CAACa;QACjC;MACF,CAAC;MAED,MAAMK,QAAQ,GAAG,MAAMpB,KAAK,CAACqB,GAAG,CAC9BpB,OAAO,CAACqB,GAAG,GAAG,uBAAuB,EACrCL,MAAM,CACP;MAEDX,eAAe,CAACc,QAAQ,CAACG,IAAI,CAAC;IAChC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACrDhB,eAAe,CAAC,iDAAiD,CAAC;IACpE;EACF,CAAC;EAED,oBACE;IAAA,WACGD,YAAY,iBACX;MAAK,SAAS,EAAC,aAAa;MAAA,UAAEA;IAAY;MAAA;MAAA;MAAA;IAAA,QAC3C,eAED;MAAK,SAAS,EAAC,sBAAsB;MAAA,UAClCF,YAAY,CAACqB,GAAG,CAAEC,MAAM,iBACvB;QAAwB,SAAS,EAAC,aAAa;QAAA,wBAC7C;UAAA,UAAKA,MAAM,CAACC;QAAK;UAAA;UAAA;UAAA;QAAA,QAAM,eACvB;UAAA,WAAG,QAAM,EAACD,MAAM,CAACE,IAAI;QAAA;UAAA;UAAA;UAAA;QAAA,QAAK,eAC1B;UAAA,WAAG,SAAO,EAACF,MAAM,CAACG,KAAK;QAAA;UAAA;UAAA;UAAA;QAAA,QAAK,EAC3BH,MAAM,CAACI,QAAQ,iBAAI;UAAA,UAAG;QAAU;UAAA;UAAA;UAAA;QAAA,QAAI;MAAA,GAJ7BJ,MAAM,CAACC,KAAK;QAAA;QAAA;QAAA;MAAA,QAMvB;IAAC;MAAA;MAAA;MAAA;IAAA,QACE;EAAA,gBACL;AAEP,CAAC;AAAC,GA5DIzB,UAAU;EAAA,QACGJ,WAAW;AAAA;AAAA,KADxBI,UAAU;AA8DhB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}