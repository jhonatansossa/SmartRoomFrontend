{"ast":null,"code":"/*!\n * Chart.js v3.6.2\n * https://www.chartjs.org\n * (c) 2021 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, d as defaults, i as isObject, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as createContext, j as defined, s as sign, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as isNumber, w as _limitValue, x as _lookupByKey, y as getRelativePosition$1, z as _isPointInArea, A as _rlookupByKey, B as toPadding, C as each, D as getMaximumSize, E as _getParentNode, F as readUsedSize, G as throttled, I as supportsEventListenerOptions, J as _isDomSupported, K as log10, L as _factorize, M as finiteOrDefault, N as callback, O as _addGrace, Q as toDegrees, R as _measureText, S as _int16Range, U as _alignPixel, V as clipArea, W as renderText, X as unclipArea, Y as toFont, Z as _toLeftRightCenter, $ as _alignStartEnd, a0 as overrides, a1 as merge, a2 as _capitalize, a3 as descriptors, a4 as isFunction, a5 as _attachContext, a6 as _createResolver, a7 as _descriptors, a8 as mergeIf, a9 as uid, aa as debounce, ab as retinaScale, ac as clearCanvas, ad as setsEqual, ae as _elementsEqual, af as getAngleFromPoint, ag as _isBetween, ah as _readValueToProps, ai as _updateBezierControlPoints, aj as _computeSegments, ak as _boundSegments, al as _steppedInterpolation, am as _bezierInterpolation, an as _pointInLine, ao as _steppedLineTo, ap as _bezierCurveTo, aq as drawPoint, ar as addRoundedRectPath, as as toTRBL, at as toTRBLCorners, au as _boundSegment, av as _normalizeAngle, aw as getRtlAdapter, ax as overrideTextDirection, ay as _textX, az as restoreTextDirection, aA as noop, aB as distanceBetweenPoints, aC as _setMinAndMaxByKey, aD as niceNum, aE as almostWhole, aF as almostEquals, aG as _decimalPlaces, aH as _longestText, aI as _filterBetween, aJ as _lookup } from './chunks/helpers.segment.js';\nexport { d as defaults } from './chunks/helpers.segment.js';\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    let remaining = 0;\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    this._lastDate = date;\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    if (this._active) {\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n    this._active = from !== to && (loop || elapsed < duration);\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n    factor = elapsed / duration % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n    this._target[prop] = this._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({\n        res,\n        rej\n      });\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: name => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  }\n});\ndefaults.describe('animations', {\n  _fallback: 'animation'\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      }\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      }\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach(prop => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {});\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {\n      $shared: false,\n      $animations: {}\n    });\n  }\n  return options;\n}\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {\n    min,\n    max,\n    minDefined,\n    maxDefined\n  } = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if (positive && value > 0 || !positive && value < 0) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {\n    chart,\n    _cachedMeta: meta\n  } = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {\n    iScale,\n    vScale,\n    index: datasetIndex\n  } = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {\n      [iAxis]: index,\n      [vAxis]: value\n    } = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return createContext(parent, {\n    active: false,\n    dataset: undefined,\n    datasetIndex: index,\n    index,\n    mode: 'default',\n    type: 'dataset'\n  });\n}\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n  }\n}\nconst isDirectUpdateMode = mode => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked && {\n  keys: getSortedDatasetIndices(chart, true),\n  values: null\n};\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n  }\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale ? meta.vScale : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, this);\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n  addElements() {\n    const meta = this._cachedMeta;\n    this._dataCheck();\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n    this._dataCheck();\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    this._resyncElements(resetNewElements);\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n  parse(start, count) {\n    const {\n      _cachedMeta: meta,\n      _data: data\n    } = this;\n    const {\n      iScale,\n      _stacked\n    } = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {\n      iScale,\n      vScale\n    } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {\n      xScale,\n      yScale\n    } = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {\n      xScale,\n      yScale\n    } = meta;\n    const {\n      xAxisKey = 'x',\n      yAxisKey = 'y'\n    } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {\n      mode\n    });\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {\n      min: Number.POSITIVE_INFINITY,\n      max: Number.NEGATIVE_INFINITY\n    };\n    const {\n      min: otherMin,\n      max: otherMax\n    } = getUserBounds(otherScale);\n    let i, parsed;\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || elements.length - start;\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => this.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: !active && this.getSharedOptions(options) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      this.parse(0, count);\n    }\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = arr => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - size / 2\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {\n    start,\n    end,\n    reverse,\n    top,\n    bottom\n  };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n  const {\n    start,\n    end,\n    reverse,\n    top,\n    bottom\n  } = borderProps(properties);\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, {\n  inflateAmount\n}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {\n      iScale,\n      vScale\n    } = meta;\n    const {\n      xAxisKey = 'x',\n      yAxisKey = 'y'\n    } = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getMaxOverflow() {\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {\n      iScale,\n      vScale\n    } = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {\n      index,\n      _cachedMeta: {\n        vScale\n      }\n    } = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n        base,\n        head: base\n      } : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const metasets = iScale.getMatchingVisibleMetas(this._type);\n    const stacked = iScale.options.stacked;\n    const ilen = metasets.length;\n    const stacks = [];\n    let i, item;\n    for (i = 0; i < ilen; ++i) {\n      item = metasets[i];\n      if (!item.controller.options.grouped) {\n        continue;\n      }\n      if (typeof dataIndex !== 'undefined') {\n        const val = item.controller.getParsed(dataIndex)[item.controller._cachedMeta.vScale.axis];\n        if (isNullOrUndef(val) || isNaN(val)) {\n          continue;\n        }\n      }\n      if (stacked === false || stacks.indexOf(item.stack) === -1 || stacked === undefined && item.stack === undefined) {\n        stacks.push(item.stack);\n      }\n      if (item.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = name !== undefined ? stacks.indexOf(name) : -1;\n    return index === -1 ? stacks.length - 1 : index;\n  }\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const {\n      _cachedMeta: {\n        vScale,\n        _stacked\n      },\n      options: {\n        base: baseValue,\n        minBarLength\n      }\n    } = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      head = base + size;\n    }\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + range.chunk * stackIndex + range.chunk / 2;\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true\n    }\n  }\n};\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {\n      xScale,\n      yScale\n    } = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const points = this._cachedMeta.data;\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {\n      iScale,\n      vScale\n    } = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n      if (includeOptions) {\n        properties.options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      this.updateElement(point, i, properties, mode);\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {\n        $shared: false\n      });\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {\n    ratioX,\n    ratioY,\n    offsetX,\n    offsetY\n  };\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = i => +data[i];\n      if (isObject(data[start])) {\n        const {\n          key = 'value'\n        } = this._parsing;\n        getter = i => +resolveObjectKey(data[i], key);\n      }\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min\n    };\n  }\n  update(mode) {\n    const chart = this.chart;\n    const {\n      chartArea\n    } = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n    const {\n      circumference,\n      rotation\n    } = this._getRotationExtents();\n    const {\n      ratioX,\n      ratioY,\n      offsetX,\n      offsetY\n    } = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n    meta.total = this.calculateTotal();\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    let startAngle = this._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n      this.updateElement(arc, i, properties, mode);\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    }\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r'\n};\nDoughnutController.descriptors = {\n  _scriptable: name => name !== 'spacing',\n  _indexable: name => name !== 'spacing'\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {\n              labels: {\n                pointStyle\n              }\n            } = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {\n      dataset: line,\n      data: points = [],\n      _dataset\n    } = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {\n      start,\n      count\n    } = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    this._drawStart = start;\n    this._drawCount = count;\n    if (scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    this.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {\n      iScale,\n      vScale,\n      _stacked,\n      _dataset\n    } = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {\n      spanGaps,\n      segment\n    } = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && parsed[iAxis] - prevParsed[iAxis] > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category'\n    },\n    _value_: {\n      type: 'linear'\n    }\n  }\n};\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {\n      iScale,\n      _parsed\n    } = meta;\n    const axis = iScale.axis;\n    const {\n      min,\n      max,\n      minDefined,\n      maxDefined\n    } = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(Math.min(_lookupByKey(_parsed, iScale.axis, min).lo, animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(_lookupByKey(_parsed, iScale.axis, max).hi + 1, animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1), start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {\n    start,\n    count\n  };\n}\nfunction scaleRangesChanged(meta) {\n  const {\n    xScale,\n    yScale,\n    _scaleRanges\n  } = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value\n    };\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    this.outerRadius = outerRadius - radiusLength * this.index;\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const dataset = this.getDataset();\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / this.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(dataset.data[i]) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const dataset = this.getDataset();\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(dataset.data[index]) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    }\n  },\n  indexAxis: 'r',\n  startAngle: 0\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {\n              labels: {\n                pointStyle\n              }\n            } = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\nclass PieController extends DoughnutController {}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      this.updateElement(line, undefined, properties, mode);\n    }\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const dataset = this.getDataset();\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, dataset.data[i]);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  }\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear'\n    }\n  }\n};\nclass ScatterController extends LineController {}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\nvar controllers = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  BarController: BarController,\n  BubbleController: BubbleController,\n  DoughnutController: DoughnutController,\n  LineController: LineController,\n  PolarAreaController: PolarAreaController,\n  PieController: PieController,\n  RadarController: RadarController,\n  ScatterController: ScatterController\n});\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function (members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\nfunction getRelativePosition(e, chart) {\n  if ('native' in e) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n  return getRelativePosition$1(e, chart);\n}\nfunction evaluateAllVisibleItems(chart, handler) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  let index, data, element;\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    ({\n      index,\n      data\n    } = metasets[i]);\n    for (let j = 0, jlen = data.length; j < jlen; ++j) {\n      element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {\n    controller,\n    data,\n    _sorted\n  } = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {\n          lo: start.lo,\n          hi: end.hi\n        };\n      }\n    }\n  }\n  return {\n    lo: 0,\n    hi: data.length - 1\n  };\n}\nfunction optimizedEvaluateItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {\n      index,\n      data\n    } = metasets[i];\n    const {\n      lo,\n      hi\n    } = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function (pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition) {\n  const items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function (element, datasetIndex, index) {\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({\n        element,\n        datasetIndex,\n        index\n      });\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition) {\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  let items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function (element, datasetIndex, index) {\n    if (intersect && !element.inRange(position.x, position.y, useFinalPosition)) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    if (!_isPointInArea(center, chart.chartArea, chart._minPadding) && !element.inRange(position.x, position.y, useFinalPosition)) {\n      return;\n    }\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{\n        element,\n        datasetIndex,\n        index\n      }];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({\n        element,\n        datasetIndex,\n        index\n      });\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getAxisItems(chart, e, options, useFinalPosition) {\n  const position = getRelativePosition(e, chart);\n  const items = [];\n  const axis = options.axis;\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateAllVisibleItems(chart, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({\n        element,\n        datasetIndex,\n        index\n      });\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      intersectsItem = true;\n    }\n  });\n  if (options.intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition) : getNearestItems(chart, position, axis, false, useFinalPosition);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach(meta => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({\n            element,\n            datasetIndex: meta.index,\n            index\n          });\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition) : getNearestItems(chart, position, axis, false, useFinalPosition);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({\n            element: data[i],\n            datasetIndex,\n            index: i\n          });\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getIntersectItems(chart, position, axis, useFinalPosition);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition);\n    },\n    x(chart, e, options, useFinalPosition) {\n      return getAxisItems(chart, e, {\n        axis: 'x',\n        intersect: options.intersect\n      }, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      return getAxisItems(chart, e, {\n        axis: 'y',\n        intersect: options.intersect\n      }, useFinalPosition);\n    }\n  }\n};\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({\n      position: pos,\n      options: {\n        stack,\n        stackWeight = 1\n      }\n    } = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && pos + stack,\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {\n      stack,\n      pos,\n      stackWeight\n    } = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {\n      count: 0,\n      placed: 0,\n      weight: 0,\n      size: 0\n    });\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {\n    vBoxMaxWidth,\n    hBoxMaxHeight\n  } = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {\n      fullSize\n    } = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {\n    pos,\n    box\n  } = layout;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {\n      size: 0,\n      count: 1\n    };\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal ? {\n    same: widthChanged,\n    other: heightChanged\n  } : {\n    same: heightChanged,\n    other: widthChanged\n  };\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {\n      left: 0,\n      top: 0,\n      right: 0,\n      bottom: 0\n    };\n    positions.forEach(pos => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal ? marginForPositions(['left', 'right']) : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n    const {\n      same,\n      other\n    } = updateDims(chartArea, params, layout, stacks);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {\n    x,\n    y\n  } = chartArea;\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {\n      count: 1,\n      placed: 0,\n      weight: 1\n    };\n    const weight = layout.stackWeight / stack.weight || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  autoPadding: true,\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function () {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) => wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w\n    };\n    each(boxes.chartArea, layout => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {\n        left: 0,\n        top: 0,\n        right: 0,\n        bottom: 0\n      });\n    });\n  }\n};\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n  updateConfig(config) {}\n}\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n  passive: true\n} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {\n    x,\n    y\n  } = getRelativePosition$1(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null\n  };\n}\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {\n    childList: true,\n    subtree: true\n  });\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {\n    childList: true,\n    subtree: true\n  });\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled(event => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, args => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach(prop => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach(key => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {\n      x,\n      y\n    } = this.getProps(['x', 'y'], useFinalPosition);\n    return {\n      x,\n      y\n    };\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return this;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {\n      notation,\n      minimumFractionDigits: numDecimal,\n      maximumFractionDigits: numDecimal\n    };\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {\n  formatters\n};\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: name => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: name => name !== 'borderDash' && name !== 'tickBorderDash'\n});\ndefaults.describe('scales', {\n  _fallback: 'scale'\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: name => name !== 'backdropPadding' && name !== 'callback',\n  _indexable: name => name !== 'backdropPadding'\n});\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\nconst reverseAlign = align => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, cache => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if (reverse && position !== 'right' || !reverse && position === 'right') {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {\n    top,\n    left,\n    bottom,\n    right,\n    chart\n  } = scale;\n  const {\n    chartArea,\n    scales\n  } = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {\n    titleX,\n    titleY,\n    maxWidth,\n    rotation\n  };\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    this.options = options.setContext(this.getContext());\n    this.axis = options.axis;\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {\n      _userMin,\n      _userMax,\n      _suggestedMin,\n      _suggestedMax\n    } = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    let {\n      min,\n      max,\n      minDefined,\n      maxDefined\n    } = this.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {\n        min,\n        max\n      };\n    }\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const {\n      beginAtZero,\n      grace,\n      ticks: tickOpts\n    } = this.options;\n    const sampleSize = tickOpts.sampleSize;\n    this.beforeUpdate();\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n    this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n    this.beforeBuildTicks();\n    this.ticks = this.buildTicks() || [];\n    this.afterBuildTicks();\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n    this.configure();\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation();\n    this.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n    }\n    if (samplingEnabled) {\n      this._convertTicksToLabels(this.ticks);\n    }\n    this.beforeFit();\n    this.fit();\n    this.afterFit();\n    this.afterUpdate();\n  }\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = 0;\n      this.bottom = this.height;\n    }\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    callback(this.options[name], [this]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = this.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {\n      chart,\n      options: {\n        ticks: tickOpts,\n        title: titleOpts,\n        grid: gridOpts\n      }\n    } = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && this.ticks.length) {\n        const {\n          first,\n          last,\n          widest,\n          highest\n        } = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n    this._handleMargins();\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const {\n      ticks: {\n        align,\n        padding\n      },\n      position\n    } = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {\n      axis,\n      position\n    } = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n    this.generateTickLabels(ticks);\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n    this.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {\n      ctx,\n      _longestTextCache: caches\n    } = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {\n        data: {},\n        gc: []\n      };\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = idx => ({\n      width: widths[idx] || 0,\n      height: heights[idx] || 0\n    });\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {\n      min,\n      max\n    } = this;\n    return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n  }\n  getContext(index) {\n    const ticks = this.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {\n      grid,\n      position\n    } = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function (pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const optsAtIndex = grid.setContext(this.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = grid.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(this, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset\n      });\n    }\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {\n      position,\n      ticks: optionTicks\n    } = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {\n      align,\n      crossAlign,\n      padding,\n      mirror\n    } = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      if (isHorizontal) {\n        x = pixel;\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n          case 'middle':\n            top -= height / 2;\n            break;\n          case 'bottom':\n            top -= height;\n            break;\n        }\n        switch (textAlign) {\n          case 'center':\n            left -= width / 2;\n            break;\n          case 'right':\n            left -= width;\n            break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const {\n      position,\n      ticks\n    } = this.options;\n    const rotation = -toRadians(this.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const {\n      position,\n      ticks: {\n        crossAlign,\n        mirror,\n        padding\n      }\n    } = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= widest / 2;\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= widest / 2;\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {\n      textAlign,\n      x\n    };\n  }\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n    const chart = this.chart;\n    const position = this.options.position;\n    if (position === 'left' || position === 'right') {\n      return {\n        top: 0,\n        left: this.left,\n        bottom: chart.height,\n        right: this.right\n      };\n    }\n    if (position === 'top' || position === 'bottom') {\n      return {\n        top: this.top,\n        left: 0,\n        bottom: this.bottom,\n        right: chart.width\n      };\n    }\n  }\n  drawBackground() {\n    const {\n      ctx,\n      options: {\n        backgroundColor\n      },\n      left,\n      top,\n      width,\n      height\n    } = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine({\n            x: item.x1,\n            y: item.y1\n          }, {\n            x: item.x2,\n            y: item.y2\n          }, item);\n        }\n        if (grid.drawTicks) {\n          drawLine({\n            x: item.tx1,\n            y: item.ty1\n          }, {\n            x: item.tx2,\n            y: item.ty2\n          }, {\n            color: item.tickColor,\n            width: item.tickWidth,\n            borderDash: item.tickBorderDash,\n            borderDashOffset: item.tickBorderDashOffset\n          });\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const {\n      chart,\n      ctx,\n      options: {\n        grid\n      }\n    } = this;\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = this.ctx;\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {\n      ctx,\n      options: {\n        position,\n        title,\n        reverse\n      }\n    } = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {\n      titleX,\n      titleY,\n      maxWidth,\n      rotation\n    } = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY]\n    });\n  }\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw: chartArea => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw: chartArea => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: chartArea => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = this.register(proto);\n    }\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [parentScope ? defaults.get(parentScope) : {}, defaults.get(scope), item.defaults]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n        this._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n    if (hook === 'destroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n  return plugins;\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, plugins, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (let i = 0; i < plugins.length; i++) {\n    const plugin = plugins[i];\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, plugin, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {\n    scales: {}\n  };\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{\n      axis\n    }, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{\n        axis\n      }, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get platform() {\n    return this._config.platform;\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType, () => [[`datasets.${datasetType}`, '']]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`, () => [[`datasets.${datasetType}.transitions.${transition}`, `transitions.${transition}`], [`datasets.${datasetType}`, '']]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`, () => [[`datasets.${datasetType}.elements.${elementType}`, `datasets.${datasetType}`, `elements.${elementType}`, '']]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`, () => [[`plugins.${id}`, ...(plugin.additionalOptionScopes || [])]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {\n      options,\n      type\n    } = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {\n      options,\n      type\n    } = this;\n    return [options, overrides[type] || {}, defaults.datasets[type] || {}, {\n      type\n    }, defaults, descriptors];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {\n      $shared: true\n    };\n    const {\n      resolver,\n      subPrefixes\n    } = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {\n      resolver\n    } = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nconst hasFunction = value => isObject(value) && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n  const {\n    isScriptable,\n    isIndexable\n  } = _descriptors(proxy);\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n      return true;\n    }\n  }\n  return false;\n}\nvar version = \"3.6.2\";\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n  return function (a, b) {\n    return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = key => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter(c => c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\nclass Chart {\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas can be reused.');\n    }\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n    instances[this.id] = this;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n  get aspectRatio() {\n    const {\n      options: {\n        aspectRatio,\n        maintainAspectRatio\n      },\n      width,\n      height,\n      _aspectRatio\n    } = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    this.notifyPlugins('beforeInit');\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n    this.bindEvents();\n    this.notifyPlugins('afterInit');\n    return this;\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {\n        width,\n        height\n      };\n    }\n  }\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n    this.notifyPlugins('resize', {\n      size: newSize\n    });\n    callback(options.onResize, [this, newSize], this);\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        this.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(Object.keys(scaleOpts).map(id => {\n        const scaleOptions = scaleOpts[id];\n        const axis = determineAxis(id, scaleOptions);\n        const isRadial = axis === 'r';\n        const isHorizontal = axis === 'x';\n        return {\n          options: scaleOptions,\n          dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n          dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n        };\n      }));\n    }\n    each(items, item => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, scale => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const {\n      _metasets: metasets,\n      data: {\n        datasets\n      }\n    } = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n    this._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {\n          datasetElementType,\n          dataElementType\n        } = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    this._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const config = this.config;\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n    this._plugins.invalidate();\n    if (this.notifyPlugins('beforeUpdate', {\n      mode,\n      cancelable: true\n    }) === false) {\n      return;\n    }\n    const newControllers = this.buildOrUpdateControllers();\n    this.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {\n        controller\n      } = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, controller => {\n        controller.reset();\n      });\n    }\n    this._updateDatasets(mode);\n    this.notifyPlugins('afterUpdate', {\n      mode\n    });\n    this._layers.sort(compare2Level('z', '_idx'));\n    if (this._lastEvent) {\n      this._eventHandler(this._lastEvent, true);\n    }\n    this.render();\n  }\n  _updateScales() {\n    each(this.scales, scale => {\n      layouts.removeBox(this, scale);\n    });\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n  _updateHiddenIndices() {\n    const {\n      _hiddenIndices\n    } = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {\n      method,\n      start,\n      count\n    } of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = idx => new Set(_dataChanges.filter(c => c[0] === idx).map((c, i) => i + ',' + c.splice(1).join(',')));\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet).map(c => c.split(',')).map(a => ({\n      method: a[1],\n      start: +a[2],\n      count: +a[3]\n    }));\n  }\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n    layouts.update(this, this.width, this.height, minPadding);\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    this._layers = [];\n    each(this.boxes, box => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    this.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {\n      mode,\n      cancelable: true\n    }) === false) {\n      return;\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({\n        datasetIndex: i\n      }) : mode);\n    }\n    this.notifyPlugins('afterDatasetsUpdate', {\n      mode\n    });\n  }\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {\n      meta,\n      index,\n      mode,\n      cancelable: true\n    };\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    if (this.notifyPlugins('beforeRender', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({\n        chart: this\n      });\n    }\n  }\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {\n        width,\n        height\n      } = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n    if (this.notifyPlugins('beforeDraw', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n    meta.controller.draw();\n    if (useClip) {\n      unclipArea(ctx);\n    }\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {\n      chart: this,\n      type: 'chart'\n    }));\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      anims.update(meta, {\n        visible\n      });\n      this.update(ctx => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n  destroy() {\n    const {\n      canvas,\n      ctx\n    } = this;\n    this._stop();\n    this.config.clearCache();\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n    this.notifyPlugins('destroy');\n    delete instances[this.id];\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n    each(this.options.events, type => _add(type, listener));\n  }\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n    let detached;\n    const attached = () => {\n      _remove('attach', attached);\n      this.attached = true;\n      this.resize();\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n    detached = () => {\n      this.attached = false;\n      _remove('resize', listener);\n      this._stop();\n      this._resize(0, 0);\n      _add('attach', attached);\n    };\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({\n      datasetIndex,\n      index\n    }) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true\n    };\n    const eventFilter = plugin => (plugin.options.events || this.options.events).includes(e.native.type);\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = this._handleEvent(e, replay);\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      this.render();\n    }\n    return this;\n  }\n  _handleEvent(e, replay) {\n    const {\n      _active: lastActive = [],\n      options\n    } = this;\n    const hoverOptions = options.hover;\n    const useFinalPosition = replay;\n    let active = [];\n    let changed = false;\n    let lastEvent = null;\n    if (e.type !== 'mouseout') {\n      active = this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n      lastEvent = e.type === 'click' ? this._lastEvent : e;\n    }\n    this._lastEvent = null;\n    if (_isPointInArea(e, this.chartArea, this._minPadding)) {\n      callback(options.onHover, [e, active, this], this);\n      if (e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu') {\n        callback(options.onClick, [e, active, this], this);\n      }\n    }\n    changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n    this._lastEvent = lastEvent;\n    return changed;\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, chart => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\nfunction clipArc(ctx, element, endAngle) {\n  const {\n    startAngle,\n    pixelMargin,\n    x,\n    y,\n    outerRadius,\n    innerRadius\n  } = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = val => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta)\n  };\n}\nfunction pathArc(ctx, element, offset, spacing, end) {\n  const {\n    x,\n    y,\n    startAngle: start,\n    pixelMargin,\n    innerRadius: innerR\n  } = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n  if (spacing) {\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {\n    outerStart,\n    outerEnd,\n    innerStart,\n    innerEnd\n  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n  if (outerEnd > 0) {\n    const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n  }\n  const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n  ctx.lineTo(p4.x, p4.y);\n  if (innerEnd > 0) {\n    const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n  }\n  ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, startAngle + innerStart / innerRadius, true);\n  if (innerStart > 0) {\n    const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n  }\n  const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n  ctx.lineTo(p8.x, p8.y);\n  if (outerStart > 0) {\n    const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing) {\n  const {\n    fullCircles,\n    startAngle,\n    circumference\n  } = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {\n    x,\n    y,\n    startAngle,\n    pixelMargin,\n    fullCircles\n  } = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, spacing, endAngle) {\n  const {\n    options\n  } = element;\n  const inner = options.borderAlign === 'inner';\n  if (!options.borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = options.borderWidth * 2;\n    ctx.lineJoin = 'round';\n  } else {\n    ctx.lineWidth = options.borderWidth;\n    ctx.lineJoin = 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {\n      angle,\n      distance\n    } = getAngleFromPoint(point, {\n      x: chartX,\n      y: chartY\n    });\n    const {\n      startAngle,\n      endAngle,\n      innerRadius,\n      outerRadius,\n      circumference\n    } = this.getProps(['startAngle', 'endAngle', 'innerRadius', 'outerRadius', 'circumference'], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n    return betweenAngles && withinRadius;\n  }\n  getCenterPoint(useFinalPosition) {\n    const {\n      x,\n      y,\n      startAngle,\n      endAngle,\n      innerRadius,\n      outerRadius\n    } = this.getProps(['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius', 'circumference'], useFinalPosition);\n    const {\n      offset,\n      spacing\n    } = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const {\n      options,\n      circumference\n    } = this;\n    const offset = (options.offset || 0) / 2;\n    const spacing = (options.spacing || 0) / 2;\n    this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    let radiusOffset = 0;\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (this.startAngle + this.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n      if (this.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, this, radiusOffset, spacing);\n    drawBorder(ctx, this, radiusOffset, spacing, endAngle);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {\n    start: paramsStart = 0,\n    end: paramsEnd = count - 1\n  } = params;\n  const {\n    start: segmentStart,\n    end: segmentEnd\n  } = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {\n    points,\n    options\n  } = line;\n  const {\n    count,\n    start,\n    loop,\n    ilen\n  } = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {\n    move = true,\n    reverse\n  } = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {\n    count,\n    start,\n    ilen\n  } = pathVars(points, segment, params);\n  const {\n    move = true,\n    reverse\n  } = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = index => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {\n    segments,\n    options\n  } = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {\n      start,\n      end: start + count - 1\n    })) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {\n      property,\n      start: value,\n      end: value\n    });\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {\n        start,\n        end\n      } = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n    start = start || 0;\n    count = count || this.points.length - start;\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {\n        start,\n        end: start + count - 1\n      });\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n    if (points.length && options.borderWidth) {\n      ctx.save();\n      draw(ctx, this, start, count);\n      ctx.restore();\n    }\n    if (this.animated) {\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: name => name !== 'borderDash' && name !== 'fill'\n};\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {\n    [axis]: value\n  } = el.getProps([axis], useFinalPosition);\n  return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {\n      x,\n      y\n    } = this.getProps(['x', 'y'], useFinalPosition);\n    return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {\n      x,\n      y\n    } = this.getProps(['x', 'y'], useFinalPosition);\n    return {\n      x,\n      y\n    };\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx, area) {\n    const options = this.options;\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nfunction getBarBounds(bar, useFinalPosition) {\n  const {\n    x,\n    y,\n    base,\n    width,\n    height\n  } = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {\n    left,\n    top,\n    right,\n    bottom\n  };\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {\n    enableBorderRadius\n  } = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const {\n      inflateAmount,\n      options: {\n        borderColor,\n        backgroundColor\n      }\n    } = this;\n    const {\n      inner,\n      outer\n    } = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {\n      x,\n      y,\n      base,\n      horizontal\n    } = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  inflateAmount: 'auto',\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nvar elements = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  ArcElement: ArcElement,\n  LineElement: LineElement,\n  PointElement: PointElement,\n  BarElement: BarElement\n});\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {\n      x: pointAx,\n      y: pointAy\n    } = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {\n      value: data\n    });\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach(dataset => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {\n    iScale\n  } = meta;\n  const {\n    min,\n    max,\n    minDefined,\n    maxDefined\n  } = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {\n    start,\n    count\n  };\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {\n        _data,\n        indexAxis\n      } = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (meta.type !== 'line') {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {\n        start,\n        count\n      } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function () {\n            return this._decimated;\n          },\n          set: function (d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n        case 'lttb':\n          decimated = lttbDecimation(data, start, count, availableWidth, options);\n          break;\n        case 'min-max':\n          decimated = minMaxDecimation(data, start, count, availableWidth);\n          break;\n        default:\n          throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\nfunction decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n    return target;\n  }\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\nfunction computeLinearBoundary(source) {\n  const {\n    scale = {},\n    fill\n  } = source;\n  let target = null;\n  let horizontal;\n  if (fill === 'start') {\n    target = scale.bottom;\n  } else if (fill === 'end') {\n    target = scale.top;\n  } else if (isObject(fill)) {\n    target = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n  if (isNumberFinite(target)) {\n    horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? target : null,\n      y: horizontal ? null : target\n    };\n  }\n  return null;\n}\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {\n      x,\n      y,\n      radius\n    } = this;\n    bounds = bounds || {\n      start: 0,\n      end: TAU\n    };\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {\n      x,\n      y,\n      radius\n    } = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\nfunction computeCircularBoundary(source) {\n  const {\n    scale,\n    fill\n  } = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const target = [];\n  const start = options.reverse ? scale.max : scale.min;\n  const end = options.reverse ? scale.min : scale.max;\n  let i, center, value;\n  if (fill === 'start') {\n    value = start;\n  } else if (fill === 'end') {\n    value = end;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  if (options.grid.circular) {\n    center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction findSegmentEnd(start, end, points) {\n  for (; end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction pointsFromSegments(boundary, line) {\n  const {\n    x = null,\n    y = null\n  } = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({\n    start,\n    end\n  }) => {\n    end = findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({\n        x: first.x,\n        y\n      });\n      points.push({\n        x: last.x,\n        y\n      });\n    } else if (x !== null) {\n      points.push({\n        x,\n        y: first.y\n      });\n      points.push({\n        x,\n        y: last.y\n      });\n    }\n  });\n  return points;\n}\nfunction buildStackLine(source) {\n  const {\n    scale,\n    index,\n    line\n  } = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(createBoundaryLine({\n    x: null,\n    y: scale.bottom\n  }, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({\n    points,\n    options: {}\n  });\n}\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {\n      first,\n      last,\n      point\n    } = findPoint(line, sourcePoint, 'x');\n    if (!point || first && last) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {\n    first,\n    last,\n    point\n  };\n}\nfunction getTarget(source) {\n  const {\n    chart,\n    fill,\n    line\n  } = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return buildStackLine(source);\n  }\n  if (fill === 'shape') {\n    return true;\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return createBoundaryLine(boundary, line);\n}\nfunction createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {\n      tension: 0\n    },\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _clip(ctx, target, clipY) {\n  ctx.beginPath();\n  target.path(ctx);\n  ctx.lineTo(target.last().x, clipY);\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {\n    property,\n    start,\n    end\n  };\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    let {\n      start,\n      end\n    } = segment;\n    end = findSegmentEnd(start, end, points);\n    const bounds = getBounds(property, points[start], points[end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {\n    top,\n    bottom\n  } = scale.chart.chartArea;\n  const {\n    property,\n    start,\n    end\n  } = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\nfunction _fill(ctx, cfg) {\n  const {\n    line,\n    target,\n    property,\n    color,\n    scale\n  } = cfg;\n  const segments = _segments(line, target, property);\n  for (const {\n    source: src,\n    target: tgt,\n    start,\n    end\n  } of segments) {\n    const {\n      style: {\n        backgroundColor = color\n      } = {}\n    } = src;\n    const notShape = target !== true;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, notShape && getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n      const targetLoop = !!target.pathSegment(ctx, tgt, {\n        move: lineLoop,\n        reverse: true\n      });\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {\n    line,\n    target,\n    above,\n    below,\n    area,\n    scale\n  } = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    _clip(ctx, target, area.top);\n    _fill(ctx, {\n      line,\n      target,\n      color: above,\n      scale,\n      property\n    });\n    ctx.restore();\n    ctx.save();\n    _clip(ctx, target, area.bottom);\n  }\n  _fill(ctx, {\n    line,\n    target,\n    color: below,\n    scale,\n    property\n  });\n  ctx.restore();\n}\nfunction drawfill(ctx, source, area) {\n  const target = getTarget(source);\n  const {\n    line,\n    scale,\n    axis\n  } = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {\n    above = color,\n    below = color\n  } = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {\n      line,\n      target,\n      above,\n      below,\n      area,\n      scale,\n      axis\n    });\n    unclipArea(ctx);\n  }\n}\nvar plugin_filler = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw) {\n        drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (source) {\n        drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {\n    boxHeight = fontSize,\n    boxWidth = fontSize\n  } = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [this.chart], this) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter(item => labelOpts.filter(item, this.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n    this.legendItems = legendItems;\n  }\n  fit() {\n    const {\n      options,\n      ctx\n    } = this;\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {\n      boxWidth,\n      itemHeight\n    } = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (this.isHorizontal()) {\n      width = this.maxWidth;\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight;\n      width = this._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {\n      ctx,\n      maxWidth,\n      options: {\n        labels: {\n          padding\n        }\n      }\n    } = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {\n        left: 0,\n        top,\n        row,\n        width: itemWidth,\n        height: itemHeight\n      };\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {\n      ctx,\n      maxHeight,\n      options: {\n        labels: {\n          padding\n        }\n      }\n    } = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({\n          width: currentColWidth,\n          height: currentColHeight\n        });\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n      hitboxes[i] = {\n        left,\n        top: currentColHeight,\n        col,\n        width: itemWidth,\n        height: itemHeight\n      };\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({\n      width: currentColWidth,\n      height: currentColHeight\n    });\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {\n      legendHitBoxes: hitboxes,\n      options: {\n        align,\n        labels: {\n          padding\n        },\n        rtl\n      }\n    } = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n      this._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const {\n      options: opts,\n      columnSizes,\n      lineWidths,\n      ctx\n    } = this;\n    const {\n      align,\n      labels: labelOpts\n    } = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {\n      color: fontColor,\n      padding\n    } = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    this.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {\n      boxWidth,\n      boxHeight,\n      itemHeight\n    } = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function (x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxWidth * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function (x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(this.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(this.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = this.left;\n    let maxWidth = this.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n    if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          return this.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, this], this);\n      }\n      this._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if (type === 'mousemove' && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: ctx => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {\n          labels: {\n            usePointStyle,\n            pointStyle,\n            textAlign,\n            color\n          }\n        } = chart.legend.options;\n        return chart._getSortedDatasetMetas().map(meta => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: ctx => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: ''\n    }\n  },\n  descriptors: {\n    _scriptable: name => !name.startsWith('on'),\n    labels: {\n      _scriptable: name => !['generateLabels', 'filter', 'sort'].includes(name)\n    }\n  }\n};\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n    this.left = 0;\n    this.top = 0;\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {\n      top,\n      left,\n      bottom,\n      right,\n      options\n    } = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {\n      titleX,\n      titleY,\n      maxWidth,\n      rotation\n    };\n  }\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {\n      titleX,\n      titleY,\n      maxWidth,\n      rotation\n    } = this._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY]\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold'\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false\n  }\n};\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal'\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false\n  }\n};\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {\n    element,\n    datasetIndex,\n    index\n  } = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {\n    label,\n    value\n  } = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip._chart.ctx;\n  const {\n    body,\n    footer,\n    title\n  } = tooltip;\n  const {\n    boxWidth,\n    boxHeight\n  } = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function (line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n  each(body, bodyItem => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {\n    width,\n    height\n  };\n}\nfunction determineYAlign(chart, size) {\n  const {\n    y,\n    height\n  } = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > chart.height - height / 2) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {\n    x,\n    width\n  } = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {\n    x,\n    width\n  } = size;\n  const {\n    width: chartWidth,\n    chartArea: {\n      left,\n      right\n    }\n  } = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {\n    x,\n    width\n  } = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= width / 2;\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {\n    y,\n    height\n  } = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= height / 2;\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {\n    caretSize,\n    caretPadding,\n    cornerRadius\n  } = options;\n  const {\n    xAlign,\n    yAlign\n  } = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {\n    topLeft,\n    topRight,\n    bottomLeft,\n    bottomRight\n  } = toTRBLCorners(cornerRadius);\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._chart = config._chart;\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = this._chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this._chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    return this.$context || (this.$context = createTooltipContext(this._chart.getContext(), this, this._tooltipItems));\n  }\n  getTitle(context, options) {\n    const {\n      callbacks\n    } = options;\n    const beforeTitle = callbacks.beforeTitle.apply(this, [context]);\n    const title = callbacks.title.apply(this, [context]);\n    const afterTitle = callbacks.afterTitle.apply(this, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const {\n      callbacks\n    } = options;\n    const bodyItems = [];\n    each(tooltipItems, context => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(this, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(this, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const {\n      callbacks\n    } = options;\n    const beforeFooter = callbacks.beforeFooter.apply(this, [tooltipItems]);\n    const footer = callbacks.footer.apply(this, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(this, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const active = this._active;\n    const data = this._chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this._chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, context => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(this, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(this, context));\n      labelTextColors.push(scoped.labelTextColor.call(this, context));\n    });\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this._chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this._chart);\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(this, {\n        chart: this._chart,\n        tooltip: this,\n        replay\n      });\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {\n      xAlign,\n      yAlign\n    } = this;\n    const {\n      caretSize,\n      cornerRadius\n    } = options;\n    const {\n      topLeft,\n      topRight,\n      bottomLeft,\n      bottomRight\n    } = toTRBLCorners(cornerRadius);\n    const {\n      x: ptX,\n      y: ptY\n    } = tooltipPoint;\n    const {\n      width,\n      height\n    } = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + height / 2;\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {\n      x1,\n      x2,\n      x3,\n      y1,\n      y2,\n      y3\n    };\n  }\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {\n      boxHeight,\n      boxWidth,\n      boxPadding\n    } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = labelColors.borderWidth || 1;\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const {\n      body\n    } = this;\n    const {\n      bodySpacing,\n      bodyAlign,\n      displayColors,\n      boxHeight,\n      boxWidth,\n      boxPadding\n    } = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n    const fillLineOfText = function (line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {\n      xAlign,\n      yAlign\n    } = this;\n    const {\n      x,\n      y\n    } = pt;\n    const {\n      width,\n      height\n    } = tooltipSize;\n    const {\n      topLeft,\n      topRight,\n      bottomLeft,\n      bottomRight\n    } = toTRBLCorners(options.cornerRadius);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const chart = this._chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n    if (!opacity) {\n      return;\n    }\n    this._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      this.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      this.drawTitle(pt, ctx, options);\n      this.drawBody(pt, ctx, options);\n      this.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({\n      datasetIndex,\n      index\n    }) => {\n      const meta = this._chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this.update(true);\n    }\n  }\n  handleEvent(e, replay) {\n    const options = this.options;\n    const lastActive = this._active || [];\n    let changed = false;\n    let active = [];\n    if (e.type !== 'mouseout') {\n      active = this._chart.getElementsAtEventForMode(e, options.mode, options, replay);\n      if (options.reverse) {\n        active.reverse();\n      }\n    }\n    const positionChanged = this._positionChanged(active, e);\n    changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      this._active = active;\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        this.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _positionChanged(active, e) {\n    const {\n      caretX,\n      caretY,\n      options\n    } = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({\n        _chart: chart,\n        options\n      });\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    const args = {\n      tooltip\n    };\n    if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n      return;\n    }\n    if (tooltip) {\n      tooltip.draw(chart.ctx);\n    }\n    chart.notifyPlugins('afterTooltipDraw', args);\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold'\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {},\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold'\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart'\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY']\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: name => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\nvar plugins = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  Decimation: plugin_decimation,\n  Filler: plugin_filler,\n  Legend: plugin_legend,\n  SubTitle: plugin_subtitle,\n  Title: plugin_title,\n  Tooltip: plugin_tooltip\n});\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({\n      index,\n      label: raw\n    });\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {\n        index,\n        label\n      } of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const {\n      minDefined,\n      maxDefined\n    } = this.getUserBounds();\n    let {\n      min,\n      max\n    } = this.getMinMax(true);\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n    labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({\n        value\n      });\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    super.configure();\n    if (!this.isHorizontal()) {\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {\n    bounds,\n    step,\n    min,\n    max,\n    precision,\n    count,\n    maxTicks,\n    maxDigits,\n    includeBounds\n  } = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {\n    min: rmin,\n    max: rmax\n  } = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{\n      value: rmin\n    }, {\n      value: rmax\n    }];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({\n        value: min\n      });\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({\n      value: Math.round((niceMin + j * spacing) * factor) / factor\n    });\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({\n        value: max\n      });\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({\n      value: niceMax\n    });\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, {\n  horizontal,\n  minRotation\n}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const {\n      beginAtZero\n    } = this.options;\n    const {\n      minDefined,\n      maxDefined\n    } = this.getUserBounds();\n    let {\n      min,\n      max\n    } = this;\n    const setMin = v => min = minDefined ? min : v;\n    const setMax = v => max = maxDefined ? max : v;\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      let offset = 1;\n      if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n        offset = Math.abs(max * 0.05);\n      }\n      setMax(max + offset);\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    let {\n      maxTicksLimit,\n      stepSize\n    } = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n    super.configure();\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const {\n      min,\n      max\n    } = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? min : 0;\n    this.max = isNumberFinite(max) ? max : 1;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\nfunction isMajor(tickVal) {\n  const remain = tickVal / Math.pow(10, Math.floor(log10(tickVal)));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({\n      value: tickVal,\n      major: isMajor(tickVal)\n    });\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || exp === endExp && significand < endSignificand);\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({\n    value: lastTick,\n    major: isMajor(tickVal)\n  });\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const {\n      min,\n      max\n    } = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n    this.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const {\n      minDefined,\n      maxDefined\n    } = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n    const setMin = v => min = minDefined ? min : v;\n    const setMax = v => max = maxDefined ? max : v;\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (this._zero && this.min !== this._suggestedMin && min === exp(this.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n  configure() {\n    const start = this.min;\n    super.configure();\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - size / 2,\n      end: pos + size / 2\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const furthestLimits = {\n    l: 0,\n    r: scale.width,\n    t: 0,\n    b: scale.height - scale.paddingTop\n  };\n  const furthestAngles = {};\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale.getLabels().length;\n  for (let i = 0; i < valueCount; i++) {\n    const opts = scale.options.pointLabels.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i]);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = scale.getIndexAngle(i);\n    const angle = toDegrees(angleRadians);\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    if (hLimits.start < furthestLimits.l) {\n      furthestLimits.l = hLimits.start;\n      furthestAngles.l = angleRadians;\n    }\n    if (hLimits.end > furthestLimits.r) {\n      furthestLimits.r = hLimits.end;\n      furthestAngles.r = angleRadians;\n    }\n    if (vLimits.start < furthestLimits.t) {\n      furthestLimits.t = vLimits.start;\n      furthestAngles.t = angleRadians;\n    }\n    if (vLimits.end > furthestLimits.b) {\n      furthestLimits.b = vLimits.end;\n      furthestAngles.b = angleRadians;\n    }\n  }\n  scale._setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale.getLabels().length;\n  const opts = scale.options;\n  const tickBackdropHeight = getTickBackdropHeight(opts);\n  const outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n  for (let i = 0; i < valueCount; i++) {\n    const extra = i === 0 ? tickBackdropHeight / 2 : 0;\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i]);\n    const angle = toDegrees(scale.getIndexAngle(i));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y,\n      textAlign,\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= w / 2;\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= h / 2;\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {\n    ctx,\n    options: {\n      pointLabels\n    }\n  } = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {\n      x,\n      y,\n      textAlign,\n      left,\n      top,\n      right,\n      bottom\n    } = scale._pointLabelItems[i];\n    const {\n      backdropColor\n    } = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      ctx.fillRect(left - padding.left, top - padding.top, right - left + padding.width, bottom - top + padding.height);\n    }\n    renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n      color: optsAtIndex.color,\n      textAlign: textAlign,\n      textBaseline: 'middle'\n    });\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {\n    ctx\n  } = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {\n    color,\n    lineWidth\n  } = gridLineOpts;\n  if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction numberOrZero(param) {\n  return isNumber(param) ? param : 0;\n}\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    this.width = this.maxWidth;\n    this.height = this.maxHeight;\n    this.paddingTop = getTickBackdropHeight(this.options) / 2;\n    this.xCenter = Math.floor(this.width / 2);\n    this.yCenter = Math.floor((this.height - this.paddingTop) / 2);\n    this.drawingArea = Math.min(this.height - this.paddingTop, this.width) / 2;\n  }\n  determineDataLimits() {\n    const {\n      min,\n      max\n    } = this.getMinMax(false);\n    this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n    this._pointLabels = this.getLabels().map((value, index) => {\n      const label = callback(this.options.pointLabels.callback, [value, index], this);\n      return label || label === 0 ? label : '';\n    });\n  }\n  fit() {\n    const opts = this.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  _setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n    let radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n    let radiusReductionRight = Math.max(furthestLimits.r - this.width, 0) / Math.sin(furthestAngles.r);\n    let radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n    let radiusReductionBottom = -Math.max(furthestLimits.b - (this.height - this.paddingTop), 0) / Math.cos(furthestAngles.b);\n    radiusReductionLeft = numberOrZero(radiusReductionLeft);\n    radiusReductionRight = numberOrZero(radiusReductionRight);\n    radiusReductionTop = numberOrZero(radiusReductionTop);\n    radiusReductionBottom = numberOrZero(radiusReductionBottom);\n    this.drawingArea = Math.max(largestPossibleRadius / 2, Math.min(Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2), Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2)));\n    this.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    const maxRight = this.width - rightMovement - this.drawingArea;\n    const maxLeft = leftMovement + this.drawingArea;\n    const maxTop = topMovement + this.drawingArea;\n    const maxBottom = this.height - this.paddingTop - bottomMovement - this.drawingArea;\n    this.xCenter = Math.floor((maxLeft + maxRight) / 2 + this.left);\n    this.yCenter = Math.floor((maxTop + maxBottom) / 2 + this.top + this.paddingTop);\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / this.getLabels().length;\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n  getPointPosition(index, distanceFromCenter) {\n    const angle = this.getIndexAngle(index) - HALF_PI;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {\n      left,\n      top,\n      right,\n      bottom\n    } = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom\n    };\n  }\n  drawBackground() {\n    const {\n      backgroundColor,\n      grid: {\n        circular\n      }\n    } = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this.getLabels().length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {\n      angleLines,\n      grid\n    } = opts;\n    const labelCount = this.getLabels().length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(this.getContext(index - 1));\n          drawRadiusLine(this, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = this.getLabels().length - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {\n          color,\n          lineWidth\n        } = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\nconst INTERVALS = {\n  millisecond: {\n    common: true,\n    size: 1,\n    steps: 1000\n  },\n  second: {\n    common: true,\n    size: 1000,\n    steps: 60\n  },\n  minute: {\n    common: true,\n    size: 60000,\n    steps: 60\n  },\n  hour: {\n    common: true,\n    size: 3600000,\n    steps: 24\n  },\n  day: {\n    common: true,\n    size: 86400000,\n    steps: 30\n  },\n  week: {\n    common: false,\n    size: 604800000,\n    steps: 4\n  },\n  month: {\n    common: true,\n    size: 2.628e9,\n    steps: 12\n  },\n  quarter: {\n    common: false,\n    size: 7.884e9,\n    steps: 4\n  },\n  year: {\n    common: true,\n    size: 3.154e10\n  }\n};\nconst UNITS = Object.keys(INTERVALS);\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {\n    parser,\n    round,\n    isoWeekday\n  } = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string' ? adapter.parse(value, parser) : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {\n      lo,\n      hi\n    } = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    let {\n      min,\n      max,\n      minDefined,\n      maxDefined\n    } = this.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(this._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {\n      min,\n      max\n    };\n  }\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = this.min;\n    const max = this.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n  initOffsets(timestamps) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    this._offsets = {\n      start,\n      end,\n      factor: 1 / (start + 1 + end)\n    };\n  }\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], this) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n    return {\n      w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n      h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = this.getMatchingVisibleMetas();\n    if (this._normalized && metas.length) {\n      return this._cache.data = metas[0].controller.getAllParsedValues(this);\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n    return this._cache.data = this.normalize(timestamps);\n  }\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n    return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({\n        lo,\n        hi\n      } = _lookupByKey(table, 'pos', val));\n    }\n    ({\n      pos: prevSource,\n      time: prevTarget\n    } = table[lo]);\n    ({\n      pos: nextSource,\n      time: nextTarget\n    } = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({\n        lo,\n        hi\n      } = _lookupByKey(table, 'time', val));\n    }\n    ({\n      time: prevSource,\n      pos: prevTarget\n    } = table[lo]);\n    ({\n      time: nextSource,\n      pos: nextTarget\n    } = table[hi]);\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._minPos = undefined;\n    this._tableRange = undefined;\n  }\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const {\n      min,\n      max\n    } = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n    if (items.length < 2) {\n      return [{\n        time: min,\n        pos: 0\n      }, {\n        time: max,\n        pos: 1\n      }];\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({\n          time: curr,\n          pos: i / (ilen - 1)\n        });\n      }\n    }\n    return table;\n  }\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n    return timestamps;\n  }\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\nvar scales = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  CategoryScale: CategoryScale,\n  LinearScale: LinearScale,\n  LogarithmicScale: LogarithmicScale,\n  RadialLinearScale: RadialLinearScale,\n  TimeScale: TimeScale,\n  TimeSeriesScale: TimeSeriesScale\n});\nconst registerables = [controllers, elements, plugins, scales];\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, plugin_filler as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };","map":{"version":3,"names":["r","requestAnimFrame","a","resolve","e","effects","c","color","d","defaults","i","isObject","b","isArray","v","valueOrDefault","u","unlistenArrayEvents","l","listenArrayEvents","f","resolveObjectKey","g","isNumberFinite","h","createContext","j","defined","s","sign","k","isNullOrUndef","_","_arrayUnique","t","toRadians","m","toPercentage","n","toDimension","T","TAU","o","formatNumber","p","_angleBetween","H","HALF_PI","P","PI","q","isNumber","w","_limitValue","x","_lookupByKey","y","getRelativePosition$1","z","_isPointInArea","A","_rlookupByKey","B","toPadding","C","each","D","getMaximumSize","E","_getParentNode","F","readUsedSize","G","throttled","I","supportsEventListenerOptions","J","_isDomSupported","K","log10","L","_factorize","M","finiteOrDefault","N","callback","O","_addGrace","Q","toDegrees","R","_measureText","S","_int16Range","U","_alignPixel","V","clipArea","W","renderText","X","unclipArea","Y","toFont","Z","_toLeftRightCenter","$","_alignStartEnd","a0","overrides","a1","merge","a2","_capitalize","a3","descriptors","a4","isFunction","a5","_attachContext","a6","_createResolver","a7","_descriptors","a8","mergeIf","a9","uid","aa","debounce","ab","retinaScale","ac","clearCanvas","ad","setsEqual","ae","_elementsEqual","af","getAngleFromPoint","ag","_isBetween","ah","_readValueToProps","ai","_updateBezierControlPoints","aj","_computeSegments","ak","_boundSegments","al","_steppedInterpolation","am","_bezierInterpolation","an","_pointInLine","ao","_steppedLineTo","ap","_bezierCurveTo","aq","drawPoint","ar","addRoundedRectPath","as","toTRBL","at","toTRBLCorners","au","_boundSegment","av","_normalizeAngle","aw","getRtlAdapter","ax","overrideTextDirection","ay","_textX","az","restoreTextDirection","aA","noop","aB","distanceBetweenPoints","aC","_setMinAndMaxByKey","aD","niceNum","aE","almostWhole","aF","almostEquals","aG","_decimalPlaces","aH","_longestText","aI","_filterBetween","aJ","_lookup","Animator","constructor","_request","_charts","Map","_running","_lastDate","undefined","_notify","chart","anims","date","type","callbacks","listeners","numSteps","duration","forEach","fn","initial","currentStep","Math","min","start","_refresh","call","window","_update","Date","now","remaining","running","items","length","draw","item","_active","_total","tick","pop","_getAnims","charts","get","complete","progress","set","listen","event","cb","push","add","has","reduce","acc","cur","max","_duration","stop","cancel","remove","delete","animator","transparent","interpolators","boolean","from","to","factor","c0","c1","valid","mix","hexString","number","Animation","cfg","target","prop","currentValue","_fn","_easing","easing","linear","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","active","update","elapsed","remain","wait","promises","Promise","res","rej","resolved","method","numbers","colors","animationOptions","Object","keys","animation","describe","_fallback","_indexable","_scriptable","name","properties","resize","show","animations","visible","hide","Animations","config","_chart","_properties","configure","animatedProps","getOwnPropertyNames","key","option","_animateOptions","values","newOptions","options","resolveTargetOptions","_createAnimations","$shared","awaitAll","$animations","then","props","charAt","value","size","assign","anim","all","scaleClip","scale","allowedOverflow","opts","reverse","end","defaultClip","xScale","yScale","top","right","bottom","left","toClip","disabled","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","ilen","index","applyStack","stack","dsIndex","singleMode","mode","datasetIndex","otherValue","convertObjectDataToArray","data","adata","Array","isStacked","meta","stacked","getStackKey","indexScale","valueScale","id","getUserBounds","minDefined","maxDefined","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","itemStacks","_top","_bottom","getFirstScaleId","scales","filter","shift","createDatasetContext","parent","dataset","createDataContext","element","dataIndex","raw","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","hidden","_stacked","DatasetController","_ctx","ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","$context","_syncList","initialize","linkScales","addElements","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","datasets","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","isExtensible","datasetElementType","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","parse","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","range","parsedValue","NaN","getMinMax","otherScale","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","clip","elements","area","chartArea","getStyle","resolveDatasetElementOptions","resolveDataElementOptions","context","_resolveElementOptions","dataElementType","elementType","cache","cacheKey","sharing","datasetElementScopeKeys","prefixes","names","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","_cacheable","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","updateElement","updateSharedOptions","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","splice","_sync","args","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","prototype","getAllScaleValues","_cache","$bar","visibleMetas","concat","sort","computeMinSampleSize","_length","curr","updateMinAndPrev","abs","getPixelForValue","ticks","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","ratio","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","next","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","isHorizontal","borderProps","horizontal","base","setBorderSkipped","edge","borderSkipped","enableBorderRadius","parseEdge","swap","startEnd","orig","v1","v2","setInflateAmount","inflateAmount","BarController","iAxisKey","vAxisKey","obj","bars","getBasePixel","_getRuler","firstOpts","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","height","width","_getStacks","last","grouped","val","isNaN","indexOf","_getStackCount","_getStackIndex","_startPixel","_endPixel","baseValue","minBarLength","floating","getDataVisibility","halfGrid","getLineWidthForValue","skipNull","maxBarThickness","Infinity","stackIndex","rects","_index_","offset","grid","_value_","beginAtZero","BubbleController","radius","points","point","iPixel","getPixelForDecimal","vPixel","skip","plugins","tooltip","title","getRatioAndOffset","rotation","circumference","cutout","ratioX","ratioY","offsetX","offsetY","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","calcMin","maxX","maxY","minX","minY","DoughnutController","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","maxWidth","maxHeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","arc","metaData","locale","borderAlign","borderWidth","hoverBorderWidth","hoverOffset","ringWeightOffset","weight","aspectRatio","legend","generateLabels","pointStyle","map","style","text","fillStyle","backgroundColor","strokeStyle","borderColor","lineWidth","onClick","legendItem","toggleDataVisibility","tooltipItem","dataLabel","formattedValue","slice","LineController","line","_dataset","animationsDisabled","getStartAndCountOfVisiblePoints","scaleRangesChanged","_datasetIndex","_decimated","showLine","segment","animated","spanGaps","maxGapLength","directUpdate","prevParsed","nullData","border","firstPoint","lastPoint","updateControlPoints","pointCount","lo","hi","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","PolarAreaController","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","display","circular","pointLabels","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","fill","ScatterController","interaction","controllers","__proto__","abstract","Error","DateAdapter","formats","format","timestamp","amount","unit","diff","startOf","weekday","endOf","override","members","adapters","_date","getRelativePosition","evaluateAllVisibleItems","handler","getSortedVisibleDatasetMetas","jlen","binarySearch","metaset","intersect","lookupMethod","_reversePixels","el","getRange","optimizedEvaluateItems","position","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","pow","getIntersectItems","useFinalPosition","_minPadding","evaluationFunc","inRange","getNearestItems","distanceMetric","minDistance","getCenterPoint","distance","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","array","pos","filterDynamicPositionByAxis","box","sortByWeight","v0","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","wrap","includes","_stack","placed","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","handleMaxPadding","updatePos","change","getMargins","marginForPositions","positions","margin","fitBoxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","padding","autoPadding","addBox","_layers","removeBox","layoutItem","minPadding","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","BasePlatform","acquireContext","canvas","releaseContext","addEventListener","listener","removeEventListener","getDevicePixelRatio","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","boxSizing","displayWidth","displayHeight","eventListenerOptions","passive","addListener","node","removeListener","fromNativeEvent","native","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","document","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","devicePixelRatio","currentDevicePixelRatio","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","container","clientWidth","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","proxy","DomPlatform","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","Element","tooltipPosition","getProps","hasValue","final","ret","defaultRoutes","formatters","numeric","tickValue","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","Ticks","bounds","grace","drawBorder","drawOnChartArea","drawTicks","tickLength","tickWidth","tickColor","borderDash","borderDashOffset","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","align","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","startsWith","tickOpts","ticksLimit","maxTicksLimit","determineMaxTicks","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","round","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","result","ceil","majorStart","majorEnd","len","reverseAlign","offsetFromEdge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","epsilon","lineValue","garbageCollect","caches","gc","gcLen","getTickMarkLength","getTitleHeight","fallback","font","lines","lineHeight","createScaleContext","createTickContext","titleAlign","titleArgs","titleX","titleY","positionAxisID","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","init","setContext","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","beforeUpdate","margins","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","source","beforeFit","fit","afterFit","afterUpdate","reversePixels","startPixel","endPixel","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","widths","heights","widestLabelSize","highestLabelSize","tickFont","fontString","nestedLabel","_resolveTickFontOptions","string","valueAt","idx","getValueForPixel","pixel","decimal","getDecimalForPixel","getBaseValue","optionTicks","rot","_computeGridLineItems","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","_computeLabelItems","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","strokeColor","strokeWidth","backdrop","labelPadding","translation","_computeLabelArea","drawBackground","save","fillRect","restore","findIndex","drawGrid","drawLine","p1","p2","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","lastLineWidth","drawLabels","drawTitle","tz","gz","axisID","_maxDigits","fontSize","TypedRegistry","scope","create","isForType","isPrototypeOf","register","proto","getPrototypeOf","parentScope","isIChartComponent","registerDefaults","unregister","itemDefaults","routeDefaults","routes","property","propertyParts","split","sourceName","sourceScope","join","parts","targetName","targetScope","Registry","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getElement","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","registry","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","local","getOpts","pluginOpts","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","axisFromPosition","determineAxis","scaleOptions","toLowerCase","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","console","error","_proxy","warn","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","Set","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","platform","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","resolver","subPrefixes","getResolver","needContext","subResolver","descriptorDefaults","resolverCache","hasFunction","isScriptable","isIndexable","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","Chart","userConfig","initialCanvas","existingChart","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","maintainAspectRatio","responsive","bindEvents","_resize","_resizeBeforeDraw","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_updateLayout","_updateDatasets","_eventHandler","existingEvents","newEvents","events","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","prefix","getActiveElements","setActiveElements","activeElements","lastActive","_updateHoverStyles","replay","hoverOptions","hover","deactivated","activated","eventFilter","_handleEvent","lastEvent","onHover","invalidatePlugins","enumerable","defineProperties","clipArc","pixelMargin","angleMargin","closePath","toRadiusCorners","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","alpha","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","p4","p8","drawArc","fullCircles","drawFullCircleBorders","inner","lineJoin","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","translate","setStyle","lineCap","borderCapStyle","borderJoinStyle","previous","getLineMethod","stepped","tension","cubicInterpolationMode","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","avgX","countX","prevX","lastY","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","strokePathWithCache","path","_path","Path2D","strokePathDirect","segments","segmentMethod","usePath2D","LineElement","_points","_segments","_pointsUpdated","interpolate","_interpolate","interpolated","capBezierPoints","inRange$1","hitRadius","PointElement","mouseX","mouseY","inXRange","inYRange","hoverRadius","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","parseBorderRadius","maxR","enableBorder","topLeft","topRight","bottomLeft","bottomRight","boundingRects","outer","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","rect","inflateRect","refRect","BarElement","addRectPath","lttbDecimation","samples","decimated","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","minMaxDecimation","minIndex","maxIndex","startIndex","xMin","xMax","dx","lastIndex","intermediateIndex1","intermediateIndex2","cleanDecimatedDataset","defineProperty","cleanDecimatedData","getStartAndCountOfVisiblePointsSimplified","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","threshold","configurable","getLineByIndex","parseFillOption","fillOption","decodeFill","parseFloat","computeLinearBoundary","simpleArc","computeCircularBoundary","computeBoundary","findSegmentEnd","pointsFromSegments","boundary","linePoints","buildStackLine","sourcePoints","linesBelow","getLinesBelow","createBoundaryLine","addPointsBelow","below","unshift","sourcePoint","postponed","findPoint","pointValue","firstValue","lastValue","getTarget","resolveTarget","sources","propagate","visited","clipY","getBounds","_getEdge","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","clipBounds","interpolatedLineTo","interpolatedPoint","_fill","src","notShape","lineLoop","targetLoop","doFill","above","drawfill","lineOpts","plugin_filler","afterDatasetsUpdate","_args","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","itemHeight","itemsEqual","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","itemWidth","measureText","heightLimit","totalWidth","currentColWidth","currentColHeight","col","adjustHitBoxes","rtl","rtlHelper","hitbox","leftForLtr","_draw","defaultColor","fontColor","halfFontSize","cursor","drawLegendBox","lineDash","drawOptions","SQRT2","xPlus","yBoxTop","xBoxLeft","fillText","strikethrough","textDirection","textWidth","setWidth","realX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","isListened","hoveredItem","sameItem","onLeave","plugin_legend","_element","afterEvent","ci","Title","_padding","textSize","_drawArgs","fontOpts","createTitle","titleBlock","plugin_title","WeakMap","plugin_subtitle","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","apply","splitNewlines","str","String","createTooltipItem","getTooltipSize","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","cornerRadius","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","beforeTitle","afterTitle","getBeforeBody","getBody","bodyItems","scoped","beforeLabel","afterLabel","getAfterBody","getFooter","beforeFooter","afterFooter","_createItems","itemSort","labelColor","labelPointStyle","labelTextColor","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","bodyColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","plugin_tooltip","afterInit","afterDraw","labelCount","Decimation","Filler","SubTitle","addIfString","addedLabels","findOrAddLabel","lastIndexOf","CategoryScale","_startValue","_valueRange","_addedLabels","added","isFinite","generateTicks$1","generationOptions","dataRange","MIN_SPACING","precision","maxTicks","maxDigits","includeBounds","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","rad","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","LinearScale","isMajor","tickVal","generateTicks","endExp","endSignificand","exp","significand","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","measureLabelSize","determineLimits","fitWithPointLabels","furthestLimits","furthestAngles","valueCount","getPointLabelContext","getPointPosition","drawingArea","plFont","_pointLabels","hLimits","vLimits","_setReductions","_pointLabelItems","buildPointLabelItems","tickBackdropHeight","outerDistance","extra","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","drawPointLabels","pathRadiusLine","drawRadiusLine","gridLineOpts","numberOrZero","param","createPointLabelContext","RadialLinearScale","setCenterPoint","largestPossibleRadius","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","distanceFromCenter","getBasePosition","getPointLabelPosition","rotate","animate","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","input","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","_unit","_majorUnit","_offsets","_normalized","displayFormats","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","initOffsets","getDecimalForValue","hasWeekday","getDataTimestamps","tooltipFormat","datetime","_tickFormatFunction","minorFormat","majorFormat","formatter","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","normalize","table","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables","_adapters"],"sources":["C:/Users/adga2/Desktop/SmartRoom - Frontend/SmartRoomFrontend/node_modules/chart.js/dist/chart.esm.js"],"sourcesContent":["/*!\n * Chart.js v3.6.2\n * https://www.chartjs.org\n * (c) 2021 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, d as defaults, i as isObject, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as createContext, j as defined, s as sign, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as isNumber, w as _limitValue, x as _lookupByKey, y as getRelativePosition$1, z as _isPointInArea, A as _rlookupByKey, B as toPadding, C as each, D as getMaximumSize, E as _getParentNode, F as readUsedSize, G as throttled, I as supportsEventListenerOptions, J as _isDomSupported, K as log10, L as _factorize, M as finiteOrDefault, N as callback, O as _addGrace, Q as toDegrees, R as _measureText, S as _int16Range, U as _alignPixel, V as clipArea, W as renderText, X as unclipArea, Y as toFont, Z as _toLeftRightCenter, $ as _alignStartEnd, a0 as overrides, a1 as merge, a2 as _capitalize, a3 as descriptors, a4 as isFunction, a5 as _attachContext, a6 as _createResolver, a7 as _descriptors, a8 as mergeIf, a9 as uid, aa as debounce, ab as retinaScale, ac as clearCanvas, ad as setsEqual, ae as _elementsEqual, af as getAngleFromPoint, ag as _isBetween, ah as _readValueToProps, ai as _updateBezierControlPoints, aj as _computeSegments, ak as _boundSegments, al as _steppedInterpolation, am as _bezierInterpolation, an as _pointInLine, ao as _steppedLineTo, ap as _bezierCurveTo, aq as drawPoint, ar as addRoundedRectPath, as as toTRBL, at as toTRBLCorners, au as _boundSegment, av as _normalizeAngle, aw as getRtlAdapter, ax as overrideTextDirection, ay as _textX, az as restoreTextDirection, aA as noop, aB as distanceBetweenPoints, aC as _setMinAndMaxByKey, aD as niceNum, aE as almostWhole, aF as almostEquals, aG as _decimalPlaces, aH as _longestText, aI as _filterBetween, aJ as _lookup } from './chunks/helpers.segment.js';\nexport { d as defaults } from './chunks/helpers.segment.js';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    let remaining = 0;\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    this._lastDate = date;\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    if (this._active) {\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n    this._active = from !== to && (loop || (elapsed < duration));\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n    this._target[prop] = this._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\ndefaults.describe('animations', {\n  _fallback: 'animation',\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n  }\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, this);\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n  addElements() {\n    const meta = this._cachedMeta;\n    this._dataCheck();\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n    this._dataCheck();\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    this._resyncElements(resetNewElements);\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => this.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      this.parse(0, count);\n    }\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getMaxOverflow() {\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const metasets = iScale.getMatchingVisibleMetas(this._type);\n    const stacked = iScale.options.stacked;\n    const ilen = metasets.length;\n    const stacks = [];\n    let i, item;\n    for (i = 0; i < ilen; ++i) {\n      item = metasets[i];\n      if (!item.controller.options.grouped) {\n        continue;\n      }\n      if (typeof dataIndex !== 'undefined') {\n        const val = item.controller.getParsed(dataIndex)[\n          item.controller._cachedMeta.vScale.axis\n        ];\n        if (isNullOrUndef(val) || isNaN(val)) {\n          continue;\n        }\n      }\n      if (stacked === false || stacks.indexOf(item.stack) === -1 ||\n\t\t\t\t(stacked === undefined && item.stack === undefined)) {\n        stacks.push(item.stack);\n      }\n      if (item.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      head = base + size;\n    }\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const points = this._cachedMeta.data;\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n      if (includeOptions) {\n        properties.options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      this.updateElement(point, i, properties, mode);\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n    meta.total = this.calculateTotal();\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    let startAngle = this._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n      this.updateElement(arc, i, properties, mode);\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r',\n};\nDoughnutController.descriptors = {\n  _scriptable: (name) => name !== 'spacing',\n  _indexable: (name) => name !== 'spacing',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    this._drawStart = start;\n    this._drawCount = count;\n    if (scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    this.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        _lookupByKey(_parsed, iScale.axis, max).hi + 1,\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {start, count};\n}\nfunction scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const dataset = this.getDataset();\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / this.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(dataset.data[i]) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const dataset = this.getDataset();\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(dataset.data[index]) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      this.updateElement(line, undefined, properties, mode);\n    }\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const dataset = this.getDataset();\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, dataset.data[i]);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass ScatterController extends LineController {\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction getRelativePosition(e, chart) {\n  if ('native' in e) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n  return getRelativePosition$1(e, chart);\n}\nfunction evaluateAllVisibleItems(chart, handler) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  let index, data, element;\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    ({index, data} = metasets[i]);\n    for (let j = 0, jlen = data.length; j < jlen; ++j) {\n      element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction optimizedEvaluateItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition) {\n  const items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition) {\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  let items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (intersect && !element.inRange(position.x, position.y, useFinalPosition)) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    if (!_isPointInArea(center, chart.chartArea, chart._minPadding) && !element.inRange(position.x, position.y, useFinalPosition)) {\n      return;\n    }\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getAxisItems(chart, e, options, useFinalPosition) {\n  const position = getRelativePosition(e, chart);\n  const items = [];\n  const axis = options.axis;\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateAllVisibleItems(chart, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      intersectsItem = true;\n    }\n  });\n  if (options.intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition)\n        : getNearestItems(chart, position, axis, false, useFinalPosition);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition) :\n        getNearestItems(chart, position, axis, false, useFinalPosition);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getIntersectItems(chart, position, axis, useFinalPosition);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition);\n    },\n    x(chart, e, options, useFinalPosition) {\n      return getAxisItems(chart, e, {axis: 'x', intersect: options.intersect}, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      return getAxisItems(chart, e, {axis: 'y', intersect: options.intersect}, useFinalPosition);\n    }\n  }\n};\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  autoPadding: true,\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n  updateConfig(config) {\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition$1(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return this;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2,\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\ndefaults.describe('scales', {\n  _fallback: 'scale',\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n  _indexable: (name) => name !== 'backdropPadding',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    this.options = options.setContext(this.getContext());\n    this.axis = options.axis;\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n    this.beforeUpdate();\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n    this.beforeBuildTicks();\n    this.ticks = this.buildTicks() || [];\n    this.afterBuildTicks();\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n    this.configure();\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation();\n    this.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n    }\n    if (samplingEnabled) {\n      this._convertTicksToLabels(this.ticks);\n    }\n    this.beforeFit();\n    this.fit();\n    this.afterFit();\n    this.afterUpdate();\n  }\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = 0;\n      this.bottom = this.height;\n    }\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    callback(this.options[name], [this]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = this.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n    this._handleMargins();\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n    this.generateTickLabels(ticks);\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n    this.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const ticks = this.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const optsAtIndex = grid.setContext(this.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = grid.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(this, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      if (isHorizontal) {\n        x = pixel;\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        }\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor,\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n    const chart = this.chart;\n    const position = this.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const {chart, ctx, options: {grid}} = this;\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = this.ctx;\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = this.register(proto);\n    }\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n    if (hook === 'destroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n  return plugins;\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, plugins, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (let i = 0; i < plugins.length; i++) {\n    const plugin = plugins[i];\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, plugin, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {scriptable: false, indexable: false, allKeys: true});\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get platform() {\n    return this._config.platform;\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {},\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.6.2\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\nclass Chart {\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n    instances[this.id] = this;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    this.notifyPlugins('beforeInit');\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n    this.bindEvents();\n    this.notifyPlugins('afterInit');\n    return this;\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n    this.notifyPlugins('resize', {size: newSize});\n    callback(options.onResize, [this, newSize], this);\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        this.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n    this._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    this._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const config = this.config;\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n    this._plugins.invalidate();\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = this.buildOrUpdateControllers();\n    this.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    this._updateDatasets(mode);\n    this.notifyPlugins('afterUpdate', {mode});\n    this._layers.sort(compare2Level('z', '_idx'));\n    if (this._lastEvent) {\n      this._eventHandler(this._lastEvent, true);\n    }\n    this.render();\n  }\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(this, this.width, this.height, minPadding);\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    this.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n    meta.controller.draw();\n    if (useClip) {\n      unclipArea(ctx);\n    }\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n  destroy() {\n    const {canvas, ctx} = this;\n    this._stop();\n    this.config.clearCache();\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n    this.notifyPlugins('destroy');\n    delete instances[this.id];\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n    each(this.options.events, (type) => _add(type, listener));\n  }\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n    let detached;\n    const attached = () => {\n      _remove('attach', attached);\n      this.attached = true;\n      this.resize();\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n    detached = () => {\n      this.attached = false;\n      _remove('resize', listener);\n      this._stop();\n      this._resize(0, 0);\n      _add('attach', attached);\n    };\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const args = {event: e, replay, cancelable: true};\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = this._handleEvent(e, replay);\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      this.render();\n    }\n    return this;\n  }\n  _handleEvent(e, replay) {\n    const {_active: lastActive = [], options} = this;\n    const hoverOptions = options.hover;\n    const useFinalPosition = replay;\n    let active = [];\n    let changed = false;\n    let lastEvent = null;\n    if (e.type !== 'mouseout') {\n      active = this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n      lastEvent = e.type === 'click' ? this._lastEvent : e;\n    }\n    this._lastEvent = null;\n    if (_isPointInArea(e, this.chartArea, this._minPadding)) {\n      callback(options.onHover, [e, active, this], this);\n      if (e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu') {\n        callback(options.onClick, [e, active, this], this);\n      }\n    }\n    changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n    this._lastEvent = lastEvent;\n    return changed;\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element, endAngle) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\nfunction pathArc(ctx, element, offset, spacing, end) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n  if (spacing) {\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n  if (outerEnd > 0) {\n    const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n  }\n  const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n  ctx.lineTo(p4.x, p4.y);\n  if (innerEnd > 0) {\n    const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n  }\n  ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n  if (innerStart > 0) {\n    const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n  }\n  const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n  ctx.lineTo(p8.x, p8.y);\n  if (outerStart > 0) {\n    const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, pixelMargin, fullCircles} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, spacing, endAngle) {\n  const {options} = element;\n  const inner = options.borderAlign === 'inner';\n  if (!options.borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = options.borderWidth * 2;\n    ctx.lineJoin = 'round';\n  } else {\n    ctx.lineWidth = options.borderWidth;\n    ctx.lineJoin = 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 2;\n    const spacing = (options.spacing || 0) / 2;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    let radiusOffset = 0;\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (this.startAngle + this.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n      if (this.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, this, radiusOffset, spacing);\n    drawBorder(ctx, this, radiusOffset, spacing, endAngle);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined,\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n    start = start || 0;\n    count = count || (this.points.length - start);\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n    if (points.length && options.borderWidth) {\n      ctx.save();\n      draw(ctx, this, start, count);\n      ctx.restore();\n    }\n    if (this.animated) {\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx, area) {\n    const options = this.options;\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  inflateAmount: 'auto',\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {start, count};\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (meta.type !== 'line') {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\nfunction decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n    return target;\n  }\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  let target = null;\n  let horizontal;\n  if (fill === 'start') {\n    target = scale.bottom;\n  } else if (fill === 'end') {\n    target = scale.top;\n  } else if (isObject(fill)) {\n    target = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n  if (isNumberFinite(target)) {\n    horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? target : null,\n      y: horizontal ? null : target\n    };\n  }\n  return null;\n}\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const target = [];\n  const start = options.reverse ? scale.max : scale.min;\n  const end = options.reverse ? scale.min : scale.max;\n  let i, center, value;\n  if (fill === 'start') {\n    value = start;\n  } else if (fill === 'end') {\n    value = end;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  if (options.grid.circular) {\n    center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\nfunction getTarget(source) {\n  const {chart, fill, line} = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return buildStackLine(source);\n  }\n  if (fill === 'shape') {\n    return true;\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return createBoundaryLine(boundary, line);\n}\nfunction createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _clip(ctx, target, clipY) {\n  ctx.beginPath();\n  target.path(ctx);\n  ctx.lineTo(target.last().x, clipY);\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = findSegmentEnd(start, end, points);\n    const bounds = getBounds(property, points[start], points[end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\nfunction _fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, notShape && getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    _clip(ctx, target, area.top);\n    _fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    _clip(ctx, target, area.bottom);\n  }\n  _fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nfunction drawfill(ctx, source, area) {\n  const target = getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\nvar plugin_filler = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw) {\n        drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (source) {\n        drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [this.chart], this) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n    this.legendItems = legendItems;\n  }\n  fit() {\n    const {options, ctx} = this;\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (this.isHorizontal()) {\n      width = this.maxWidth;\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight;\n      width = this._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n      this._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    this.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxWidth * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(this.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(this.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = this.left;\n    let maxWidth = this.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          return this.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, this], this);\n      }\n      this._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if (type === 'mousemove' && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n    this.left = 0;\n    this.top = 0;\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip._chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._chart = config._chart;\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = this._chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this._chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this._chart.getContext(), this, this._tooltipItems));\n  }\n  getTitle(context, options) {\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(this, [context]);\n    const title = callbacks.title.apply(this, [context]);\n    const afterTitle = callbacks.afterTitle.apply(this, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(this, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(this, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(this, [tooltipItems]);\n    const footer = callbacks.footer.apply(this, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(this, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const active = this._active;\n    const data = this._chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this._chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(this, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(this, context));\n      labelTextColors.push(scoped.labelTextColor.call(this, context));\n    });\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this._chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this._chart);\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(this, {chart: this._chart, tooltip: this, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = labelColors.borderWidth || 1;\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const chart = this._chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n    if (!opacity) {\n      return;\n    }\n    this._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      this.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      this.drawTitle(pt, ctx, options);\n      this.drawBody(pt, ctx, options);\n      this.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this._chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this.update(true);\n    }\n  }\n  handleEvent(e, replay) {\n    const options = this.options;\n    const lastActive = this._active || [];\n    let changed = false;\n    let active = [];\n    if (e.type !== 'mouseout') {\n      active = this._chart.getElementsAtEventForMode(e, options.mode, options, replay);\n      if (options.reverse) {\n        active.reverse();\n      }\n    }\n    const positionChanged = this._positionChanged(active, e);\n    changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      this._active = active;\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        this.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({_chart: chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    const args = {\n      tooltip\n    };\n    if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n      return;\n    }\n    if (tooltip) {\n      tooltip.draw(chart.ctx);\n    }\n    chart.notifyPlugins('afterTooltipDraw', args);\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0,\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: plugin_filler,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    super.configure();\n    if (!this.isHorizontal()) {\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      let offset = 1;\n      if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n        offset = Math.abs(max * 0.05);\n      }\n      setMax(max + offset);\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n    super.configure();\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? min : 0;\n    this.max = isNumberFinite(max) ? max : 1;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n    this.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (this._zero && this.min !== this._suggestedMin && min === exp(this.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n  configure() {\n    const start = this.min;\n    super.configure();\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const furthestLimits = {\n    l: 0,\n    r: scale.width,\n    t: 0,\n    b: scale.height - scale.paddingTop\n  };\n  const furthestAngles = {};\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale.getLabels().length;\n  for (let i = 0; i < valueCount; i++) {\n    const opts = scale.options.pointLabels.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i]);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = scale.getIndexAngle(i);\n    const angle = toDegrees(angleRadians);\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    if (hLimits.start < furthestLimits.l) {\n      furthestLimits.l = hLimits.start;\n      furthestAngles.l = angleRadians;\n    }\n    if (hLimits.end > furthestLimits.r) {\n      furthestLimits.r = hLimits.end;\n      furthestAngles.r = angleRadians;\n    }\n    if (vLimits.start < furthestLimits.t) {\n      furthestLimits.t = vLimits.start;\n      furthestAngles.t = angleRadians;\n    }\n    if (vLimits.end > furthestLimits.b) {\n      furthestLimits.b = vLimits.end;\n      furthestAngles.b = angleRadians;\n    }\n  }\n  scale._setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale.getLabels().length;\n  const opts = scale.options;\n  const tickBackdropHeight = getTickBackdropHeight(opts);\n  const outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n  for (let i = 0; i < valueCount; i++) {\n    const extra = (i === 0 ? tickBackdropHeight / 2 : 0);\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i]);\n    const angle = toDegrees(scale.getIndexAngle(i));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y,\n      textAlign,\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      ctx.fillRect(left - padding.left, top - padding.top, right - left + padding.width, bottom - top + padding.height);\n    }\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction numberOrZero(param) {\n  return isNumber(param) ? param : 0;\n}\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    this.width = this.maxWidth;\n    this.height = this.maxHeight;\n    this.paddingTop = getTickBackdropHeight(this.options) / 2;\n    this.xCenter = Math.floor(this.width / 2);\n    this.yCenter = Math.floor((this.height - this.paddingTop) / 2);\n    this.drawingArea = Math.min(this.height - this.paddingTop, this.width) / 2;\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n    this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n    this._pointLabels = this.getLabels().map((value, index) => {\n      const label = callback(this.options.pointLabels.callback, [value, index], this);\n      return label || label === 0 ? label : '';\n    });\n  }\n  fit() {\n    const opts = this.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  _setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n    let radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n    let radiusReductionRight = Math.max(furthestLimits.r - this.width, 0) / Math.sin(furthestAngles.r);\n    let radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n    let radiusReductionBottom = -Math.max(furthestLimits.b - (this.height - this.paddingTop), 0) / Math.cos(furthestAngles.b);\n    radiusReductionLeft = numberOrZero(radiusReductionLeft);\n    radiusReductionRight = numberOrZero(radiusReductionRight);\n    radiusReductionTop = numberOrZero(radiusReductionTop);\n    radiusReductionBottom = numberOrZero(radiusReductionBottom);\n    this.drawingArea = Math.max(largestPossibleRadius / 2, Math.min(\n      Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),\n      Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2)));\n    this.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    const maxRight = this.width - rightMovement - this.drawingArea;\n    const maxLeft = leftMovement + this.drawingArea;\n    const maxTop = topMovement + this.drawingArea;\n    const maxBottom = (this.height - this.paddingTop) - bottomMovement - this.drawingArea;\n    this.xCenter = Math.floor(((maxLeft + maxRight) / 2) + this.left);\n    this.yCenter = Math.floor(((maxTop + maxBottom) / 2) + this.top + this.paddingTop);\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / this.getLabels().length;\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n  getPointPosition(index, distanceFromCenter) {\n    const angle = this.getIndexAngle(index) - HALF_PI;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this.getLabels().length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid} = opts;\n    const labelCount = this.getLabels().length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(this.getContext(index - 1));\n          drawRadiusLine(this, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = this.getLabels().length - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(this._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = this.min;\n    const max = this.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n  initOffsets(timestamps) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], this) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = this.getMatchingVisibleMetas();\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n    return (this._cache.data = this.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._minPos = undefined;\n    this._tableRange = undefined;\n  }\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n    if (items.length < 2) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n    return timestamps;\n  }\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, plugin_filler as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}