{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\klevi.alushi\\\\Desktop\\\\Frontend\\\\src\\\\components\\\\OverviewDeviceList.js\",\n  _s = $RefreshSig$();\nimport { React } from \"react\";\nimport { generatePath, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction OverviewDeviceList(props) {\n  _s();\n  let navigate = useNavigate();\n  const redirectToDevices = () => {\n    navigate(\"/devices\");\n  };\n  function redirectToDetailedDevice(id) {\n    let path = generatePath(\"/devices/:id/details\", {\n      id\n    });\n    navigate(path);\n  }\n  function printId(label) {\n    const deviceTypes = ['Camera', 'Sensor', 'TV', 'LIGHT', 'Lamps'];\n    let imageName = '-1.svg';\n    const lowercasedLabel = label.toLowerCase();\n    for (const type of deviceTypes) {\n      const lowercasedType = type.toLowerCase();\n      if (lowercasedLabel.includes(lowercasedType)) {\n        switch (type) {\n          case 'Camera':\n            imageName = '32.svg';\n            break;\n          case 'Sensor':\n            imageName = '23.svg';\n            break;\n          case 'TV':\n            imageName = 'tv.svg'; // Adjust this based on your actual TV image name\n            break;\n          case 'LIGHT':\n            imageName = 'light.svg'; // Adjust this based on your actual LIGHT image name\n            break;\n          case 'Lamps':\n            imageName = 'lamp.svg'; // Adjust this based on your actual Lamps image name\n            break;\n          default:\n            break;\n          // Add more cases if needed\n        }\n\n        break;\n      }\n    }\n    console.log(imageName);\n  }\n  function shortname(parameter) {\n    const fullWord = parameter.split('_');\n    const indiceSwitch = fullWord.indexOf('switch');\n    const selection = indiceSwitch !== -1 ? fullWord.slice(0, indiceSwitch) : fullWord.slice(0, 2);\n    const result = selection.join(' ');\n    return result;\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section-header\",\n        children: props.name + \" (\" + props.deviceList.length + \")\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: redirectToDevices,\n        className: \"btn-primary-no-background\",\n        children: \"View all\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scroll-area\",\n      children: [props.deviceList.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"altList\",\n        style: {\n          color: '#ef962e',\n          fontStyle: 'italic'\n        },\n        children: \"No devices found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this), props.deviceList.map(src => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"card hov-primary horizontal\",\n        onClick: () => redirectToDetailedDevice(src.name),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-image horizontal\",\n          onClick: () => {\n            printId(src.name);\n          },\n          style: {\n            backgroundImage: `url('/resources/${src.label}.svg')`\n          }\n        }, src.title, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-title horizontal\",\n          children: shortname(src.name)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(OverviewDeviceList, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = OverviewDeviceList;\nexport default OverviewDeviceList;\nvar _c;\n$RefreshReg$(_c, \"OverviewDeviceList\");","map":{"version":3,"names":["React","generatePath","useNavigate","OverviewDeviceList","props","navigate","redirectToDevices","redirectToDetailedDevice","id","path","printId","label","deviceTypes","imageName","lowercasedLabel","toLowerCase","type","lowercasedType","includes","console","log","shortname","parameter","fullWord","split","indiceSwitch","indexOf","selection","slice","result","join","name","deviceList","length","color","fontStyle","map","src","backgroundImage","title"],"sources":["C:/Users/klevi.alushi/Desktop/Frontend/src/components/OverviewDeviceList.js"],"sourcesContent":["import { React } from \"react\";\r\nimport { generatePath, useNavigate } from \"react-router-dom\";\r\n\r\nfunction OverviewDeviceList(props) {\r\n  let navigate = useNavigate();\r\n\r\n  const redirectToDevices = () => {\r\n    navigate(\"/devices\");\r\n  };\r\n\r\n  function redirectToDetailedDevice(id) {\r\n    let path = generatePath(\"/devices/:id/details\", { id });\r\n    navigate(path);\r\n  }\r\n\r\n  function printId(label) {\r\n  const deviceTypes = ['Camera', 'Sensor', 'TV', 'LIGHT', 'Lamps'];\r\n  let imageName = '-1.svg';\r\n\r\n  const lowercasedLabel = label.toLowerCase();\r\n\r\n  for (const type of deviceTypes) {\r\n    const lowercasedType = type.toLowerCase();\r\n\r\n    if (lowercasedLabel.includes(lowercasedType)) {\r\n      switch (type) {\r\n        case 'Camera':\r\n          imageName = '32.svg';\r\n          break;\r\n        case 'Sensor':\r\n          imageName = '23.svg';\r\n          break;\r\n        case 'TV':\r\n          imageName = 'tv.svg'; // Adjust this based on your actual TV image name\r\n          break;\r\n        case 'LIGHT':\r\n          imageName = 'light.svg'; // Adjust this based on your actual LIGHT image name\r\n          break;\r\n        case 'Lamps':\r\n          imageName = 'lamp.svg'; // Adjust this based on your actual Lamps image name\r\n          break;\r\n        default:\r\n          break;\r\n        // Add more cases if needed\r\n      }\r\n      break;\r\n    }\r\n  }\r\n\r\n  console.log(imageName);\r\n}\r\n\r\n  function shortname(parameter) {\r\n    const fullWord = parameter.split('_');\r\n    const indiceSwitch = fullWord.indexOf('switch');\r\n\r\n    const selection = indiceSwitch !== -1 ? fullWord.slice(0, indiceSwitch) : fullWord.slice(0, 2);\r\n    const result = selection.join(' ');\r\n\r\n    return result;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"header\">\r\n        <div className=\"section-header\">\r\n          {props.name + \" (\" + props.deviceList.length + \")\"}\r\n        </div>\r\n        <button\r\n          onClick={redirectToDevices}\r\n          className=\"btn-primary-no-background\"\r\n        >\r\n          View all\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"scroll-area\">\r\n        {props.deviceList.length === 0 && (\r\n            <div\r\n                className=\"altList\"\r\n                style={{\r\n                  color: '#ef962e',\r\n                  fontStyle: 'italic',\r\n                }}\r\n            >No devices found</div>\r\n        )}\r\n        {props.deviceList.map((src) => (\r\n          <button\r\n            className=\"card hov-primary horizontal\"\r\n            onClick={() =>\r\n              redirectToDetailedDevice(src.name)\r\n            }\r\n          >\r\n            <div\r\n              key = {src.title}\r\n              className = \"card-image horizontal\"\r\n              onClick={() =>{\r\n                printId(src.name)\r\n              }}\r\n              style={{\r\n                backgroundImage: `url('/resources/${src.label}.svg')`,\r\n              }}\r\n            />\r\n            <div className=\"card-title horizontal\">\r\n              {shortname(src.name)}\r\n            </div>\r\n          </button>\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default OverviewDeviceList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}