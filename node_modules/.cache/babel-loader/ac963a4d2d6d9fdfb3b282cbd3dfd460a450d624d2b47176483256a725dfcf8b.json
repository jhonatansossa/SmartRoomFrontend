{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adga2\\\\Desktop\\\\SmartRoom - Frontend\\\\SmartRoomFrontend\\\\src\\\\screens\\\\DoorStatus.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Axios from \"axios\";\nimport openHAB from \"../openHAB/openHAB\";\nimport OpenDoor from \"../Images/dooropened.png\";\nimport CloseDoor from \"../Images/doorclosed.jpg\";\nimport { token } from \"./Login/Login\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DoorStatus = () => {\n  _s();\n  let navigate = useNavigate();\n  const [openHABItems, setOpenHABItems] = useState([]);\n  const config = {\n    headers: {\n      Authorization: token\n    }\n  };\n  useEffect(() => {\n    document.title = \"SmartRoom – Door Status\";\n    let auth = sessionStorage.getItem(\"auth\");\n    if (auth !== \"true\") {\n      navigate(\"/login\");\n    } else {\n      fetchOpenHABItems();\n    }\n  }, []);\n  const fetchOpenHABItems = async () => {\n    try {\n      const response = await Axios(openHAB.url + \"/api/v1/devices/items\", config);\n      setOpenHABItems(response.data);\n    } catch (error) {\n      console.error(\"Error fetching openHAB items:\", error);\n    }\n  };\n  const doorItem = openHABItems.find(item => item.name === \"Door_Sensor_sensordoor_12_01\");\n  const doorStatus = doorItem ? doorItem.state : null;\n  if (!doorItem) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"noDevicesPopup\",\n      children: \"No door found. Make sure openHAB is running!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [doorStatus === \"CLOSED\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"DoorClose\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"title\",\n        align: \"center\",\n        children: [\"Door Status\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        align: \"center\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: CloseDoor,\n          alt: \"Door closed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        align: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 30\n        }, this), \"The door is closed\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), doorStatus === \"OPEN\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"DoorOpen\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"title\",\n        align: \"center\",\n        children: [\"Door Status\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        align: \"center\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: OpenDoor,\n          alt: \"Door opened\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        align: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 30\n        }, this), \"The door is opened\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(DoorStatus, \"KcLGnqEZ+u+eQAtQNPljX2YcHpY=\", false, function () {\n  return [useNavigate];\n});\n_c = DoorStatus;\nexport default DoorStatus;\nvar _c;\n$RefreshReg$(_c, \"DoorStatus\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","Axios","openHAB","OpenDoor","CloseDoor","token","DoorStatus","navigate","openHABItems","setOpenHABItems","config","headers","Authorization","document","title","auth","sessionStorage","getItem","fetchOpenHABItems","response","url","data","error","console","doorItem","find","item","name","doorStatus","state"],"sources":["C:/Users/adga2/Desktop/SmartRoom - Frontend/SmartRoomFrontend/src/screens/DoorStatus.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\nimport openHAB from \"../openHAB/openHAB\";\r\nimport OpenDoor from \"../Images/dooropened.png\";\r\nimport CloseDoor from \"../Images/doorclosed.jpg\";\r\nimport { token } from \"./Login/Login\";\r\n\r\nconst DoorStatus = () => {\r\n  let navigate = useNavigate();\r\n\r\n  const [openHABItems, setOpenHABItems] = useState([]);\r\n\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.title = \"SmartRoom – Door Status\";\r\n    let auth = sessionStorage.getItem(\"auth\");\r\n    if (auth !== \"true\") {\r\n      navigate(\"/login\");\r\n    } else {\r\n      fetchOpenHABItems();\r\n    }\r\n  }, []);\r\n\r\n  const fetchOpenHABItems = async () => {\r\n    try {\r\n      const response = await Axios(openHAB.url + \"/api/v1/devices/items\", config);\r\n      setOpenHABItems(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching openHAB items:\", error);\r\n    }\r\n  };\r\n\r\n  const doorItem = openHABItems.find((item) => item.name === \"Door_Sensor_sensordoor_12_01\");\r\n  const doorStatus = doorItem ? doorItem.state : null;\r\n\r\n  if (!doorItem) {\r\n    return (\r\n      <div className=\"noDevicesPopup\">\r\n        No door found. Make sure openHAB is running!\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  return (\r\n    <>\r\n\r\n      {doorStatus === \"CLOSED\" && (\r\n        <div className=\"DoorClose\">\r\n          <h2 className=\"title\" align=\"center\">\r\n            Door Status<br></br><br></br>\r\n          </h2>\r\n          <p align=\"center\"><img src={CloseDoor} alt=\"Door closed\" /></p>\r\n          <h4 align=\"center\"><br></br>The door is closed</h4>\r\n        </div>\r\n      )}\r\n\r\n      {doorStatus === \"OPEN\" && (\r\n        <div className=\"DoorOpen\">\r\n          <h2 className=\"title\" align=\"center\">\r\n            Door Status<br></br><br></br>\r\n          </h2>\r\n          <p align=\"center\"><img src={OpenDoor} alt=\"Door opened\" /></p>\r\n          <h4 align=\"center\"><br></br>The door is opened</h4>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DoorStatus;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}