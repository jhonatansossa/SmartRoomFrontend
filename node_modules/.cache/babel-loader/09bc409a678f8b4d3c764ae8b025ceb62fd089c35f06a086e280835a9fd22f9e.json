{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\klevi.alushi\\\\Desktop\\\\frontend\\\\src\\\\components\\\\OverviewTopDownSwitchElement.js\",\n  _s = $RefreshSig$();\nimport { React } from \"react\";\nimport { generatePath, useNavigate } from \"react-router-dom\";\nimport ReactTooltip from \"react-tooltip\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst updateColorSwitch = state => {\n  let color;\n  if (state === \"OFF\") {\n    color = \"#818181\";\n  } else {\n    color = \"#ef962e\";\n  }\n  return {\n    color\n  };\n};\nfunction OverviewTopDownSwitchElement(props) {\n  _s();\n  let navigate = useNavigate();\n  function redirectToDetailedSwitch(id) {\n    let path = generatePath(\"/switches/:id/details\", {\n      id\n    });\n    navigate(path);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: () => redirectToDetailedSwitch(props.id),\n    style: {\n      backgroundColor: updateColorSwitch(props.switches.find(s => s.name === props.id).state).color\n    },\n    id: props.id + \"Switch\",\n    className: \"square\",\n    \"data-tip\": true,\n    \"data-for\": props.id + \"Tooltip\",\n    children: [/*#__PURE__*/_jsxDEV(ReactTooltip, {\n      id: props.id + \"Tooltip\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: props.switches.find(s => s.name === props.id).label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"topdown-element-text\",\n      children: [props.switches.find(s => s.name === props.id).state, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(OverviewTopDownSwitchElement, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = OverviewTopDownSwitchElement;\nexport default OverviewTopDownSwitchElement;\nvar _c;\n$RefreshReg$(_c, \"OverviewTopDownSwitchElement\");","map":{"version":3,"names":["React","generatePath","useNavigate","ReactTooltip","updateColorSwitch","state","color","OverviewTopDownSwitchElement","props","navigate","redirectToDetailedSwitch","id","path","backgroundColor","switches","find","s","name","label"],"sources":["C:/Users/klevi.alushi/Desktop/frontend/src/components/OverviewTopDownSwitchElement.js"],"sourcesContent":["import { React } from \"react\";\r\nimport { generatePath, useNavigate } from \"react-router-dom\";\r\nimport ReactTooltip from \"react-tooltip\";\r\n\r\nconst updateColorSwitch = (state) => {\r\n  let color;\r\n  if (state === \"OFF\") {\r\n    color = \"#818181\";\r\n  } else {\r\n    color = \"#ef962e\";\r\n  }\r\n  return { color };\r\n};\r\n\r\nfunction OverviewTopDownSwitchElement(props) {\r\n  let navigate = useNavigate();\r\n\r\n  function redirectToDetailedSwitch(id) {\r\n    let path = generatePath(\"/switches/:id/details\", { id });\r\n    navigate(path);\r\n  }\r\n\r\n  return (\r\n    <div\r\n      onClick={() => redirectToDetailedSwitch(props.id)}\r\n      style={{\r\n        backgroundColor: updateColorSwitch(\r\n          props.switches.find((s) => s.name === props.id).state\r\n        ).color,\r\n      }}\r\n      id={props.id + \"Switch\"}\r\n      className=\"square\"\r\n      data-tip\r\n      data-for={props.id + \"Tooltip\"}\r\n    >\r\n      <ReactTooltip id={props.id + \"Tooltip\"}>\r\n        <span>{props.switches.find((s) => s.name === props.id).label}</span>\r\n      </ReactTooltip>\r\n      <div className=\"topdown-element-text\">\r\n        {props.switches.find((s) => s.name === props.id).state}\r\n        <br />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OverviewTopDownSwitchElement;\r\n"],"mappings":";;AAAA,SAASA,KAAK,QAAQ,OAAO;AAC7B,SAASC,YAAY,EAAEC,WAAW,QAAQ,kBAAkB;AAC5D,OAAOC,YAAY,MAAM,eAAe;AAAC;AAEzC,MAAMC,iBAAiB,GAAIC,KAAK,IAAK;EACnC,IAAIC,KAAK;EACT,IAAID,KAAK,KAAK,KAAK,EAAE;IACnBC,KAAK,GAAG,SAAS;EACnB,CAAC,MAAM;IACLA,KAAK,GAAG,SAAS;EACnB;EACA,OAAO;IAAEA;EAAM,CAAC;AAClB,CAAC;AAED,SAASC,4BAA4B,CAACC,KAAK,EAAE;EAAA;EAC3C,IAAIC,QAAQ,GAAGP,WAAW,EAAE;EAE5B,SAASQ,wBAAwB,CAACC,EAAE,EAAE;IACpC,IAAIC,IAAI,GAAGX,YAAY,CAAC,uBAAuB,EAAE;MAAEU;IAAG,CAAC,CAAC;IACxDF,QAAQ,CAACG,IAAI,CAAC;EAChB;EAEA,oBACE;IACE,OAAO,EAAE,MAAMF,wBAAwB,CAACF,KAAK,CAACG,EAAE,CAAE;IAClD,KAAK,EAAE;MACLE,eAAe,EAAET,iBAAiB,CAChCI,KAAK,CAACM,QAAQ,CAACC,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,IAAI,KAAKT,KAAK,CAACG,EAAE,CAAC,CAACN,KAAK,CACtD,CAACC;IACJ,CAAE;IACF,EAAE,EAAEE,KAAK,CAACG,EAAE,GAAG,QAAS;IACxB,SAAS,EAAC,QAAQ;IAClB,gBAAQ;IACR,YAAUH,KAAK,CAACG,EAAE,GAAG,SAAU;IAAA,wBAE/B,QAAC,YAAY;MAAC,EAAE,EAAEH,KAAK,CAACG,EAAE,GAAG,SAAU;MAAA,uBACrC;QAAA,UAAOH,KAAK,CAACM,QAAQ,CAACC,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,IAAI,KAAKT,KAAK,CAACG,EAAE,CAAC,CAACO;MAAK;QAAA;QAAA;QAAA;MAAA;IAAQ;MAAA;MAAA;MAAA;IAAA,QACvD,eACf;MAAK,SAAS,EAAC,sBAAsB;MAAA,WAClCV,KAAK,CAACM,QAAQ,CAACC,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,IAAI,KAAKT,KAAK,CAACG,EAAE,CAAC,CAACN,KAAK,eACtD;QAAA;QAAA;QAAA;MAAA,QAAM;IAAA;MAAA;MAAA;MAAA;IAAA,QACF;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV;AAAC,GA9BQE,4BAA4B;EAAA,QACpBL,WAAW;AAAA;AAAA,KADnBK,4BAA4B;AAgCrC,eAAeA,4BAA4B;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}