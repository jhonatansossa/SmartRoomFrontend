{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\klevi.alushi\\\\Desktop\\\\frontend\\\\src\\\\screens\\\\Overview.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport Axios from \"axios\";\nimport openHAB from \"../openHAB/openHAB\";\nimport OverviewTopDownDeviceElement from \"../components/OverviewTopDownDeviceElement\";\nimport OverviewTopDownSwitchElement from \"../components/OverviewTopDownSwitchElement\";\nimport OverviewDeviceList from \"../components/OverviewDeviceList\";\nimport OverviewSwitchList from \"../components/OverviewSwitchList\";\nimport OverviewTopDownStaticElement from \"../components/OverviewTopDownStaticElement\";\nimport Counter from \"../components/Counter\";\nimport { useNavigate } from \"react-router-dom\";\nimport base64 from 'base-64';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Overview = () => {\n  _s();\n  const [token, setToken] = useState(openHAB.token); // Store the token in state\n  const [openHABItems, setOpenHABItems] = useState([]);\n  const navigate = useNavigate();\n  const config = {\n    headers: {\n      Authorization: `Bearer ${token}`\n    } // Use the token in the headers\n  };\n\n  const timerRef = useRef(null);\n  useEffect(() => {\n    document.title = \"SmartRoom â€“ Overview\";\n    let auth = sessionStorage.getItem(\"auth\");\n    if (auth !== \"true\") {\n      navigate(\"/login\");\n    } else {\n      setToken(openHAB.token); // Update the token in state\n      timerRef.current = setInterval(function () {\n        fetchOpenHABItems();\n      }, 1000);\n      return () => {\n        clearInterval(timerRef.current);\n      };\n    }\n  }, [openHAB.token]); // Add openHAB.token to dependencies array\n\n  const fetchOpenHABItems = async () => {\n    const response = await Axios(openHAB.url + \"/api/v1/devices/items\", config);\n    setOpenHABItems(response.data);\n  };\n  var switches = [];\n  var devices = [];\n  openHABItems.forEach(function (item) {\n    if (item.type === \"Switch\") {\n      if (\"stateDescription\" in item) {\n        if (\"readOnly\" in item.stateDescription) {\n          if (item.stateDescription.readOnly === false) switches.push(item);\n        }\n      }\n    }\n    if (\"stateDescription\" in item) {\n      if (\"options\" in item.stateDescription) {\n        if (item.stateDescription.options.length > 0) {\n          item.stateDescription.options.forEach(function (value) {\n            if (value.value === \"device\") {\n              devices.push(item);\n            }\n          });\n        }\n      }\n    }\n  });\n  //Turned on devices\n  var totalConsumption = 0.0;\n  var turnedOnDevices = [];\n  devices.forEach(function (item) {\n    if (item.state > 0) {\n      turnedOnDevices.push(item);\n      console.log(item.label + item.state);\n      totalConsumption = parseFloat(totalConsumption) + parseFloat(item.state);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card cardCounter\",\n        children: [/*#__PURE__*/_jsxDEV(Counter, {\n          value: totalConsumption,\n          text: \"Total consumption in kWh\",\n          unit: \"kWh\",\n          unitDescription: \"Kilowatt hours\",\n          description: \"This value represents the total overall energy consumption of the smart room\",\n          decimals: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Counter, {\n          value: totalConsumption / devices.length,\n          text: \"Average consumption in kWh\",\n          unit: \"kWh\",\n          unitDescription: \"Kilowatt hours\",\n          description: \"This value represents the average overall energy consumption per device of the smart room\",\n          decimals: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Counter, {\n          value: devices.length,\n          text: \"Devices\",\n          description: \"This value represents the amount of devices in the smart room\",\n          decimals: \"0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Counter, {\n          value: turnedOnDevices.length,\n          text: \"Turned on devices\",\n          description: \"This value represents the amount of turned on devices in the smart room\",\n          decimals: \"0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Counter, {\n          value: switches.length,\n          text: \"Switches\",\n          description: \"This value represents the amount of switches in the smart room\",\n          decimals: \"0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-container\",\n        children: [/*#__PURE__*/_jsxDEV(OverviewTopDownStaticElement, {\n          id: \"circle\",\n          name: \"Round table\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(OverviewTopDownStaticElement, {\n          id: \"horRectangle\",\n          name: \"Table\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(OverviewTopDownStaticElement, {\n          id: \"server\",\n          name: \"Server\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(OverviewTopDownStaticElement, {\n          id: \"door\",\n          name: \"Door\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), devices.length === 0 && devices.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"noDevicesPopup\",\n          children: \"No devices or switches found. Make sure openHAB is running!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this), devices.map(device => /*#__PURE__*/_jsxDEV(OverviewTopDownDeviceElement, {\n          id: device.stateDescription.options[2].value,\n          devices: devices\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this)), switches.map(s => /*#__PURE__*/_jsxDEV(OverviewTopDownSwitchElement, {\n          id: s.name,\n          switches: switches\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(OverviewDeviceList, {\n        name: \"Turned on devices\",\n        deviceList: turnedOnDevices\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(OverviewSwitchList, {\n        name: \"Switches\",\n        switchList: switches\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Overview, \"EqW6vyfLkUTlFsKANNo84GucQ6c=\", false, function () {\n  return [useNavigate];\n});\n_c = Overview;\nexport default Overview;\nvar _c;\n$RefreshReg$(_c, \"Overview\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Axios","openHAB","OverviewTopDownDeviceElement","OverviewTopDownSwitchElement","OverviewDeviceList","OverviewSwitchList","OverviewTopDownStaticElement","Counter","useNavigate","base64","Overview","token","setToken","openHABItems","setOpenHABItems","navigate","config","headers","Authorization","timerRef","document","title","auth","sessionStorage","getItem","current","setInterval","fetchOpenHABItems","clearInterval","response","url","data","switches","devices","forEach","item","type","stateDescription","readOnly","push","options","length","value","totalConsumption","turnedOnDevices","state","console","log","label","parseFloat","map","device","s","name"],"sources":["C:/Users/klevi.alushi/Desktop/frontend/src/screens/Overview.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport openHAB from \"../openHAB/openHAB\";\r\nimport OverviewTopDownDeviceElement from \"../components/OverviewTopDownDeviceElement\";\r\nimport OverviewTopDownSwitchElement from \"../components/OverviewTopDownSwitchElement\";\r\nimport OverviewDeviceList from \"../components/OverviewDeviceList\";\r\nimport OverviewSwitchList from \"../components/OverviewSwitchList\";\r\nimport OverviewTopDownStaticElement from \"../components/OverviewTopDownStaticElement\";\r\nimport Counter from \"../components/Counter\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport base64 from 'base-64';\r\n\r\nconst Overview = () => {\r\n  const [token, setToken] = useState(openHAB.token);  // Store the token in state\r\n  const [openHABItems, setOpenHABItems] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  const config = {\r\n    headers: { Authorization: `Bearer ${token}` },  // Use the token in the headers\r\n  };\r\n\r\n  const timerRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    document.title = \"SmartRoom â€“ Overview\";\r\n    let auth = sessionStorage.getItem(\"auth\");\r\n    if (auth !== \"true\") {\r\n      navigate(\"/login\");\r\n    } else {\r\n      setToken(openHAB.token);  // Update the token in state\r\n      timerRef.current = setInterval(function () {\r\n        fetchOpenHABItems();\r\n      }, 1000);\r\n      return () => {\r\n        clearInterval(timerRef.current);\r\n      };\r\n    }\r\n  }, [openHAB.token]);  // Add openHAB.token to dependencies array\r\n\r\n  const fetchOpenHABItems = async () => {\r\n    const response = await Axios(openHAB.url + \"/api/v1/devices/items\", config);\r\n    setOpenHABItems(response.data);\r\n  };\r\n\r\n  var switches = [];\r\n  var devices = [];\r\n  openHABItems.forEach(function (item) {\r\n    if (item.type === \"Switch\") {\r\n      if (\"stateDescription\" in item) {\r\n        if (\"readOnly\" in item.stateDescription) {\r\n          if (item.stateDescription.readOnly === false) switches.push(item);\r\n        }\r\n      }\r\n    }\r\n    if (\"stateDescription\" in item) {\r\n      if (\"options\" in item.stateDescription) {\r\n        if (item.stateDescription.options.length > 0) {\r\n          item.stateDescription.options.forEach(function (value) {\r\n            if (value.value === \"device\") {\r\n              devices.push(item);\r\n            }\r\n          });\r\n        }\r\n      }\r\n    }\r\n  });\r\n  //Turned on devices\r\n  var totalConsumption = 0.0;\r\n  var turnedOnDevices = [];\r\n  devices.forEach(function (item) {\r\n    if (item.state > 0) {\r\n      turnedOnDevices.push(item);\r\n      console.log(item.label + item.state);\r\n      totalConsumption = parseFloat(totalConsumption) + parseFloat(item.state);\r\n    }\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <div className=\"card cardCounter\">\r\n          <Counter\r\n            value={totalConsumption}\r\n            text=\"Total consumption in kWh\"\r\n            unit=\"kWh\"\r\n            unitDescription=\"Kilowatt hours\"\r\n            description=\"This value represents the total overall energy consumption of the smart room\"\r\n            decimals=\"2\"\r\n          />\r\n          <Counter\r\n            value={totalConsumption / devices.length}\r\n            text=\"Average consumption in kWh\"\r\n            unit=\"kWh\"\r\n            unitDescription=\"Kilowatt hours\"\r\n            description=\"This value represents the average overall energy consumption per device of the smart room\"\r\n            decimals=\"2\"\r\n          />\r\n          <Counter\r\n            value={devices.length}\r\n            text=\"Devices\"\r\n            description=\"This value represents the amount of devices in the smart room\"\r\n            decimals=\"0\"\r\n          />\r\n          <Counter\r\n            value={turnedOnDevices.length}\r\n            text=\"Turned on devices\"\r\n            description=\"This value represents the amount of turned on devices in the smart room\"\r\n            decimals=\"0\"\r\n          />\r\n          <Counter\r\n            value={switches.length}\r\n            text=\"Switches\"\r\n            description=\"This value represents the amount of switches in the smart room\"\r\n            decimals=\"0\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"flex-container\">\r\n          <OverviewTopDownStaticElement id=\"circle\" name=\"Round table\"/>\r\n          <OverviewTopDownStaticElement id=\"horRectangle\" name=\"Table\" />\r\n          <OverviewTopDownStaticElement id=\"server\" name=\"Server\" />\r\n          <OverviewTopDownStaticElement id=\"door\" name=\"Door\" />\r\n\r\n          {devices.length === 0 && devices.length === 0 && (\r\n            <div className=\"noDevicesPopup\">\r\n              No devices or switches found. Make sure openHAB is running!\r\n            </div>\r\n          )}\r\n\r\n          {devices.map((device) => (\r\n            <OverviewTopDownDeviceElement\r\n              id = {device.stateDescription.options[2].value}\r\n              devices = {devices}\r\n            />\r\n          ))}\r\n\r\n          {switches.map((s) => (\r\n            <OverviewTopDownSwitchElement id={s.name} switches={switches} />\r\n          ))}\r\n        </div>\r\n        \r\n        <OverviewDeviceList\r\n          name = {\"Turned on devices\"}\r\n          deviceList={turnedOnDevices}\r\n        />\r\n        <OverviewSwitchList name={\"Switches\"} switchList={switches} />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Overview;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}