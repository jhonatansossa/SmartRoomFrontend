{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adga2\\\\Desktop\\\\SmartRoom\\\\src\\\\screens\\\\DoorStatus.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { generatePath, useNavigate } from \"react-router-dom\";\nimport openHAB from \"../openHAB/openHAB\";\nimport Axios from \"axios\";\n//import OpenDoor from \"../Images/opendoor.png\";\n//import CloseDoor from \"../Images/closedoor.png\";\nimport ToggleButton from \"react-toggle-button\";\nimport { token } from \"./Login/Login\";\nimport base64 from 'base-64';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DoorStatus = () => {\n  _s();\n  let navigate = useNavigate();\n  const [openHABItems, setOpenHABItems] = useState([]);\n  const [toggle, setToggle] = useState(false);\n\n  //let base64 = require(\"base-64\");\n  const config = {\n    headers: {\n      Authorization: token\n    }\n  };\n  useEffect(() => {\n    document.title = \"SmartRoom – Door Status\";\n    let auth = sessionStorage.getItem(\"auth\");\n    if (auth !== \"true\") {\n      navigate(\"/login\");\n    } else {\n      fetchOpenHABItems();\n    }\n  }, []);\n  const fetchOpenHABItems = async () => {\n    const response = await Axios(openHAB.url + \"/api/v1/devices/items\", config);\n    setOpenHABItems(response.data);\n  };\n  var devices = [];\n  openHABItems.forEach(function (item) {\n    if (\"stateDescription\" in item) {\n      if (\"options\" in item.stateDescription) {\n        if (item.stateDescription.options.length > 0) {\n          item.stateDescription.options.forEach(function (value) {\n            if (value.value === \"device\") {\n              devices.push(item);\n            }\n          });\n        }\n      }\n    }\n  });\n\n  /*\r\n   \r\n     \r\n   */\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [devices.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"noDevicesPopup\",\n      children: \"No door found. Make sure openHAB is running!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n      value: toggle,\n      onToggle: () => {\n        setToggle(!toggle);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(DoorStatus, \"HOEAwPtRnDdTG54ZVBiemb8HDaI=\", false, function () {\n  return [useNavigate];\n});\n_c = DoorStatus;\nexport default DoorStatus;\nvar _c;\n$RefreshReg$(_c, \"DoorStatus\");","map":{"version":3,"names":["React","useEffect","useState","generatePath","useNavigate","openHAB","Axios","ToggleButton","token","base64","DoorStatus","navigate","openHABItems","setOpenHABItems","toggle","setToggle","config","headers","Authorization","document","title","auth","sessionStorage","getItem","fetchOpenHABItems","response","url","data","devices","forEach","item","stateDescription","options","length","value","push"],"sources":["C:/Users/adga2/Desktop/SmartRoom/src/screens/DoorStatus.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { generatePath, useNavigate } from \"react-router-dom\";\r\nimport openHAB from \"../openHAB/openHAB\";\r\nimport Axios from \"axios\";\r\n//import OpenDoor from \"../Images/opendoor.png\";\r\n//import CloseDoor from \"../Images/closedoor.png\";\r\nimport ToggleButton from \"react-toggle-button\";\r\nimport { token } from \"./Login/Login\";\r\nimport base64 from 'base-64';\r\n\r\n\r\n\r\n\r\nconst DoorStatus = () => {\r\n  let navigate = useNavigate();\r\n\r\n  const [openHABItems, setOpenHABItems] = useState([]);\r\n  const [toggle, setToggle] = useState(false);\r\n\r\n  //let base64 = require(\"base-64\");\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.title = \"SmartRoom – Door Status\";\r\n    let auth = sessionStorage.getItem(\"auth\")\r\n    if(auth !== \"true\") {\r\n      navigate(\"/login\");\r\n    }else{\r\n      fetchOpenHABItems();\r\n    }\r\n  }, []);\r\n\r\n  const fetchOpenHABItems = async () => {\r\n    const response = await Axios(openHAB.url + \"/api/v1/devices/items\", config);\r\n    setOpenHABItems(response.data);\r\n  };\r\n\r\n\r\n  var devices = [];\r\n  openHABItems.forEach(function (item) {\r\n    if (\"stateDescription\" in item) {\r\n      if (\"options\" in item.stateDescription) {\r\n        if (item.stateDescription.options.length > 0) {\r\n          item.stateDescription.options.forEach(function (value) {\r\n            if (value.value === \"device\") {\r\n              devices.push(item);\r\n            }\r\n          });\r\n        }\r\n      }\r\n    }\r\n  });\r\n\r\n   /*\r\n    \r\n\r\n    \r\n    */\r\n   \r\n  return (\r\n    <>\r\n\r\n      {devices.length === 0 &&\r\n      <div className=\"noDevicesPopup\">\r\n        No door found. Make sure openHAB is running!\r\n      </div>}\r\n      <ToggleButton\r\n        value={toggle}\r\n        onToggle={() => {\r\n          setToggle(!toggle);\r\n        }}\r\n      />\r\n\r\n      {/* {!toggle &&\r\n      <div className=\"DoorClose\">\r\n        \r\n        <h2 className=\"title\" align=\"center\">Door Status<br></br><br></br></h2>\r\n        <p align=\"center\" margin-left=\"2px\"><img src={CloseDoor}></img></p>\r\n\r\n        <h4 align=\"center\"><br></br>The door is close</h4>\r\n        \r\n      </div>}\r\n\r\n      {toggle &&\r\n      <div className=\"DoorOpen\">\r\n        \r\n      <h2 className=\"title\" align=\"center\">Door Status<br></br><br></br></h2>\r\n      <p align=\"center\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<img src={OpenDoor}></img></p>\r\n\r\n      <h4 align=\"center\"><br></br>The door is open</h4>\r\n      \r\n    </div>} */}\r\n  \r\n\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DoorStatus;\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,YAAY,EAAEC,WAAW,QAAQ,kBAAkB;AAC5D,OAAOC,OAAO,MAAM,oBAAoB;AACxC,OAAOC,KAAK,MAAM,OAAO;AACzB;AACA;AACA,OAAOC,YAAY,MAAM,qBAAqB;AAC9C,SAASC,KAAK,QAAQ,eAAe;AACrC,OAAOC,MAAM,MAAM,SAAS;AAAC;AAAA;AAK7B,MAAMC,UAAU,GAAG,MAAM;EAAA;EACvB,IAAIC,QAAQ,GAAGP,WAAW,EAAE;EAE5B,MAAM,CAACQ,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACY,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;;EAE3C;EACA,MAAMc,MAAM,GAAG;IACbC,OAAO,EAAE;MAAEC,aAAa,EAAEV;IAAM;EAClC,CAAC;EAEDP,SAAS,CAAC,MAAM;IACdkB,QAAQ,CAACC,KAAK,GAAG,yBAAyB;IAC1C,IAAIC,IAAI,GAAGC,cAAc,CAACC,OAAO,CAAC,MAAM,CAAC;IACzC,IAAGF,IAAI,KAAK,MAAM,EAAE;MAClBV,QAAQ,CAAC,QAAQ,CAAC;IACpB,CAAC,MAAI;MACHa,iBAAiB,EAAE;IACrB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,iBAAiB,GAAG,YAAY;IACpC,MAAMC,QAAQ,GAAG,MAAMnB,KAAK,CAACD,OAAO,CAACqB,GAAG,GAAG,uBAAuB,EAAEV,MAAM,CAAC;IAC3EH,eAAe,CAACY,QAAQ,CAACE,IAAI,CAAC;EAChC,CAAC;EAGD,IAAIC,OAAO,GAAG,EAAE;EAChBhB,YAAY,CAACiB,OAAO,CAAC,UAAUC,IAAI,EAAE;IACnC,IAAI,kBAAkB,IAAIA,IAAI,EAAE;MAC9B,IAAI,SAAS,IAAIA,IAAI,CAACC,gBAAgB,EAAE;QACtC,IAAID,IAAI,CAACC,gBAAgB,CAACC,OAAO,CAACC,MAAM,GAAG,CAAC,EAAE;UAC5CH,IAAI,CAACC,gBAAgB,CAACC,OAAO,CAACH,OAAO,CAAC,UAAUK,KAAK,EAAE;YACrD,IAAIA,KAAK,CAACA,KAAK,KAAK,QAAQ,EAAE;cAC5BN,OAAO,CAACO,IAAI,CAACL,IAAI,CAAC;YACpB;UACF,CAAC,CAAC;QACJ;MACF;IACF;EACF,CAAC,CAAC;;EAED;AACH;AACA;AACA;;EAGE,oBACE;IAAA,WAEGF,OAAO,CAACK,MAAM,KAAK,CAAC,iBACrB;MAAK,SAAS,EAAC,gBAAgB;MAAA,UAAC;IAEhC;MAAA;MAAA;MAAA;IAAA,QAAM,eACN,QAAC,YAAY;MACX,KAAK,EAAEnB,MAAO;MACd,QAAQ,EAAE,MAAM;QACdC,SAAS,CAAC,CAACD,MAAM,CAAC;MACpB;IAAE;MAAA;MAAA;MAAA;IAAA,QACF;EAAA,gBAuBD;AAEP,CAAC;AAAC,GArFIJ,UAAU;EAAA,QACCN,WAAW;AAAA;AAAA,KADtBM,UAAU;AAuFhB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}