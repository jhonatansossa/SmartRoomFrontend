{"ast":null,"code":"import measurements from \"../dummyData/Measurements\";\nexport default function apiCallBackend(requestbody) {\n  const requestOptions = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(requestbody)\n  };\n  return fetch('http://127.0.0.1:5000/api/v1/devices/getlastmeasurements', requestOptions).then(response => {\n    if (!response.ok) {\n      return measurements;\n    } else {\n      return response.json();\n    }\n  }).catch(e => {\n    console.log(e);\n    return measurements;\n  });\n}","map":{"version":3,"names":["measurements","apiCallBackend","requestbody","requestOptions","method","headers","body","JSON","stringify","fetch","then","response","ok","json","catch","e","console","log"],"sources":["C:/Users/klevi.alushi/Desktop/FrontendKlevi/src/services/ApiCallBackend.js"],"sourcesContent":["import measurements from \"../dummyData/Measurements\"\r\n\r\nexport default function apiCallBackend(requestbody) {\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(requestbody)\r\n    };\r\n\r\n    return fetch('http://127.0.0.1:5000/api/v1/devices/getlastmeasurements', requestOptions)\r\n      .then(response => {\r\n          if (!response.ok) {\r\n              return measurements\r\n            } else {\r\n              return response.json()\r\n            }\r\n        })\r\n        .catch(e => {\r\n          console.log(e)\r\n          return measurements\r\n        });\r\n}"],"mappings":"AAAA,OAAOA,YAAY,MAAM,2BAA2B;AAEpD,eAAe,SAASC,cAAc,CAACC,WAAW,EAAE;EAChD,MAAMC,cAAc,GAAG;IACrBC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACN,WAAW;EAClC,CAAC;EAED,OAAOO,KAAK,CAAC,0DAA0D,EAAEN,cAAc,CAAC,CACrFO,IAAI,CAACC,QAAQ,IAAI;IACd,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;MACd,OAAOZ,YAAY;IACrB,CAAC,MAAM;MACL,OAAOW,QAAQ,CAACE,IAAI,EAAE;IACxB;EACJ,CAAC,CAAC,CACDC,KAAK,CAACC,CAAC,IAAI;IACVC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC;IACd,OAAOf,YAAY;EACrB,CAAC,CAAC;AACV"},"metadata":{},"sourceType":"module","externalDependencies":[]}